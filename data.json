{
  "348804": {
    "authors": [
      113814
    ],
    "num_watchers": 8862,
    "id": 348804,
    "org_owned": true,
    "relevant_users": {
      "111464": {
        "country_code": "fr",
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": "France",
        "company": null,
        "login": "vpelletier",
        "fake": 0,
        "state": null,
        "created_at": 1264645108,
        "id": 111464,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": null
      },
      "113814": {
        "country_code": "de",
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": "Berlin",
        "company": null,
        "login": "tewdreyer",
        "fake": 0,
        "state": "Berlin",
        "created_at": 1305911821,
        "id": 113814,
        "num_prior_commits": 1,
        "is_owner_member": false,
        "city": "Berlin"
      },
      "117758": {
        "country_code": "de",
        "is_project_member": {
          "created_at": 1314197415,
          "ext_ref_id": "501f1d31edecb555c000103d"
        },
        "type": "USR",
        "deleted": 0,
        "location": "Germany",
        "company": "Tinkerforge GmbH",
        "login": "borg42",
        "fake": 0,
        "state": null,
        "created_at": 1296149373,
        "id": 117758,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": null
      }
    },
    "project": {
      "full_name": "Tinkerforge/brickd",
      "created_at": 1314204615,
      "description": "Bridge between Bricks and Bricklets (USB) and API bindings (TCP/IP)",
      "html_url": "https://github.com/Tinkerforge/brickd",
      "num_forks": 9,
      "name": "brickd",
      "id": 2261493,
      "language": "C",
      "mysql_id": 56891
    },
    "owner": 117730,
    "pull_request": {
      "created_at": 1344350435,
      "issue_id": 4,
      "html_url": "https://github.com/Tinkerforge/brickd/pull/4",
      "number": 4,
      "merged": true,
      "title": "libusb: getDeviceList(): skip any device that throws an error",
      "id": 1991690,
      "opened_by": 113814,
      "body": "hi guys..\n\ni ran into another error thrown by libusb while running brickd. this time LIBUSB_ERROR_IO is thrown while a mobile phone is connected to the computer.\n\n```\n$> brickd nodaemon\n2012-08-03 12:29:02 <ERROR> <usb_notifier.py:77> Could not enumerate USB devices\nTraceback (most recent call last):\n  File \"/project/azubi/tinkerforge/share/brickd/usb_notifier.py\", line 72, in find_all_devices\n    for device in self.context.getDeviceList(True):\n  File \"/project/azubi/tinkerforge/share/brickd/libusb/usb1.py\", line 1494, in wrapper\n    return func(self, *args, **kw)\n  File \"/project/azubi/tinkerforge/share/brickd/libusb/usb1.py\", line 1573, in getDeviceList\n    device = USBDevice(self, libusb_device_p(device_p.contents))\n  File \"/project/azubi/tinkerforge/share/brickd/libusb/usb1.py\", line 1290, in __init__\n    raise libusb1.USBError(result)\nUSBError: LIBUSB_ERROR_IO [-1]\n```\n\nthis patch extends the last implementation of getDeviceList() by catching all LIBUSB\\_ERROR\\_\\* while instantiating the connected usb devices and skipping those that fail with an error.\n\nplease review that patch and perhaps integrate it.\n\nbest regards\ntobi",
      "mysql_id": 348804
    },
    "issue_events": [
      {
        "created_at": 1344607392,
        "actor_id": 117758,
        "action": "referenced",
        "action_specific": "54bfb3f208b872a183b3aa9fc3ef6db95f2b3a61",
        "event_id": "22467641"
      },
      {
        "created_at": 1344607392,
        "actor_id": 117758,
        "action": "merged",
        "action_specific": "54bfb3f208b872a183b3aa9fc3ef6db95f2b3a61",
        "event_id": "22467642"
      },
      {
        "created_at": 1344607392,
        "actor_id": 117758,
        "action": "closed",
        "action_specific": null,
        "event_id": "22467643"
      }
    ],
    "issue_comments": [
      {
        "created_at": 1344607400,
        "user_id": 117758,
        "comment_id": "7640307",
        "body": "Thanks!"
      },
      {
        "created_at": 1351339392,
        "user_id": 111464,
        "comment_id": "9834193",
        "body": "For some reason, github decided to not notify me of anything going on on starred projects. And I missed this patch. And I thought I had no feedback on python-libusb1 for long enough to release a \"1.0\" version.\r\n...And I realise that my fear of catching too many exceptions is actually causing overcomplex code there, and I like your solution better :) .\r\n\r\nedit: s/errors/exceptions/\r\nedit2: +for long enough"
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1344353887,
        "author_id": 113814,
        "sha": "38ebc52ae442e7c6aeae180ed6059820f4f5572e",
        "id": 1869522,
        "committer_id": 113814,
        "comments": []
      }
    ]
  },
  "348809": {
    "authors": [
      113814
    ],
    "num_watchers": 8862,
    "id": 348809,
    "org_owned": true,
    "relevant_users": {
      "111464": {
        "country_code": "fr",
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": "France",
        "company": null,
        "login": "vpelletier",
        "fake": 0,
        "state": null,
        "created_at": 1264645108,
        "id": 111464,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": null
      },
      "113814": {
        "country_code": "de",
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": "Berlin",
        "company": null,
        "login": "tewdreyer",
        "fake": 0,
        "state": "Berlin",
        "created_at": 1305911821,
        "id": 113814,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "Berlin"
      },
      "117737": {
        "country_code": null,
        "is_project_member": {
          "created_at": 1314197415,
          "ext_ref_id": "501f1d31edecb555c000103e"
        },
        "type": "USR",
        "deleted": 0,
        "location": null,
        "company": null,
        "login": "photron",
        "fake": 0,
        "state": null,
        "created_at": 1249610045,
        "id": 117737,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": null
      },
      "117758": {
        "country_code": "de",
        "is_project_member": {
          "created_at": 1314197415,
          "ext_ref_id": "501f1d31edecb555c000103d"
        },
        "type": "USR",
        "deleted": 0,
        "location": "Germany",
        "company": "Tinkerforge GmbH",
        "login": "borg42",
        "fake": 0,
        "state": null,
        "created_at": 1296149373,
        "id": 117758,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": null
      }
    },
    "project": {
      "full_name": "Tinkerforge/brickd",
      "created_at": 1314204615,
      "description": "Bridge between Bricks and Bricklets (USB) and API bindings (TCP/IP)",
      "html_url": "https://github.com/Tinkerforge/brickd",
      "num_forks": 9,
      "name": "brickd",
      "id": 2261493,
      "language": "C",
      "mysql_id": 56891
    },
    "owner": 117730,
    "pull_request": {
      "created_at": 1343818454,
      "issue_id": 3,
      "html_url": "https://github.com/Tinkerforge/brickd/pull/3",
      "number": 3,
      "merged": true,
      "title": "run brickd as non-root user",
      "id": 1942716,
      "opened_by": 113814,
      "body": "hi guys,\n\nthis set of commit enables a non-root user to run brickd.\n\nat first adjust the location of brickd's logfile and pidfile. they are now placed in a directory specified by the environment variables TF_RUNTIME_DIR or XDG_RUNTIME_DIR and TF_LOG_DIR. if these variables do not exist, the hardcoded locations are not changed.\n\nsecond change is related to gathering all connected usb devices. my patch ignores all devices that the user is not able to connect to.\n\nit would be great, if you integrate my patch into your repository.\n\nbest regards\ntobias dreyer",
      "mysql_id": 348809
    },
    "issue_events": [
      {
        "created_at": 1343818454,
        "actor_id": 113814,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "21754342"
      },
      {
        "created_at": 1343819152,
        "actor_id": 117758,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "21755212"
      },
      {
        "created_at": 1343827326,
        "actor_id": 113814,
        "action": "mentioned",
        "action_specific": null,
        "event_id": "21766291"
      },
      {
        "created_at": 1343827326,
        "actor_id": 117730,
        "action": "mentioned",
        "action_specific": null,
        "event_id": "21766292"
      },
      {
        "created_at": 1343827326,
        "actor_id": 117730,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "21766293"
      },
      {
        "created_at": 1343827326,
        "actor_id": 111464,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "21766294"
      },
      {
        "created_at": 1343839265,
        "actor_id": 111464,
        "action": "mentioned",
        "action_specific": null,
        "event_id": "21784163"
      },
      {
        "created_at": 1343839265,
        "actor_id": 117758,
        "action": "mentioned",
        "action_specific": null,
        "event_id": "21784164"
      },
      {
        "created_at": 1343917908,
        "actor_id": 117737,
        "action": "referenced",
        "action_specific": "71d65337eb51c2849a7c7525b922d96cc5c17971",
        "event_id": "21882571"
      },
      {
        "created_at": 1343917908,
        "actor_id": 117737,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "21882572"
      },
      {
        "created_at": 1343917908,
        "actor_id": 117737,
        "action": "merged",
        "action_specific": "71d65337eb51c2849a7c7525b922d96cc5c17971",
        "event_id": "21882573"
      },
      {
        "created_at": 1343917908,
        "actor_id": 117737,
        "action": "closed",
        "action_specific": null,
        "event_id": "21882574"
      },
      {
        "created_at": 1343931246,
        "actor_id": 113814,
        "action": "mentioned",
        "action_specific": null,
        "event_id": "21906783"
      },
      {
        "created_at": 1343931246,
        "actor_id": 111464,
        "action": "mentioned",
        "action_specific": null,
        "event_id": "21906784"
      }
    ],
    "issue_comments": [
      {
        "created_at": 1343819152,
        "user_id": 117758,
        "comment_id": "7422023",
        "body": "Cool!\n\nI think i would like the following approach regarding the logging:\n- If environment variable is set: Use the specified directory\n- Else if brickd is started as root: Use /var/log/\n- Else if brickd is started as non-root: Use ~/brickd/\n\nWhat do you think about that?"
      },
      {
        "created_at": 1343821894,
        "user_id": 113814,
        "comment_id": "7423098",
        "body": "hi there,\n\nlogging into HOME/brickd for non-root user sounds good. i implemented that and appended this patch (12ee461) to this pull request. \n\nif environment variable isn't set, root user log into /var/log/brickd.loog anyway.\n\nregards\ntobi\n"
      },
      {
        "created_at": 1343827326,
        "user_id": 111464,
        "comment_id": "7424746",
        "body": "Hi.\n\n@tewdreyer: I'll just comment on the patch involving python-libusb1, as I maintain this stand-alone part:\nOn the feature level, it's all good.\nOn the implementation level, I would rather catch exceptions at USBContext.getDeviceList level rather than in USBDevice constructor, and also add a parameter disallowing this catching by default (I believe \"unauthorized\" error is easier to understand than \"not found\", should a python-libusb1 user try to access a device obviously plugged in).\n\n@Tinkerforge: Would the above be enough for brickd's needs ?"
      },
      {
        "created_at": 1343839264,
        "user_id": 113814,
        "comment_id": "7429142",
        "body": "Hi..\n\n@vpelletier I missed that python-libusb is a standalone project.. sorry for that.. so maybe its better to  bother you with libusb related issues and let tinkerforge decide whether they integrate that patches..\n\n@borg42 what do you think about patching brickd from upstream?"
      },
      {
        "created_at": 1343848099,
        "user_id": 111464,
        "comment_id": "7433273",
        "body": "No problem.\nIt's fine for me that brickd repos contains a copy of my lib, as it's easy to track of what happens to it. And it provides good ideas of how I can improve python-libusb1."
      },
      {
        "created_at": 1343850394,
        "user_id": 111464,
        "comment_id": "7434412",
        "body": "Here is my implementation:\nvpelletier/python-libusb1@c218fdbebda37cc8e8f7daa07991e800724ff2e2\nParameter name is a bit long for my taste, but I couldn't find a shorter without making its meaning obscure."
      },
      {
        "created_at": 1343918792,
        "user_id": 117737,
        "comment_id": "7454180",
        "body": "I just pulled you changes as is and will apply additional cleanup on it including vpelletier changes."
      },
      {
        "created_at": 1343931245,
        "user_id": 117737,
        "comment_id": "7460071",
        "body": "@tewdreyer I had to do some more adjustments to make brickd correctly ignore inaccessible USB devices. I also moved the fallback pid file location for non-root users to ~/.brickd/brickd.pid.\n\nI failed at making my USB devices non-root accessible. Seems that it requires a reboot or so. Anyway, could you give the current git version a try and see if it behaves as expected for you?\n\n@vpelletier I cherry-picked your commit, but there is a closing parenthesis missing. I commented on the affected line in that commit."
      },
      {
        "created_at": 1343942654,
        "user_id": 111464,
        "comment_id": "7465472",
        "body": "Sorry for the typo. It's now fixed.\n\n~~I believe root simply ignores file-system permissions, so it's probably not a good test case for proposed change... It would be more accurate to~~ plug two bricks, chown $USER: /dev/bus/usb/<bus_number>/<dev_number> for one and start brickd with $USER.\n\n[EDIT] I originally read \"making my USB devices non-root accessible\" as \"making my USB devices root inaccessible\""
      },
      {
        "created_at": 1344007430,
        "user_id": 113814,
        "comment_id": "7483198",
        "body": "thank you very much.. it works as expected:-)\n\n>photron said:\n>I failed at making my USB devices non-root accessible.\n\nwhat did you do? we configured specific usb devices via udev to be accessible by non-root users. after reconnecting the usb device, the new rules were executed and the device is accessible by non-root user. no need to reboot system or udevd"
      },
      {
        "created_at": 1344239129,
        "user_id": 117737,
        "comment_id": "7517091",
        "body": "Well, yes chown works, but it only applies to already existing devices. Newly plugged in devices will be owned by root again. I tried to do it with udev rules and that what failed for me. I didn't try simply chown'ing it by then. It tried it now it it works."
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1343828941,
        "author_id": 113814,
        "sha": "12ee46171b42454e6dedce2ec599607554ed7f91",
        "id": 956252,
        "committer_id": 113814,
        "comments": []
      },
      {
        "created_at": 1343674026,
        "author_id": 113814,
        "sha": "b7b8313f63ae33a6cadfc4391563deff3ba52c21",
        "id": 956253,
        "committer_id": 113814,
        "comments": []
      },
      {
        "created_at": 1343655050,
        "author_id": 113814,
        "sha": "bdb627d6acb3e29d15249884906b05032d68effe",
        "id": 956254,
        "committer_id": 113814,
        "comments": []
      },
      {
        "created_at": 1343662793,
        "author_id": 113814,
        "sha": "f06e45b83a22b9516ee033fa3acc1c52b65dc19c",
        "id": 956255,
        "committer_id": 113814,
        "comments": []
      }
    ]
  },
  "348830": {
    "authors": [
      5437
    ],
    "num_watchers": 8862,
    "id": 348830,
    "org_owned": true,
    "relevant_users": {
      "5437": {
        "country_code": null,
        "is_project_member": {
          "created_at": 1311984626,
          "ext_ref_id": "50b314e8edecb53a260001ce"
        },
        "type": "USR",
        "deleted": 0,
        "location": "45.391921,-122.567767",
        "company": "Alcmaeon LLC",
        "login": "hunner",
        "fake": 0,
        "state": null,
        "created_at": 1244150355,
        "id": 5437,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": null
      },
      "5453": {
        "country_code": null,
        "is_project_member": {
          "created_at": 1319485818,
          "ext_ref_id": "50b314e8edecb53a260001e4"
        },
        "type": "USR",
        "deleted": 0,
        "location": null,
        "company": "Puppet Labs",
        "login": "rcoleman",
        "fake": 0,
        "state": null,
        "created_at": 1319485818,
        "id": 5453,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": null
      }
    },
    "project": {
      "full_name": "puppetlabs/puppetlabs-training-bootstrap",
      "created_at": 1311991826,
      "description": "Bootstrap CentOS training VMs from scratch. Now with true versioning!",
      "html_url": "https://github.com/puppetlabs/puppetlabs-training-bootstrap",
      "num_forks": 0,
      "name": "puppetlabs-training-bootstrap",
      "id": 2126568,
      "language": "Shell",
      "mysql_id": 66708
    },
    "owner": 5100,
    "pull_request": {
      "created_at": 1325214443,
      "issue_id": 15,
      "html_url": "https://github.com/puppetlabs/puppetlabs-training-bootstrap/pull/15",
      "number": 15,
      "merged": true,
      "title": "Feature/learning puppet vm",
      "id": 638879,
      "opened_by": 5437,
      "body": "This is a rebase of nickfagerlund/puppetlabs-training-bootstrap learning-puppet-vm branch.\r\n\r\nThis adds the ability to set the hostname at kickstart time, display the ip address at login screen, kickstart Learning Puppet VM with PE installed.",
      "mysql_id": 348830
    },
    "issue_events": [
      {
        "created_at": 1325214444,
        "actor_id": 5437,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "7276367"
      },
      {
        "created_at": 1325665397,
        "actor_id": 5453,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "7420660"
      },
      {
        "created_at": 1325735372,
        "actor_id": 5399,
        "action": "referenced",
        "action_specific": "64bd5b0f22820fe969933ac95ce4964ca27617e2",
        "event_id": "7466344"
      },
      {
        "created_at": 1325735372,
        "actor_id": 5399,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "7466345"
      },
      {
        "created_at": 1325735372,
        "actor_id": 5399,
        "action": "merged",
        "action_specific": "64bd5b0f22820fe969933ac95ce4964ca27617e2",
        "event_id": "7466346"
      },
      {
        "created_at": 1325735372,
        "actor_id": 5399,
        "action": "closed",
        "action_specific": null,
        "event_id": "7466347"
      }
    ],
    "issue_comments": [
      {
        "created_at": 1325665397,
        "user_id": 5453,
        "comment_id": "3350543",
        "body": "+1. I'll try this next week."
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1325733697,
        "author_id": 5437,
        "sha": "3521fa1fc5e60474dd4ab847432e21e6e26e7733",
        "id": 17617768,
        "committer_id": 5437,
        "comments": []
      },
      {
        "created_at": 1325214165,
        "author_id": 5437,
        "sha": "95578511bb9086e14e9baf41df5ee7f6fcb270bd",
        "id": 17617769,
        "committer_id": 5437,
        "comments": []
      },
      {
        "created_at": 1325204979,
        "author_id": 5437,
        "sha": "f60cd73c2d138d7e524d90504de6d9580aa71065",
        "id": 17617770,
        "committer_id": 5437,
        "comments": []
      },
      {
        "created_at": 1324507149,
        "author_id": 5398,
        "sha": "ee4fb0fdd964cd5559a1351113c913881b03c975",
        "id": 17617771,
        "committer_id": 5437,
        "comments": []
      },
      {
        "created_at": 1325140256,
        "author_id": 5437,
        "sha": "e52dfa1a21beceaf21ee274de42c2fe141fe2b2b",
        "id": 17617772,
        "committer_id": 5437,
        "comments": []
      },
      {
        "created_at": 1325138219,
        "author_id": 5437,
        "sha": "3ae05b26298471de2efdfefd153e89e979254b22",
        "id": 17617773,
        "committer_id": 5437,
        "comments": []
      },
      {
        "created_at": 1325138996,
        "author_id": 5437,
        "sha": "b6c87b430e1b2c4945722acef0e9d662ff1e1806",
        "id": 17617774,
        "committer_id": 5437,
        "comments": []
      },
      {
        "created_at": 1325136745,
        "author_id": 5437,
        "sha": "ea2cb1f1c6e015b1afe3d0a4a7cc8ea72e1ab582",
        "id": 17617775,
        "committer_id": 5437,
        "comments": []
      },
      {
        "created_at": 1325140560,
        "author_id": 5437,
        "sha": "504312406d9a5380d57f61704d56bd3c65ceec0a",
        "id": 17617776,
        "committer_id": 5437,
        "comments": []
      },
      {
        "created_at": 1325141405,
        "author_id": 5437,
        "sha": "7769914b820e3a4cf00f9c41a02da410b06340bc",
        "id": 17617777,
        "committer_id": 5437,
        "comments": []
      },
      {
        "created_at": 1325140469,
        "author_id": 5437,
        "sha": "6f77b12c911600a8de96c0573815d138d421670d",
        "id": 17617779,
        "committer_id": 5437,
        "comments": []
      },
      {
        "created_at": 1325136160,
        "author_id": 5437,
        "sha": "737ad490685faafc14998a73d9f3947f5d01465e",
        "id": 17617780,
        "committer_id": 5437,
        "comments": []
      }
    ]
  },
  "348845": {
    "authors": [
      5437
    ],
    "num_watchers": 8862,
    "id": 348845,
    "org_owned": true,
    "relevant_users": {
      "5437": {
        "country_code": null,
        "is_project_member": {
          "created_at": 1311984626,
          "ext_ref_id": "50b314e8edecb53a260001ce"
        },
        "type": "USR",
        "deleted": 0,
        "location": "45.391921,-122.567767",
        "company": "Alcmaeon LLC",
        "login": "hunner",
        "fake": 0,
        "state": null,
        "created_at": 1244150355,
        "id": 5437,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": null
      },
      "5453": {
        "country_code": null,
        "is_project_member": {
          "created_at": 1319485818,
          "ext_ref_id": "50b314e8edecb53a260001e4"
        },
        "type": "USR",
        "deleted": 0,
        "location": null,
        "company": "Puppet Labs",
        "login": "rcoleman",
        "fake": 0,
        "state": null,
        "created_at": 1319485818,
        "id": 5453,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": null
      }
    },
    "project": {
      "full_name": "puppetlabs/puppetlabs-training-bootstrap",
      "created_at": 1311991826,
      "description": "Bootstrap CentOS training VMs from scratch. Now with true versioning!",
      "html_url": "https://github.com/puppetlabs/puppetlabs-training-bootstrap",
      "num_forks": 0,
      "name": "puppetlabs-training-bootstrap",
      "id": 2126568,
      "language": "Shell",
      "mysql_id": 66708
    },
    "owner": 5100,
    "pull_request": {
      "created_at": 1321661962,
      "issue_id": 10,
      "html_url": "https://github.com/puppetlabs/puppetlabs-training-bootstrap/pull/10",
      "number": 10,
      "merged": false,
      "title": "Feature/master/pe 2.0.0",
      "id": 509843,
      "opened_by": 5437,
      "body": "Update from PE 1.2.4 -> 2.0.0 and remove answer seed file defaults.",
      "mysql_id": 348845
    },
    "issue_events": [
      {
        "created_at": 1321661962,
        "actor_id": 5437,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "5604448"
      },
      {
        "created_at": 1321662067,
        "actor_id": 5437,
        "action": "closed",
        "action_specific": null,
        "event_id": "5604512"
      },
      {
        "created_at": 1321666802,
        "actor_id": 5453,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "5607868"
      }
    ],
    "issue_comments": [
      {
        "created_at": 1321662067,
        "user_id": 5437,
        "comment_id": "2793804",
        "body": "Actually not yet. Missing `libxslt` package at least for PE to install... may be more. Will do more testing and re-request."
      },
      {
        "created_at": 1321666802,
        "user_id": 5453,
        "comment_id": "2794698",
        "body": "Let me know if I can help. I was going to dig into this today since the materials are almost ready but am really happy to see you working on it. :-)\r\n\r\nI'll focus instead on https://projects.puppetlabs.com/issues/10875 instead. "
      },
      {
        "created_at": 1321744473,
        "user_id": 5437,
        "comment_id": "2800356",
        "body": "I'll try and get this fixed, tested and uploaded this weekend."
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1321658192,
        "author_id": 5437,
        "sha": "4ae7221a02b402de519c466a91b7b827f547968b",
        "id": 17617799,
        "committer_id": 5437,
        "comments": []
      },
      {
        "created_at": 1321658114,
        "author_id": 5437,
        "sha": "320cd01175bfbc12dc91f4d2358d67618b6a9fbe",
        "id": 17617800,
        "committer_id": 5437,
        "comments": []
      }
    ]
  },
  "348861": {
    "authors": [
      5437
    ],
    "num_watchers": 8862,
    "id": 348861,
    "org_owned": true,
    "relevant_users": {
      "5437": {
        "country_code": null,
        "is_project_member": {
          "created_at": 1311984626,
          "ext_ref_id": "50b314e8edecb53a260001ce"
        },
        "type": "USR",
        "deleted": 0,
        "location": "45.391921,-122.567767",
        "company": "Alcmaeon LLC",
        "login": "hunner",
        "fake": 0,
        "state": null,
        "created_at": 1244150355,
        "id": 5437,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": null
      }
    },
    "project": {
      "full_name": "puppetlabs/puppetlabs-training-bootstrap",
      "created_at": 1311991826,
      "description": "Bootstrap CentOS training VMs from scratch. Now with true versioning!",
      "html_url": "https://github.com/puppetlabs/puppetlabs-training-bootstrap",
      "num_forks": 0,
      "name": "puppetlabs-training-bootstrap",
      "id": 2126568,
      "language": "Shell",
      "mysql_id": 66708
    },
    "owner": 5100,
    "pull_request": {
      "created_at": 1317525309,
      "issue_id": 5,
      "html_url": "https://github.com/puppetlabs/puppetlabs-training-bootstrap/pull/5",
      "number": 5,
      "merged": true,
      "title": "PE 1.2.3, sync pkgs from DVD, remove Puppetlabs repo",
      "id": 370691,
      "opened_by": 5437,
      "body": "Updates:\r\n- PE 1.2.1 -> 1.2.3\r\n- (Smartly) sync base packages from DVD instead of over the wire (uses `yumdownloader` instead of `rsync`)\r\n- Remove the Puppetlabs repo (where the mcollective packages came from--no longer needed)\r\n- Update `setup-bootstrap.sh` to allow cloning from alternate repos/branches\r\n- Improve documentation for PSE adoption\r\n\r\nOutcome:\r\n- Kickstart 30-50 minutes -> 8 minutes at a starbucks\r\n- Zip 650 MB -> 450 MB",
      "mysql_id": 348861
    },
    "issue_events": [
      {
        "created_at": 1317525309,
        "actor_id": 5437,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "3794825"
      },
      {
        "created_at": 1318990228,
        "actor_id": 5437,
        "action": "referenced",
        "action_specific": "2d07e9eaa008dfa9d9235cceeedec97ea5277544",
        "event_id": "4408014"
      },
      {
        "created_at": 1318990228,
        "actor_id": 5437,
        "action": "merged",
        "action_specific": "2d07e9eaa008dfa9d9235cceeedec97ea5277544",
        "event_id": "4408015"
      },
      {
        "created_at": 1318990228,
        "actor_id": 5437,
        "action": "closed",
        "action_specific": null,
        "event_id": "4408016"
      }
    ],
    "issue_comments": [
      {
        "created_at": 1318989510,
        "user_id": 5437,
        "comment_id": "2449530",
        "body": "As per #9958 in projects, need ruby pkg added too"
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1318990017,
        "author_id": 5437,
        "sha": "5dd69af314d9bde877435369e5c7f2f6b4bef348",
        "id": 17617809,
        "committer_id": 5437,
        "comments": []
      },
      {
        "created_at": 1317524944,
        "author_id": 5437,
        "sha": "d0e92370604009d0d75cbce02d95b81617fff149",
        "id": 17617810,
        "committer_id": 5437,
        "comments": []
      },
      {
        "created_at": 1317524944,
        "author_id": 5437,
        "sha": "e2b74644d8fc8c10d3be9f188dd27a57f5aab666",
        "id": 17617811,
        "committer_id": 5437,
        "comments": []
      },
      {
        "created_at": 1317524337,
        "author_id": 5437,
        "sha": "01870fee3ba24701fff550c8ba004f08cb49d34f",
        "id": 17617812,
        "committer_id": 5437,
        "comments": []
      },
      {
        "created_at": 1317522520,
        "author_id": 5437,
        "sha": "0e8f8312d7b9b45c8da110c937c58f43319460ce",
        "id": 17617813,
        "committer_id": 5437,
        "comments": []
      },
      {
        "created_at": 1317522473,
        "author_id": 5437,
        "sha": "74ed492209b6f1aedb087df26c512dea46539939",
        "id": 17617814,
        "committer_id": 5437,
        "comments": []
      },
      {
        "created_at": 1317522355,
        "author_id": 5437,
        "sha": "b2468466e93a50bcb7518f2db177bdbfbd3300f1",
        "id": 17617815,
        "committer_id": 5437,
        "comments": []
      },
      {
        "created_at": 1317521254,
        "author_id": 5437,
        "sha": "2c55a955c3ba77dfc06a21dd527076b4cfadbea0",
        "id": 17617816,
        "committer_id": 5437,
        "comments": []
      },
      {
        "created_at": 1317519372,
        "author_id": 5437,
        "sha": "714898034073284f78299922c97adc7469fe279e",
        "id": 17617817,
        "committer_id": 5437,
        "comments": []
      },
      {
        "created_at": 1317519054,
        "author_id": 5437,
        "sha": "3fbc98c05e03be1e1253829d270dd51beb92622a",
        "id": 17617818,
        "committer_id": 5437,
        "comments": []
      },
      {
        "created_at": 1317517410,
        "author_id": 5437,
        "sha": "a052fd6d0940e5b35ce8f27a2196fd28b72dc59b",
        "id": 17617820,
        "committer_id": 5437,
        "comments": []
      },
      {
        "created_at": 1317517291,
        "author_id": 5437,
        "sha": "b0c1578ce037b97cc7a8908dd71cd87096be67f7",
        "id": 17617821,
        "committer_id": 5437,
        "comments": []
      },
      {
        "created_at": 1317515404,
        "author_id": 5437,
        "sha": "a60d10d9030ceb6db2c76fd288df80979db58c58",
        "id": 17617822,
        "committer_id": 5437,
        "comments": []
      },
      {
        "created_at": 1317514861,
        "author_id": 5437,
        "sha": "fa814c73e4a2549012104a19115c26242897ae14",
        "id": 17617823,
        "committer_id": 5437,
        "comments": []
      },
      {
        "created_at": 1317514024,
        "author_id": 5437,
        "sha": "34186476a9f09e16b9ae38c44ace4b6a600d22d8",
        "id": 17617824,
        "committer_id": 5437,
        "comments": []
      },
      {
        "created_at": 1317513682,
        "author_id": 5437,
        "sha": "7d1f84c2e6e5d65409d0c776f93138fe104dfe1f",
        "id": 17617825,
        "committer_id": 5437,
        "comments": []
      },
      {
        "created_at": 1317512577,
        "author_id": 5437,
        "sha": "a8ec047a977d6c323c10e56a87c19035d3b739a7",
        "id": 17617826,
        "committer_id": 5437,
        "comments": []
      },
      {
        "created_at": 1317512552,
        "author_id": 5437,
        "sha": "b66d0cf75e7fb22db726f9104fa9e587f619d6d5",
        "id": 17617828,
        "committer_id": 5437,
        "comments": []
      },
      {
        "created_at": 1317512473,
        "author_id": 5437,
        "sha": "8b6fa13231bc5aef5c0647875da7b3453f30ec19",
        "id": 17617829,
        "committer_id": 5437,
        "comments": []
      },
      {
        "created_at": 1317512415,
        "author_id": 5437,
        "sha": "6db9ba6102f19d271f1a5795c6e5c699d98118a8",
        "id": 17617830,
        "committer_id": 5437,
        "comments": []
      }
    ]
  },
  "348868": {
    "authors": [
      5446
    ],
    "num_watchers": 8862,
    "id": 348868,
    "org_owned": true,
    "relevant_users": {
      "5446": {
        "country_code": "us",
        "is_project_member": {
          "created_at": 1311984626,
          "ext_ref_id": "50b314e8edecb53a260001d9"
        },
        "type": "USR",
        "deleted": 0,
        "location": "Portland, OR",
        "company": null,
        "login": "nanliu",
        "fake": 0,
        "state": "Oregon",
        "created_at": 1278369636,
        "id": 5446,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "Portland"
      }
    },
    "project": {
      "full_name": "puppetlabs/puppetlabs-training-bootstrap",
      "created_at": 1311991826,
      "description": "Bootstrap CentOS training VMs from scratch. Now with true versioning!",
      "html_url": "https://github.com/puppetlabs/puppetlabs-training-bootstrap",
      "num_forks": 0,
      "name": "puppetlabs-training-bootstrap",
      "id": 2126568,
      "language": "Shell",
      "mysql_id": 66708
    },
    "owner": 5100,
    "pull_request": {
      "created_at": 1316210581,
      "issue_id": 4,
      "html_url": "https://github.com/puppetlabs/puppetlabs-training-bootstrap/pull/4",
      "number": 4,
      "merged": true,
      "title": "Update Training VM for Master training.",
      "id": 336297,
      "opened_by": 5446,
      "body": "Update training VM for puppetmaster training:\r\n\r\n* Disable extra repos\r\n* Disable bluetooth service\r\n* Remove bluetooth package",
      "mysql_id": 348868
    },
    "issue_events": [
      {
        "created_at": 1316210581,
        "actor_id": 5446,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "3338680"
      },
      {
        "created_at": 1316210660,
        "actor_id": 5446,
        "action": "referenced",
        "action_specific": "4b89fbf88a7d1eea853baa9e775015daef3a2e2b",
        "event_id": "3338726"
      },
      {
        "created_at": 1316210660,
        "actor_id": 5446,
        "action": "merged",
        "action_specific": "4b89fbf88a7d1eea853baa9e775015daef3a2e2b",
        "event_id": "3338727"
      },
      {
        "created_at": 1316210660,
        "actor_id": 5446,
        "action": "closed",
        "action_specific": null,
        "event_id": "3338728"
      }
    ],
    "issue_comments": [
      {
        "created_at": 1316210656,
        "user_id": 5446,
        "comment_id": "2118280",
        "body": "The training vm is using git to pull from this repo, so I'm going to skip the regular review process since we need this out the door this afternoon."
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1316210358,
        "author_id": 5446,
        "sha": "41973f43068881df06aca2960bb317bd0c755ba7",
        "id": 17617852,
        "committer_id": 5446,
        "comments": []
      }
    ]
  },
  "349062": {
    "authors": [
      120479
    ],
    "num_watchers": 8862,
    "id": 349062,
    "org_owned": false,
    "relevant_users": {
      "120479": {
        "country_code": null,
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": null,
        "company": null,
        "login": "EKDMFOVO",
        "fake": 1,
        "state": null,
        "created_at": 1344085785,
        "id": 120479,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": null
      },
      "120498": {
        "country_code": null,
        "is_project_member": {
          "created_at": 1353441016,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": null,
        "company": "XebiaLabs",
        "login": "demobox",
        "fake": 0,
        "state": null,
        "created_at": 1268745675,
        "id": 120498,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": null
      }
    },
    "project": {
      "full_name": "khuxtable/wagon-gitsite",
      "created_at": 1270269459,
      "description": "Deploy Maven site documentation to GitHub gh-pages branch.",
      "html_url": "https://github.com/khuxtable/wagon-gitsite",
      "num_forks": 16,
      "name": "wagon-gitsite",
      "id": 592560,
      "language": "Java",
      "mysql_id": 195005
    },
    "owner": 421843,
    "pull_request": {
      "created_at": 1353440993,
      "issue_id": 20,
      "html_url": "https://github.com/khuxtable/wagon-gitsite/pull/20",
      "number": 20,
      "merged": false,
      "title": "Test to trigger a PR hook",
      "id": 3067351,
      "opened_by": 120498,
      "body": "",
      "mysql_id": 349062
    },
    "issue_events": [
      {
        "created_at": 1353441016,
        "actor_id": 120498,
        "action": "closed",
        "action_specific": null,
        "event_id": "29996672"
      }
    ],
    "issue_comments": [
      {
        "created_at": 1353441016,
        "user_id": 120498,
        "comment_id": "10559807",
        "body": "Sorry. This PR should have gone to my fork! ;-)"
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1353440963,
        "author_id": 120479,
        "sha": "cd628246d36b59347e56abc66c25b6fd13f4ac52",
        "id": 17758721,
        "committer_id": 120479,
        "comments": []
      },
      {
        "created_at": 1328150927,
        "author_id": 120479,
        "sha": "0d41b5bb51048dc967b3915ade23748989ec97eb",
        "id": 17758723,
        "committer_id": 120479,
        "comments": []
      },
      {
        "created_at": 1328145189,
        "author_id": 120479,
        "sha": "7f0d46904210bc4946e897bb4c75768732dfb2f2",
        "id": 17758731,
        "committer_id": 120479,
        "comments": []
      },
      {
        "created_at": 1328145271,
        "author_id": 120479,
        "sha": "c08c94ea72284db76aa58ad4f4432fdaf1ea2c6d",
        "id": 17758733,
        "committer_id": 120479,
        "comments": []
      },
      {
        "created_at": 1328145320,
        "author_id": 120479,
        "sha": "d08d9660cee18895df02e9f85dc0f7519b497ec2",
        "id": 17758734,
        "committer_id": 120479,
        "comments": []
      },
      {
        "created_at": 1328150838,
        "author_id": 120479,
        "sha": "875a5be9126c8fffd96e06df22256ed34e525dcc",
        "id": 17758737,
        "committer_id": 120479,
        "comments": []
      },
      {
        "created_at": 1328150926,
        "author_id": 120479,
        "sha": "a3b4baa8081c8a3bd18d60ecd9b5fb93c72d7d47",
        "id": 17758739,
        "committer_id": 120479,
        "comments": []
      }
    ]
  },
  "349064": {
    "authors": [
      113814
    ],
    "num_watchers": 8862,
    "id": 349064,
    "org_owned": true,
    "relevant_users": {
      "113814": {
        "country_code": "de",
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": "Berlin",
        "company": null,
        "login": "tewdreyer",
        "fake": 0,
        "state": "Berlin",
        "created_at": 1305911821,
        "id": 113814,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "Berlin"
      },
      "117758": {
        "country_code": "de",
        "is_project_member": {
          "created_at": 1314197943,
          "ext_ref_id": "502395c8edecb55118000345"
        },
        "type": "USR",
        "deleted": 0,
        "location": "Germany",
        "company": "Tinkerforge GmbH",
        "login": "borg42",
        "fake": 0,
        "state": null,
        "created_at": 1296149373,
        "id": 117758,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": null
      }
    },
    "project": {
      "full_name": "Tinkerforge/brickv",
      "created_at": 1314205143,
      "description": "Small Qt GUI to control and test all Bricks and Bricklets from Tinkerforge",
      "html_url": "https://github.com/Tinkerforge/brickv",
      "num_forks": 12,
      "name": "brickv",
      "id": 2261538,
      "language": "Python",
      "mysql_id": 154821
    },
    "owner": 117730,
    "pull_request": {
      "created_at": 1344606856,
      "issue_id": 3,
      "html_url": "https://github.com/Tinkerforge/brickv/pull/3",
      "number": 3,
      "merged": false,
      "title": "install brickv via 'make'",
      "id": 2026108,
      "opened_by": 113814,
      "body": "Hi guys..\n\nThese patches enable a user to install brickv via _make_. Therefore one ui file needed to be renamed.\n\nYou can install brickv into the default location /usr/share/brickv via make by typing\n```\nmake install\n```\nThe target directory may be adjusted by setting PREFIX to a desired location, e.g.\n```\nmake install PREFIX=/usr/local\n```\ninstalls brickv into /usr/local/share/brickv.\n\nThis Makefile also respects DESTDIR to support _staged installs_.\n\nIn addition to the python scripts a wrapper script is installed into BINDIR. This is similar to the brickd's one. So you may start brickv via\n```\nbrickv\n```\n\nPlease review this pull request and hopefully integrate it.\n\nThanks in advance and best regards\ntobi",
      "mysql_id": 349064
    },
    "issue_events": [],
    "issue_comments": [
      {
        "created_at": 1344607675,
        "user_id": 117758,
        "comment_id": "7640375",
        "body": "Uh, that looks like it would be painfull to maintain. Wouldn't it be possible to use some sort of glob pattern or something similar? I am pretty sure that we need to copy all of the .py files and additionally the brickv-icon.png."
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1344596716,
        "author_id": 113814,
        "sha": "aa3c946e46d7d3e2923996e618a5744e3c9682e0",
        "id": 19266099,
        "committer_id": 113814,
        "comments": []
      },
      {
        "created_at": 1344515317,
        "author_id": 113814,
        "sha": "55eb9fd7b91c206441be48c7486b87beedad62e2",
        "id": 19266107,
        "committer_id": 113814,
        "comments": []
      }
    ]
  },
  "349101": {
    "authors": [
      169555
    ],
    "num_watchers": 8862,
    "id": 349101,
    "org_owned": true,
    "relevant_users": {
      "15100": {
        "country_code": "us",
        "is_project_member": {
          "created_at": 1353441068,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": "Littleton, CO",
        "company": "August Technology Group, LLC",
        "login": "tlberglund",
        "fake": 0,
        "state": "Colorado",
        "created_at": 1236990267,
        "id": 15100,
        "num_prior_commits": 0,
        "is_owner_member": true,
        "city": "Littleton"
      },
      "169555": {
        "country_code": "us",
        "is_project_member": {
          "created_at": 1365376708,
          "corrected_created_at": 1362254181,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": "San Francisco, CA",
        "company": "GitHub",
        "login": "brntbeer",
        "fake": 0,
        "state": "California",
        "created_at": 1231455060,
        "id": 169555,
        "num_prior_commits": 3,
        "is_owner_member": false,
        "city": "SF"
      }
    },
    "project": {
      "full_name": "github/teach.github.com",
      "created_at": 1346359906,
      "description": "The open source teaching materials site for Git and GitHub technologies",
      "html_url": "https://github.com/github/teach.github.com",
      "num_forks": 75,
      "name": "teach.github.com",
      "id": 5619324,
      "language": "Shell",
      "mysql_id": 666616
    },
    "owner": 142,
    "pull_request": {
      "created_at": 1353385326,
      "issue_id": 27,
      "html_url": "https://github.com/github/teach.github.com/pull/27",
      "number": 27,
      "merged": true,
      "title": "updated examples to have context to view the repo at that directory",
      "id": 3058783,
      "opened_by": 169555,
      "body": "Testing out a way to change the `View it on GitHub` button. \n\nCurrently, Jekyll doesnt allow access of a variable to get the filepath that i know of. Sadly there's nothing like `{{page.name}}` or  `{{page.basename}}` that we can use.\n\nWe could use front-matter to set a `path` key for any page we want and just include it in the layout of that file (like I've done with the examples).\n\nIf this is something we'd love to see on other pages, comment here and i'll go through other _posts to add the front-matter for `path`",
      "mysql_id": 349101
    },
    "issue_events": [
      {
        "created_at": 1353441068,
        "actor_id": 15100,
        "action": "referenced",
        "action_specific": "6af0bfb59f4dcf62741943e93565a808385de466",
        "event_id": "29996778"
      },
      {
        "created_at": 1353441068,
        "actor_id": 15100,
        "action": "merged",
        "action_specific": "6af0bfb59f4dcf62741943e93565a808385de466",
        "event_id": "29996779"
      },
      {
        "created_at": 1353441068,
        "actor_id": 15100,
        "action": "closed",
        "action_specific": null,
        "event_id": "29996780"
      }
    ],
    "issue_comments": [
      {
        "created_at": 1353441065,
        "user_id": 15100,
        "comment_id": "10559837",
        "body": "A spot-check of the affected URLs tells me they look good."
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1353384784,
        "author_id": 169555,
        "sha": "23b509e3a213545a9e2ca572e625e404ad7ce461",
        "id": 17615416,
        "committer_id": 169555,
        "comments": []
      }
    ]
  },
  "349107": {
    "authors": [
      963016
    ],
    "num_watchers": 8862,
    "id": 349107,
    "org_owned": false,
    "relevant_users": {
      "9204": {
        "country_code": "de",
        "is_project_member": {
          "created_at": 1330895735,
          "ext_ref_id": "50be98c6edecb5131f000191"
        },
        "type": "USR",
        "deleted": 0,
        "location": "Hamburg, Germany",
        "company": null,
        "login": "fdietz",
        "fake": 0,
        "state": "Hamburg",
        "created_at": 1218585178,
        "id": 9204,
        "num_prior_commits": 0,
        "is_owner_member": true,
        "city": "Hamburg"
      },
      "963016": {
        "country_code": "cz",
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": "Prague, CZ",
        "company": "PRO-ZETA a.s., Socialbakers a.s., Freelancing",
        "login": "blufor",
        "fake": 0,
        "state": "Praha",
        "created_at": 1352584113,
        "id": 963016,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "Praha"
      }
    },
    "project": {
      "full_name": "fdietz/team_dashboard",
      "created_at": 1330899335,
      "description": "Visualize your team's metrics all in one place.",
      "html_url": "https://github.com/fdietz/team_dashboard",
      "num_forks": 0,
      "name": "team_dashboard",
      "id": 3619632,
      "language": "Ruby",
      "mysql_id": 1694
    },
    "owner": 9204,
    "pull_request": {
      "created_at": 1353183892,
      "issue_id": 52,
      "html_url": "https://github.com/fdietz/team_dashboard/pull/52",
      "number": 52,
      "merged": false,
      "title": "Fix to incorrect target names with graphite 0.9.10",
      "id": 3039692,
      "opened_by": 963016,
      "body": "when team_dashboard is used with graphite 0.9.10, the target names are listed with initial . (dot). request fixes it. (i'm still quite a ruby n00b, but eager to learn ;])",
      "mysql_id": 349107
    },
    "issue_events": [],
    "issue_comments": [
      {
        "created_at": 1353441097,
        "user_id": 9204,
        "comment_id": "10559862",
        "body": "Hi blufor,\r\n\r\nthanks for looking into this. I'd love to apply the fix, but could you also provide a testcase for this change of behaviour, please? I can assist if need some advice.\r\n\r\nAdditionally, remove the commented line and use for example map instead of each and a temporary targets_fixed variable.\r\n\r\nCheers, -Frederik"
      },
      {
        "created_at": 1362529607,
        "user_id": 9204,
        "comment_id": "14463102",
        "body": "Hi again,\r\n\r\nI've integrated your fix, but moved it into the model layer.\r\n\r\nThanks!\r\n-Frederik"
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1353183530,
        "author_id": 963016,
        "sha": "53f56b08cc3bd0c0bc2dea8e37c87902a4800707",
        "id": 17356537,
        "committer_id": 963016,
        "comments": []
      }
    ]
  },
  "349116": {
    "authors": [
      103704
    ],
    "num_watchers": 8862,
    "id": 349116,
    "org_owned": false,
    "relevant_users": {
      "20451": {
        "country_code": "gb",
        "is_project_member": {
          "created_at": 1345563905,
          "ext_ref_id": "503394aeedecb54e220002fc"
        },
        "type": "USR",
        "deleted": 0,
        "location": "UK",
        "company": "Mozilla",
        "login": "joewalker",
        "fake": 0,
        "state": null,
        "created_at": 1240353402,
        "id": 20451,
        "num_prior_commits": 0,
        "is_owner_member": true,
        "city": null
      },
      "103704": {
        "country_code": null,
        "is_project_member": {
          "created_at": 1345564959,
          "ext_ref_id": "503394aeedecb54e220002fd"
        },
        "type": "USR",
        "deleted": 0,
        "location": null,
        "company": "Mozilla",
        "login": "MikeRatcliffe",
        "fake": 0,
        "state": null,
        "created_at": 1250677793,
        "id": 103704,
        "num_prior_commits": 52,
        "is_owner_member": false,
        "city": null
      }
    },
    "project": {
      "full_name": "joewalker/devtools-window",
      "created_at": 1345571105,
      "description": "A git clone of mozilla-central, with full history.",
      "html_url": "https://github.com/joewalker/devtools-window",
      "num_forks": 6,
      "name": "devtools-window",
      "id": 5495631,
      "language": "C++",
      "mysql_id": 448737
    },
    "owner": 20451,
    "pull_request": {
      "created_at": 1353441151,
      "issue_id": 282,
      "html_url": "https://github.com/joewalker/devtools-window/pull/282",
      "number": 282,
      "merged": true,
      "title": "Use synthesizeMouseAtCenter instead of synthesizeMouse fixes #281",
      "id": 3067397,
      "opened_by": 103704,
      "body": "I am unable to reproduce this locally. It seems like the checkbox is not getting clicked.\n\nsynthesizeMouse has not been working well in other tests so I have switched to synthesizeMouseAtCenter.",
      "mysql_id": 349116
    },
    "issue_events": [
      {
        "created_at": 1353444755,
        "actor_id": 20451,
        "action": "merged",
        "action_specific": "6864d3359d606ceef31eb48f6a3953375bf0eb3c",
        "event_id": "30004088"
      },
      {
        "created_at": 1353444755,
        "actor_id": 20451,
        "action": "closed",
        "action_specific": null,
        "event_id": "30004089"
      }
    ],
    "issue_comments": [
      {
        "created_at": 1353441170,
        "user_id": 103704,
        "comment_id": "10559904",
        "body": "This addresses issue #281"
      },
      {
        "created_at": 1353443797,
        "user_id": 20451,
        "comment_id": "10561714",
        "body": "r+\r\nI'll push to try and merge"
      },
      {
        "created_at": 1353444717,
        "user_id": 20451,
        "comment_id": "10562404",
        "body": "https://tbpl.mozilla.org/?tree=Try&rev=2e833c8b6e7d"
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1353440931,
        "author_id": 103704,
        "sha": "6864d3359d606ceef31eb48f6a3953375bf0eb3c",
        "id": 17759484,
        "committer_id": 103704,
        "comments": []
      }
    ]
  },
  "349122": {
    "authors": [
      486915
    ],
    "num_watchers": 8862,
    "id": 349122,
    "org_owned": true,
    "relevant_users": {
      "13608": {
        "country_code": "us",
        "is_project_member": {
          "created_at": 1242359540,
          "ext_ref_id": "52f7f81bbd35436e8f000c8f"
        },
        "type": "USR",
        "deleted": 0,
        "location": "Washington, DC",
        "company": "GeoIQ & GeoCommons",
        "login": "ajturner",
        "fake": 0,
        "state": "District of Columbia",
        "created_at": 1204166906,
        "id": 13608,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "Washington"
      },
      "111914": {
        "country_code": "gb",
        "is_project_member": {
          "created_at": 1353092036,
          "corrected_created_at": 1353005203,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": "Teddington, London, UK",
        "company": "what3words",
        "login": "vicchi",
        "fake": 0,
        "state": "England",
        "created_at": 1287318471,
        "id": 111914,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "London"
      },
      "116081": {
        "country_code": null,
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": "Singapore",
        "company": "Allproperty Media",
        "login": "maysam",
        "fake": 0,
        "state": null,
        "created_at": 1296394954,
        "id": 116081,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": null
      },
      "123191": {
        "country_code": null,
        "is_project_member": {
          "created_at": 1432153707,
          "corrected_created_at": 1338938995,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": null,
        "company": null,
        "login": "brunob",
        "fake": 0,
        "state": null,
        "created_at": 1285621672,
        "id": 123191,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": null
      },
      "163975": {
        "country_code": "es",
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": "Barcelona, Catalonia, Spain",
        "company": "OpenCage Data",
        "login": "freyfogle",
        "fake": 0,
        "state": "CAT",
        "created_at": 1280709075,
        "id": 163975,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "Barcelona"
      },
      "222149": {
        "country_code": "gb",
        "is_project_member": {
          "created_at": 1242359540,
          "ext_ref_id": "52f7f81bbd35436e8f000c90"
        },
        "type": "USR",
        "deleted": 0,
        "location": "United Kingdom",
        "company": null,
        "login": "dezfowler",
        "fake": 0,
        "state": null,
        "created_at": 1271176024,
        "id": 222149,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": null
      },
      "486915": {
        "country_code": "sg",
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": "Singapore",
        "company": null,
        "login": "MrNicodemuz",
        "fake": 0,
        "state": null,
        "created_at": 1333781047,
        "id": 486915,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "Singapore"
      }
    },
    "project": {
      "full_name": "mapstraction/mxn",
      "created_at": 1242366740,
      "description": "A Javascript Mapping Abstraction library.",
      "html_url": "https://github.com/mapstraction/mxn",
      "num_forks": 69,
      "name": "mxn",
      "id": 201443,
      "language": "JavaScript",
      "mysql_id": 210274
    },
    "owner": 163955,
    "pull_request": {
      "created_at": 1333787633,
      "issue_id": 132,
      "html_url": "https://github.com/mapstraction/mxn/pull/132",
      "number": 132,
      "merged": false,
      "title": "Support for OneMap",
      "id": 1123047,
      "opened_by": 486915,
      "body": "Added very basic support for OneMap:\r\nhttp://www.onemap.sg\r\n\r\nA working demo can be found at:\r\nhttp://www.nearbytutors.sg\r\n\r\nApologies for the messy code. Needs to be refactored a little bit.",
      "mysql_id": 349122
    },
    "issue_events": [
      {
        "created_at": 1333787633,
        "actor_id": 486915,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "12945419"
      },
      {
        "created_at": 1333802761,
        "actor_id": 123191,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "12948806"
      },
      {
        "created_at": 1333952654,
        "actor_id": 116081,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "12992342"
      },
      {
        "created_at": 1334073803,
        "actor_id": 163975,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "13088484"
      },
      {
        "created_at": 1338338624,
        "actor_id": 222149,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "16513202"
      },
      {
        "created_at": 1353441195,
        "actor_id": 13608,
        "action": "mentioned",
        "action_specific": null,
        "event_id": "29997042"
      },
      {
        "created_at": 1353441195,
        "actor_id": 13608,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "29997043"
      }
    ],
    "issue_comments": [
      {
        "created_at": 1333802761,
        "user_id": 123191,
        "comment_id": "5007355",
        "body": "Hi, thanks for your code. You don't need to put credits on top of your source file, these are added during mapstraction archive building.\r\n\r\nAnother point, i see that this api seems to be limited to singapor zone, am i it right ? I'd like to let other members of the team to tell if this should be provided in mapstration.\r\n\r\n++"
      },
      {
        "created_at": 1333804915,
        "user_id": 486915,
        "comment_id": "5007502",
        "body": "That's right. OneMap is only for the Singaporean market."
      },
      {
        "created_at": 1333952653,
        "user_id": 116081,
        "comment_id": "5020882",
        "body": "very handy support"
      },
      {
        "created_at": 1334073803,
        "user_id": 163975,
        "comment_id": "5046525",
        "body": "In my opinion the more providers the better, why limit ourselves only to global providers? I see no reason not to add it"
      },
      {
        "created_at": 1335291715,
        "user_id": 123191,
        "comment_id": "5308504",
        "body": "Ok, we seems to agree about donig this merge in mapstraction (at least to of us ^^). Can you cleanup your files as i mentionned in my previous comment before we merge it ? If you can't do it, let me know and i'll try to make it one of these days."
      },
      {
        "created_at": 1335325530,
        "user_id": 486915,
        "comment_id": "5321879",
        "body": "Actually, OneMap is based on ArcGIS / ESRI. If there was support for ArcGIS, it would be very easy to implement support for OneMap as well."
      },
      {
        "created_at": 1338338624,
        "user_id": 222149,
        "comment_id": "5997986",
        "body": "It would be good to get support for ArcGIS proper into the library if I'm understanding correctly that OneMap is just a tile layer for that."
      },
      {
        "created_at": 1353441195,
        "user_id": 111914,
        "comment_id": "10559926",
        "body": "What's the current status on this pull request? @ajturner has a current pull request (#163) to add ESRI support into MXN. Once this goes into the codebase, is OneMap needed as a dedicated provider?"
      },
      {
        "created_at": 1362748045,
        "user_id": 111914,
        "comment_id": "14610221",
        "body": "As Mapstraction now has ESRI ArcGIS support and there's been no response from @MrNicodemuz for almost a year I'm closing this pull request. The v2.1 code base has changed significantly from that which the pull request was based on, but feel free to re-issue this based on the current code base."
      },
      {
        "created_at": 1354910859,
        "user_id": 13608,
        "comment_id": "11135350",
        "body": "@MrNicodemuz & @dezfowler ArcGIS is now a supported provider. do you want to make OneMap work now?"
      },
      {
        "created_at": 1355051838,
        "user_id": 111914,
        "comment_id": "11168428",
        "body": "It's worth pointing out that all the recent changes to the code base, including @ajturner's ESRI provider support is currently on the `integration` branch and not on `master`."
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1333794428,
        "author_id": 486915,
        "sha": "262ef1db6d8433d8fb05beba6c4c677c32b786c3",
        "id": 4787839,
        "committer_id": 486915,
        "comments": []
      }
    ]
  },
  "349127": {
    "authors": [
      8277
    ],
    "num_watchers": 8862,
    "id": 349127,
    "org_owned": true,
    "relevant_users": {
      "6597": {
        "country_code": "us",
        "is_project_member": {
          "created_at": 1335460256,
          "ext_ref_id": "501983a1edecb512ac00231f"
        },
        "type": "USR",
        "deleted": 0,
        "location": "Rapid City, SD",
        "company": "OddBird",
        "login": "carljm",
        "fake": 0,
        "state": "South Dakota",
        "created_at": 1236618647,
        "id": 6597,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "Rapid City"
      },
      "8277": {
        "country_code": null,
        "is_project_member": {
          "created_at": 1335460256,
          "ext_ref_id": "501983a1edecb512ac002320"
        },
        "type": "USR",
        "deleted": 0,
        "location": null,
        "company": null,
        "login": "jeads",
        "fake": 0,
        "state": null,
        "created_at": 1312101341,
        "id": 8277,
        "num_prior_commits": 106,
        "is_owner_member": false,
        "city": null
      }
    },
    "project": {
      "full_name": "mozilla/datazilla",
      "created_at": 1335467456,
      "description": "Datazilla is a system for managing and visualizing data.",
      "html_url": "https://github.com/mozilla/datazilla",
      "num_forks": 0,
      "name": "datazilla",
      "id": 4148916,
      "language": "JavaScript",
      "mysql_id": 1366
    },
    "owner": 1146,
    "pull_request": {
      "created_at": 1343856050,
      "issue_id": 60,
      "html_url": "https://github.com/mozilla/datazilla/pull/60",
      "number": 60,
      "merged": true,
      "title": "Prod changes",
      "id": 1948811,
      "opened_by": 8277,
      "body": "Added a new column to datazilla.datasource to support read only databases and updated appropriate sql.  Also made a few changes to support https in the post_json command.",
      "mysql_id": 349127
    },
    "issue_events": [
      {
        "created_at": 1343856050,
        "actor_id": 8277,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "21816178"
      },
      {
        "created_at": 1343856061,
        "actor_id": 8280,
        "action": "assigned",
        "action_specific": null,
        "event_id": "21816190"
      },
      {
        "created_at": 1343856061,
        "actor_id": 8280,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "21816191"
      },
      {
        "created_at": 1343860921,
        "actor_id": 8277,
        "action": "referenced",
        "action_specific": "667866e379863b098781afa3f559ce23a19e31d9",
        "event_id": "21824618"
      },
      {
        "created_at": 1343860921,
        "actor_id": 8277,
        "action": "merged",
        "action_specific": "667866e379863b098781afa3f559ce23a19e31d9",
        "event_id": "21824619"
      },
      {
        "created_at": 1343860921,
        "actor_id": 8277,
        "action": "closed",
        "action_specific": null,
        "event_id": "21824620"
      },
      {
        "created_at": 1344300510,
        "actor_id": 6597,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "22208864"
      }
    ],
    "issue_comments": [
      {
        "created_at": 1344300510,
        "user_id": 6597,
        "comment_id": "7538878",
        "body": "I'm a bit confused on quick review of this. It looks like it's designed such that `read_only_host` is optional and can be empty, but from my cursory reading it seems like if you actually do that the data source would have no \"read_host\" and all the SQL would fail. Or does datasource automatically fall back to the default host if the query asks for a nonexistent host? Or am I missing something else?"
      },
      {
        "created_at": 1344365664,
        "user_id": 8277,
        "comment_id": "7559560",
        "body": "`read_only_host` is optional.  It's set in `models.py` if `datazilla.datasource.read_only_host` is defined.  It also requires `settings.DATAZILLA_RO_DATABASE_USER` and `settings.DATAZILLA_RO_DATABASE_PASSWORD` be set to valid values.  \n\nHowever, it's only used by datasource when the `host` attribute associated with a `sql` statement is set to `read_host`.  This allows a caller to specify the read or master host for every individual sql statement.  \n\nIf the `host` attribute for a `sql` statement is not defined `datasource` defaults to master.  If the caller explicitly specifies a `host` of `read_only`, datasource assumes it's defined and attempts to use it and fails if it's not defined.\n\nIf the client asks for a nonexistent host I don't think silently falling back to the master in that case would be great without some indication that the host specified is not being used.  Otherwise, no one will ever know.\n\nHow were you thinking it should work?\n"
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1343867919,
        "author_id": 8277,
        "sha": "6c3ed22aad49c58c7624836ded3811c6beb44597",
        "id": 23564,
        "committer_id": 8277,
        "comments": []
      },
      {
        "created_at": 1343862858,
        "author_id": 8277,
        "sha": "1e11eccaa6185b8050c7b5bc8edd65964edee3be",
        "id": 23565,
        "committer_id": 8277,
        "comments": []
      },
      {
        "created_at": 1343862327,
        "author_id": 8277,
        "sha": "d5ada23f7a4b7e0608934ad939a39f4fecf587d9",
        "id": 23566,
        "committer_id": 8277,
        "comments": []
      },
      {
        "created_at": 1343862287,
        "author_id": 8277,
        "sha": "e3539e54267955cd3600493dc87dc005becc73ae",
        "id": 23567,
        "committer_id": 8277,
        "comments": []
      }
    ]
  },
  "349129": {
    "authors": [
      6597
    ],
    "num_watchers": 8862,
    "id": 349129,
    "org_owned": true,
    "relevant_users": {
      "6597": {
        "country_code": "us",
        "is_project_member": {
          "created_at": 1335460256,
          "ext_ref_id": "501983a1edecb512ac00231f"
        },
        "type": "USR",
        "deleted": 0,
        "location": "Rapid City, SD",
        "company": "OddBird",
        "login": "carljm",
        "fake": 0,
        "state": "South Dakota",
        "created_at": 1236618647,
        "id": 6597,
        "num_prior_commits": 75,
        "is_owner_member": false,
        "city": "Rapid City"
      },
      "8277": {
        "country_code": null,
        "is_project_member": {
          "created_at": 1335460256,
          "ext_ref_id": "501983a1edecb512ac002320"
        },
        "type": "USR",
        "deleted": 0,
        "location": null,
        "company": null,
        "login": "jeads",
        "fake": 0,
        "state": null,
        "created_at": 1312101341,
        "id": 8277,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": null
      }
    },
    "project": {
      "full_name": "mozilla/datazilla",
      "created_at": 1335467456,
      "description": "Datazilla is a system for managing and visualizing data.",
      "html_url": "https://github.com/mozilla/datazilla",
      "num_forks": 0,
      "name": "datazilla",
      "id": 4148916,
      "language": "JavaScript",
      "mysql_id": 1366
    },
    "owner": 1146,
    "pull_request": {
      "created_at": 1342746870,
      "issue_id": 58,
      "html_url": "https://github.com/mozilla/datazilla/pull/58",
      "number": 58,
      "merged": true,
      "title": "View tests",
      "id": 1844364,
      "opened_by": 6597,
      "body": "This adds 100% test coverage of `oauth_required` decorator and `set_test_data` view. Also fixes some bugs along the way, and adds some infrastructure (like a test http client with the ability to post signed OAuth data) that will be useful for future view tests.",
      "mysql_id": 349129
    },
    "issue_events": [
      {
        "created_at": 1342746870,
        "actor_id": 6597,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "20679147"
      },
      {
        "created_at": 1342805164,
        "actor_id": 8277,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "20736382"
      },
      {
        "created_at": 1342805175,
        "actor_id": 8277,
        "action": "referenced",
        "action_specific": "dd3dac856735e0eb9931aee84e5ed7cca242ea7e",
        "event_id": "20736387"
      },
      {
        "created_at": 1342805175,
        "actor_id": 8277,
        "action": "merged",
        "action_specific": "dd3dac856735e0eb9931aee84e5ed7cca242ea7e",
        "event_id": "20736388"
      },
      {
        "created_at": 1342805175,
        "actor_id": 8277,
        "action": "closed",
        "action_specific": null,
        "event_id": "20736389"
      }
    ],
    "issue_comments": [
      {
        "created_at": 1342805163,
        "user_id": 8277,
        "comment_id": "7133005",
        "body": "This looks great! The addition of testing infrastructure for web service methods is a sorely needed addition."
      }
    ],
    "pr_comments": [
      {
        "created_at": 1342749177,
        "commit_id": 23598,
        "comment_id": "1202267",
        "user_id": 8277,
        "position": 12,
        "pull_request_id": 62758,
        "body": "I think the import of TestClient here requires the addition of a `__init__.py` file in datazilla/tests/webapp.  I get a `ImportError: No module named webapp.client` from this line when I run the tests."
      }
    ],
    "commits": [
      {
        "created_at": 1342757041,
        "author_id": 6597,
        "sha": "25f145b5cfa25a3e329ae6d7a2e5c6ed10573516",
        "id": 23593,
        "committer_id": 6597,
        "comments": []
      },
      {
        "created_at": 1342756674,
        "author_id": 6597,
        "sha": "9a50c1067895a3ccd8bacfa608a2fad9247474d1",
        "id": 23595,
        "committer_id": 6597,
        "comments": []
      },
      {
        "created_at": 1342753460,
        "author_id": 6597,
        "sha": "45a5bda2f4041613847eb0d07a05f8f0ec609e53",
        "id": 23598,
        "committer_id": 6597,
        "comments": []
      },
      {
        "created_at": 1342747295,
        "author_id": 6597,
        "sha": "c8c0257294856ec7a95de08441d84b5ccc3eab06",
        "id": 23603,
        "committer_id": 6597,
        "comments": []
      },
      {
        "created_at": 1342653636,
        "author_id": 6597,
        "sha": "c90110c4d871afac45e469133411a9d42ce10628",
        "id": 4418009,
        "committer_id": 6597,
        "comments": []
      },
      {
        "created_at": 1342653681,
        "author_id": 6597,
        "sha": "36ad1f0deb5a29beb70dc04badca752927232671",
        "id": 4418010,
        "committer_id": 6597,
        "comments": []
      },
      {
        "created_at": 1342653701,
        "author_id": 6597,
        "sha": "478f42a16044d68e38e9d72eef6d46303f184a6e",
        "id": 4418011,
        "committer_id": 6597,
        "comments": []
      },
      {
        "created_at": 1342742710,
        "author_id": 6597,
        "sha": "b06264bae5f2779b3c6394f27be7f9ff42bb4d06",
        "id": 4418013,
        "committer_id": 6597,
        "comments": []
      },
      {
        "created_at": 1342742721,
        "author_id": 6597,
        "sha": "b39a5261c36d998ed9bb4ddf6c663b9a24123981",
        "id": 4418014,
        "committer_id": 6597,
        "comments": []
      }
    ]
  },
  "349130": {
    "authors": [
      8280,
      6597
    ],
    "num_watchers": 8862,
    "id": 349130,
    "org_owned": true,
    "relevant_users": {
      "6597": {
        "country_code": "us",
        "is_project_member": {
          "created_at": 1335460256,
          "ext_ref_id": "501983a1edecb512ac00231f"
        },
        "type": "USR",
        "deleted": 0,
        "location": "Rapid City, SD",
        "company": "OddBird",
        "login": "carljm",
        "fake": 0,
        "state": "South Dakota",
        "created_at": 1236618647,
        "id": 6597,
        "num_prior_commits": 78,
        "is_owner_member": false,
        "city": "Rapid City"
      },
      "8280": {
        "country_code": null,
        "is_project_member": {
          "created_at": 1335460256,
          "ext_ref_id": "501983a1edecb512ac00231e"
        },
        "type": "USR",
        "deleted": 0,
        "location": null,
        "company": null,
        "login": "camd",
        "fake": 0,
        "state": null,
        "created_at": 1285721466,
        "id": 8280,
        "num_prior_commits": 32,
        "is_owner_member": false,
        "city": null
      }
    },
    "project": {
      "full_name": "mozilla/datazilla",
      "created_at": 1335467456,
      "description": "Datazilla is a system for managing and visualizing data.",
      "html_url": "https://github.com/mozilla/datazilla",
      "num_forks": 0,
      "name": "datazilla",
      "id": 4148916,
      "language": "JavaScript",
      "mysql_id": 1366
    },
    "owner": 1146,
    "pull_request": {
      "created_at": 1342738521,
      "issue_id": 57,
      "html_url": "https://github.com/mozilla/datazilla/pull/57",
      "number": 57,
      "merged": true,
      "title": "Cron commands",
      "id": 1842928,
      "opened_by": 8280,
      "body": "Add batching to some management commands, such as populate_summary_cache and process_objects.  Had to update the create_perftest_product to support a cron_batch value.  cron_batch is the field that determines which batch each project falls into.  When you pass that value to populate_summary_cache or process_objects, it will loop through and act on each project in that batch.  You can also pass in multiple batches.\n\nThis also contains a crontab.txt sample file that represents what I believe IT will want in their crontab.",
      "mysql_id": 349130
    },
    "issue_events": [
      {
        "created_at": 1342738521,
        "actor_id": 8280,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "20666613"
      },
      {
        "created_at": 1342819056,
        "actor_id": 6597,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "20758046"
      },
      {
        "created_at": 1343247342,
        "actor_id": 8277,
        "action": "referenced",
        "action_specific": "9cdd6175b56997918a9725c1c17aa58d55cc88af",
        "event_id": "21173377"
      },
      {
        "created_at": 1343247342,
        "actor_id": 8277,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "21173379"
      },
      {
        "created_at": 1343247342,
        "actor_id": 8277,
        "action": "merged",
        "action_specific": "9cdd6175b56997918a9725c1c17aa58d55cc88af",
        "event_id": "21173380"
      },
      {
        "created_at": 1343247342,
        "actor_id": 8277,
        "action": "closed",
        "action_specific": null,
        "event_id": "21173381"
      }
    ],
    "issue_comments": [
      {
        "created_at": 1342819056,
        "user_id": 6597,
        "comment_id": "7138773",
        "body": "Made some comments, but generally looks good! Really like the reduced duplication in the management command code."
      }
    ],
    "pr_comments": [
      {
        "created_at": 1342815504,
        "commit_id": 23585,
        "comment_id": "1207806",
        "user_id": 6597,
        "position": 5,
        "pull_request_id": 63100,
        "body": "Does this line belong here?"
      },
      {
        "created_at": 1342815531,
        "commit_id": 23585,
        "comment_id": "1207813",
        "user_id": 6597,
        "position": 7,
        "pull_request_id": 63100,
        "body": "This line and the next seem wrong, they are using the old standalone scripts instead of the manage command"
      },
      {
        "created_at": 1342815551,
        "commit_id": 23585,
        "comment_id": "1207817",
        "user_id": 6597,
        "position": 3,
        "pull_request_id": 63100,
        "body": "As long as everything is a manage.py command, this line should not be necessary."
      },
      {
        "created_at": 1342815596,
        "commit_id": 23585,
        "comment_id": "1207828",
        "user_id": 6597,
        "position": 11,
        "pull_request_id": 63100,
        "body": "what's the difference between cron-batches small and large if we always run them together in our crontab?"
      },
      {
        "created_at": 1342815720,
        "commit_id": 23585,
        "comment_id": "1207854",
        "user_id": 6597,
        "position": 31,
        "pull_request_id": 63100,
        "body": "This is a generic base class, so \"to create\" is not appropriate in this message."
      },
      {
        "created_at": 1342815822,
        "commit_id": 23585,
        "comment_id": "1207866",
        "user_id": 6597,
        "position": 44,
        "pull_request_id": 63100,
        "body": "In this case a class var would be simpler and work just as well - there are never multiple instances of the same management command class that should have different lock file values. So rather than `DEFAULT_LOCK_FILE` on the class and telling subclasses t"
      },
      {
        "created_at": 1342815866,
        "commit_id": 23585,
        "comment_id": "1207876",
        "user_id": 6597,
        "position": 11,
        "pull_request_id": 63100,
        "body": "With this sample crontab, any projects in the \"medium\" batch would never get run? That seems problematic."
      },
      {
        "created_at": 1342815968,
        "commit_id": 23585,
        "comment_id": "1207892",
        "user_id": 6597,
        "position": 45,
        "pull_request_id": 63100,
        "body": "if there's a limited set of valid batch names (defined in `BATCH_NAMES` on the management command base class), those should be set as `choices` on this field to guard against getting invalid batch names in the database. (And we should run `full_clean()` o"
      },
      {
        "created_at": 1342816029,
        "commit_id": 23585,
        "comment_id": "1207901",
        "user_id": 6597,
        "position": 48,
        "pull_request_id": 63100,
        "body": "If we're limiting the set of valid batches, it seems like that info is pretty important and belongs in a more central place than here, perhaps in `datazilla/model/sql/models.py` (which would also allow it to be used to validate that only valid batch names"
      },
      {
        "created_at": 1342816157,
        "commit_id": 23585,
        "comment_id": "1207919",
        "user_id": 6597,
        "position": 48,
        "pull_request_id": 63100,
        "body": "It would also be nice to document in a comment (and in the \"help\" output for \"create_perftest_project\") what \"small\", \"medium\", and \"large\" are intended to mean. It doesn't seem self-evident."
      },
      {
        "created_at": 1342816234,
        "commit_id": 23585,
        "comment_id": "1207929",
        "user_id": 6597,
        "position": 26,
        "pull_request_id": 63100,
        "body": "For something that is part of the API used by subclasses, I would generally not use an underscore prefix."
      },
      {
        "created_at": 1342816317,
        "commit_id": 23585,
        "comment_id": "1207942",
        "user_id": 6597,
        "position": 136,
        "pull_request_id": 63100,
        "body": "Oh cool, I never knew about this! I always just defined the method to raise `NotImplementedError`, but this is even better, as it'll complain when you try to instantiate a subclass that fails to implement, not just when you try to call the method on that "
      },
      {
        "created_at": 1342816378,
        "commit_id": 23585,
        "comment_id": "1207953",
        "user_id": 6597,
        "position": 87,
        "pull_request_id": 63100,
        "body": "These three lines could just be `for key in sorted(batches.keys()):`"
      },
      {
        "created_at": 1342816492,
        "commit_id": 23585,
        "comment_id": "1207972",
        "user_id": 6597,
        "position": 72,
        "pull_request_id": 63100,
        "body": "I would make `--view_batches` raise an error if either `--project` or `--cron_batch` is given, again on the principle that when the user explicitly gives conflicting input it's better to fail fast than to make assumptions about which should take priority."
      },
      {
        "created_at": 1342816715,
        "commit_id": 23585,
        "comment_id": "1208017",
        "user_id": 6597,
        "position": 103,
        "pull_request_id": 63100,
        "body": "I don't think this code should be reaching in and using `DataSource` directly like this, hardcoding things like the contenttype \"perftest\" and details of the model. Everything that's needed here (and above with `get_projects_by_cron_batch`) should be expo"
      },
      {
        "created_at": 1342816814,
        "commit_id": 23585,
        "comment_id": "1208031",
        "user_id": 6597,
        "position": 117,
        "pull_request_id": 63100,
        "body": "Again, stuff to be overridden by subclasses is effectively public API (in Java/C++ it'd be \"protected\" as opposed to \"private\" or \"public\", but Python doesn't make that distinction explicitly); I wouldn't use a leading underscore for it."
      },
      {
        "created_at": 1342816901,
        "commit_id": 23585,
        "comment_id": "1208045",
        "user_id": 6597,
        "position": 131,
        "pull_request_id": 63100,
        "body": "if you just use a `LOCK_FILE` class var that is overridden by subclasses, you don't need this property, just access `self.LOCK_FILE`.\n\nAlso, the current implementation doesn't match what's claimed in the docstring, overriding `self.lock_file` would have n"
      },
      {
        "created_at": 1342817024,
        "commit_id": 23585,
        "comment_id": "1208070",
        "user_id": 6597,
        "position": 81,
        "pull_request_id": 63100,
        "body": "good to list the choices here - it would also help to have some clue what the names mean (i.e. what exactly is \"small\", \"medium\", or \"large\", and what effect does that have on how often they are run?)"
      },
      {
        "created_at": 1342817073,
        "commit_id": 23585,
        "comment_id": "1208078",
        "user_id": 6597,
        "position": 137,
        "pull_request_id": 63100,
        "body": "I'd rename this to just `handle_project`"
      },
      {
        "created_at": 1342817144,
        "commit_id": 23585,
        "comment_id": "1208087",
        "user_id": 6597,
        "position": 26,
        "pull_request_id": 63100,
        "body": "Rather than this method, why not just have `ProjectCommandBase` also use a `handle_project` method that receives the project as an arg? Seems to make just as much sense here as it does for `ProjectBatchCommandBase`, makes it a bit simpler to use."
      },
      {
        "created_at": 1342817218,
        "commit_id": 23585,
        "comment_id": "1208093",
        "user_id": 6597,
        "position": 11,
        "pull_request_id": 63100,
        "body": "To match the way the built-in ones are named (i.e. `NoArgsCommand`), why not just name this `ProjectCommand` and the next one `ProjectBatchCommand`? I don't think the `Base` suffix gains us much here; all `*Command` classes are base classes, because the r"
      },
      {
        "created_at": 1342817330,
        "commit_id": 23585,
        "comment_id": "1208103",
        "user_id": 6597,
        "position": 41,
        "pull_request_id": 63100,
        "body": "Having subclasses override a property like this is effectively the same as just having them do `LOCK_FILE = \"populate_summary_cache\"`, and the latter's a lot simpler; if there's no calculation or instance-level variation going on I don't think the propert"
      },
      {
        "created_at": 1342817528,
        "commit_id": 23585,
        "comment_id": "1208124",
        "user_id": 6597,
        "position": 16,
        "pull_request_id": 63100,
        "body": "Ah, here's the comment I was looking for above! It'd be nice to have this somewhere close to where the valid values are actually defined."
      },
      {
        "created_at": 1342817693,
        "commit_id": 23585,
        "comment_id": "1208148",
        "user_id": 6597,
        "position": 27,
        "pull_request_id": 63100,
        "body": "Uh, this seems wrong. If the non-perftest contenttype would ever come before the perftest one in `cls.CONTENT_TYPES`, this would wipe out the value of `cron_batch`. The ordering of `cls.CONTENT_TYPES` is not something this method should be relying on like"
      },
      {
        "created_at": 1342817910,
        "commit_id": 23585,
        "comment_id": "1208181",
        "user_id": 6597,
        "position": 66,
        "pull_request_id": 63100,
        "body": "It's inefficient to do this with n+1 queries, where n is the number of batches. It can be done with a single query - just fetch all perftest datasets and loop over them to build up your dictionary."
      },
      {
        "created_at": 1342818036,
        "commit_id": 23585,
        "comment_id": "1208205",
        "user_id": 6597,
        "position": 66,
        "pull_request_id": 63100,
        "body": "Sample pseudocode:\n\n```\nbatches = {}\nfor source in cls.objects.filter(contenttype=\"perftest\"):\n    batches.setdefault(source.cron_batch, set()).add(source.project)\n```"
      },
      {
        "created_at": 1342818052,
        "commit_id": 23585,
        "comment_id": "1208210",
        "user_id": 6597,
        "position": 71,
        "pull_request_id": 63100,
        "body": "This needs a `.distinct()` added, otherwise you'll get duplicate project names listed if any project has multiple datasets. Of course this comment isn't relevant if you rework this method to use just a single query - in that case you just need to make the"
      },
      {
        "created_at": 1342818131,
        "commit_id": 23585,
        "comment_id": "1208222",
        "user_id": 6597,
        "position": 75,
        "pull_request_id": 63100,
        "body": "This kind of UI-focused modification (joining into a comma-separated string) should happen as close to output as possible (i.e. in the management command). A model-layer function should return pure data structures so it's as flexible and reusable as possi"
      },
      {
        "created_at": 1342818747,
        "commit_id": 23585,
        "comment_id": "1208310",
        "user_id": 6597,
        "position": 19,
        "pull_request_id": 63100,
        "body": "Better to use `assert False, \"Should have gotten a SystemExit\"`, so a test failure shows up as a failure, not an error (test runners distinguish those two things).\n\nBetter to still to use the `pytest.raises` context manager instead of try/except for this:"
      },
      {
        "created_at": 1342818772,
        "commit_id": 23585,
        "comment_id": "1208314",
        "user_id": 6597,
        "position": 31,
        "pull_request_id": 63100,
        "body": "typo here, shouldn't say pushlog"
      },
      {
        "created_at": 1342818943,
        "commit_id": 23585,
        "comment_id": "1208337",
        "user_id": 6597,
        "position": 26,
        "pull_request_id": 63100,
        "body": "shouldn't leave commented-out lines here, uncomment if needed, remove if not"
      },
      {
        "created_at": 1342818970,
        "commit_id": 23585,
        "comment_id": "1208340",
        "user_id": 6597,
        "position": 39,
        "pull_request_id": 63100,
        "body": "this is also a field we don't want to compare - test fails when I run it against a database on a different host"
      },
      {
        "created_at": 1342825539,
        "commit_id": 23585,
        "comment_id": "1209146",
        "user_id": 8280,
        "position": 5,
        "pull_request_id": 63100,
        "body": "I guess probably not.  that file doesn't exist anymore...."
      },
      {
        "created_at": 1342825568,
        "commit_id": 23585,
        "comment_id": "1209153",
        "user_id": 8280,
        "position": 7,
        "pull_request_id": 63100,
        "body": "rats.  yes, thanks.  fixed."
      },
      {
        "created_at": 1342825586,
        "commit_id": 23585,
        "comment_id": "1209155",
        "user_id": 8280,
        "position": 3,
        "pull_request_id": 63100,
        "body": "oh ok.  removed."
      },
      {
        "created_at": 1342825628,
        "commit_id": 23585,
        "comment_id": "1209161",
        "user_id": 8280,
        "position": 31,
        "pull_request_id": 63100,
        "body": "copy paste error.  fixed."
      },
      {
        "created_at": 1342825907,
        "commit_id": 23585,
        "comment_id": "1209208",
        "user_id": 8280,
        "position": 44,
        "pull_request_id": 63100,
        "body": "oh ok.  that sounds good.  fixed."
      },
      {
        "created_at": 1342826051,
        "commit_id": 23585,
        "comment_id": "1209218",
        "user_id": 8280,
        "position": 11,
        "pull_request_id": 63100,
        "body": "for some commands, we differentiate between batches.  for some we don't.  process_objects just uses the same interval for all batch groups, but populate_summary_cache has different intervals for different groups.\n\nTrue about medium.  We don't have anythin"
      },
      {
        "created_at": 1342826818,
        "commit_id": 23585,
        "comment_id": "1209298",
        "user_id": 8280,
        "position": 11,
        "pull_request_id": 63100,
        "body": "ok, added medium for populate_summary_cache at 10 minutes.  and added medium to process_objects at the same interval as the others."
      },
      {
        "created_at": 1342826840,
        "commit_id": 23585,
        "comment_id": "1209303",
        "user_id": 6597,
        "position": 19,
        "pull_request_id": 63100,
        "body": "Actually no need for the `as excinfo` in that example - I initially thought you were making an assertion against properties of the raised exception, in which case you'd need that. But you're not, you're just asserting against output."
      },
      {
        "created_at": 1342827774,
        "commit_id": 23585,
        "comment_id": "1209396",
        "user_id": 8280,
        "position": 45,
        "pull_request_id": 63100,
        "body": "oh, very cool.  ok.  yeah, I did this.  would you check that I put self.full_clean() in the right place in the save() method?"
      },
      {
        "created_at": 1342827808,
        "commit_id": 23585,
        "comment_id": "1209401",
        "user_id": 8280,
        "position": 48,
        "pull_request_id": 63100,
        "body": "good point, yeah.  OK.  I moved BATCH_NAMES into sql/models.py and renamed it CRON_BATCH_NAMES.  Added better comments in the command help and comments."
      },
      {
        "created_at": 1342828243,
        "commit_id": 23585,
        "comment_id": "1209465",
        "user_id": 8280,
        "position": 87,
        "pull_request_id": 63100,
        "body": "ahh, dang.  sorted() is what I was looking for!  I tried sort() which sorts in place and returns nothing...  thanks!"
      },
      {
        "created_at": 1342828430,
        "commit_id": 23585,
        "comment_id": "1209487",
        "user_id": 8280,
        "position": 72,
        "pull_request_id": 63100,
        "body": "ok, sounds good.  I had thought of this being a sort of \"try before you buy\" thing where you can fill out some fields and say, \"now what were the batch names again?\" and throw this on to show you what you'd be acting on.  Then replace this with the cron_b"
      },
      {
        "created_at": 1342829030,
        "commit_id": 23585,
        "comment_id": "1209527",
        "user_id": 8280,
        "position": 117,
        "pull_request_id": 63100,
        "body": "fixed."
      },
      {
        "created_at": 1342835862,
        "commit_id": 23585,
        "comment_id": "1210092",
        "user_id": 8280,
        "position": 103,
        "pull_request_id": 63100,
        "body": "ok, made two methods on PerformanceTestModel which delegate to SQLDataSet and make these calls.  Makes sense."
      },
      {
        "created_at": 1342836348,
        "commit_id": 23585,
        "comment_id": "1210126",
        "user_id": 8280,
        "position": 131,
        "pull_request_id": 63100,
        "body": "ok, removed the property attempt."
      },
      {
        "created_at": 1342836519,
        "commit_id": 23585,
        "comment_id": "1210137",
        "user_id": 8280,
        "position": 81,
        "pull_request_id": 63100,
        "body": "ok, I think my new comments address this."
      },
      {
        "created_at": 1342836556,
        "commit_id": 23585,
        "comment_id": "1210140",
        "user_id": 8280,
        "position": 137,
        "pull_request_id": 63100,
        "body": "done"
      },
      {
        "created_at": 1342928078,
        "commit_id": 23585,
        "comment_id": "1211380",
        "user_id": 6597,
        "position": 26,
        "pull_request_id": 63100,
        "body": "If you don't want to switch to the `handle_project` approach here, I'd at least remove the leading underscore."
      },
      {
        "created_at": 1342928092,
        "commit_id": 23585,
        "comment_id": "1211382",
        "user_id": 6597,
        "position": 44,
        "pull_request_id": 63100,
        "body": "This docstring is now out of date :-)"
      },
      {
        "created_at": 1342928135,
        "commit_id": 23585,
        "comment_id": "1211383",
        "user_id": 6597,
        "position": 72,
        "pull_request_id": 63100,
        "body": "This help text is now out of date."
      },
      {
        "created_at": 1342928217,
        "commit_id": 23583,
        "comment_id": "1211384",
        "user_id": 6597,
        "position": 11,
        "pull_request_id": 63100,
        "body": "What do you think about removing the `Base` suffix from these two class names?"
      },
      {
        "created_at": 1342928301,
        "commit_id": 23585,
        "comment_id": "1211385",
        "user_id": 6597,
        "position": 27,
        "pull_request_id": 63100,
        "body": "Seems this hasn't been addressed yet?"
      },
      {
        "created_at": 1342928336,
        "commit_id": 23583,
        "comment_id": "1211386",
        "user_id": 6597,
        "position": 55,
        "pull_request_id": 63100,
        "body": "typo: s/ar/are"
      },
      {
        "created_at": 1342928420,
        "commit_id": 23583,
        "comment_id": "1211387",
        "user_id": 6597,
        "position": 16,
        "pull_request_id": 63100,
        "body": "this should be automatically generated based on `CRON_BATCH_NAMES` instead of hardcoding duplication:\n\n```\nCRON_BATCH_CHOICES = zip(CRON_BATCH_NAMES, CRON_BATCH_NAMES)\n```\n\nOr you could just do that zip where you actually assign the choices to the field, "
      },
      {
        "created_at": 1342928474,
        "commit_id": 23583,
        "comment_id": "1211388",
        "user_id": 6597,
        "position": 55,
        "pull_request_id": 63100,
        "body": "This joining into a comma-separated string belongs at the UI layer (the management command), because it's a UI choice. Model layer code should be returning data structures (i.e. a list of project names) for maximum flexibility."
      },
      {
        "created_at": 1342928539,
        "commit_id": 23585,
        "comment_id": "1211389",
        "user_id": 6597,
        "position": 19,
        "pull_request_id": 63100,
        "body": "Looks like this hasn't been addressed yet?"
      },
      {
        "created_at": 1342928547,
        "commit_id": 23585,
        "comment_id": "1211390",
        "user_id": 6597,
        "position": 31,
        "pull_request_id": 63100,
        "body": "or this?"
      },
      {
        "created_at": 1343083998,
        "commit_id": 23583,
        "comment_id": "1219499",
        "user_id": 8280,
        "position": 11,
        "pull_request_id": 63100,
        "body": "sure. done."
      },
      {
        "created_at": 1343084081,
        "commit_id": 23585,
        "comment_id": "1219516",
        "user_id": 8280,
        "position": 44,
        "pull_request_id": 63100,
        "body": "rats... fixed."
      },
      {
        "created_at": 1343084140,
        "commit_id": 23585,
        "comment_id": "1219523",
        "user_id": 8280,
        "position": 72,
        "pull_request_id": 63100,
        "body": "double rats... fixed."
      },
      {
        "created_at": 1343084726,
        "commit_id": 23585,
        "comment_id": "1219615",
        "user_id": 8280,
        "position": 27,
        "pull_request_id": 63100,
        "body": "oh crap.  good catch, thanks.  Yeah, just a bug.  Using your suggestion..."
      },
      {
        "created_at": 1343085471,
        "commit_id": 23585,
        "comment_id": "1219780",
        "user_id": 8280,
        "position": 16,
        "pull_request_id": 63100,
        "body": "I added docs for this in the ProjectBatchCommand object, here in model/base.py and in model/sql/models.py now.  Is there anywhere else these docs would make sense?"
      },
      {
        "created_at": 1343085533,
        "commit_id": 23583,
        "comment_id": "1219800",
        "user_id": 8280,
        "position": 55,
        "pull_request_id": 63100,
        "body": "fixed"
      },
      {
        "created_at": 1343085671,
        "commit_id": 23585,
        "comment_id": "1219837",
        "user_id": 6597,
        "position": 16,
        "pull_request_id": 63100,
        "body": "Seems like the right places to me!"
      },
      {
        "created_at": 1343085736,
        "commit_id": 23583,
        "comment_id": "1219853",
        "user_id": 8280,
        "position": 16,
        "pull_request_id": 63100,
        "body": "oh wow, that's very cool.  I'd never used zip before.  thanks!  yeah, just use it in one place, so I removed the const."
      },
      {
        "created_at": 1343086021,
        "commit_id": 23583,
        "comment_id": "1219904",
        "user_id": 8280,
        "position": 55,
        "pull_request_id": 63100,
        "body": "this isn't the first time I've made this error.  let's see if I can avoid it in the future...  :)  fixed."
      },
      {
        "created_at": 1343088044,
        "commit_id": 23585,
        "comment_id": "1220271",
        "user_id": 8280,
        "position": 19,
        "pull_request_id": 63100,
        "body": "that's cool.  didn't know about doing that.  fixed it here and elsewhere."
      },
      {
        "created_at": 1343088269,
        "commit_id": 23585,
        "comment_id": "1220302",
        "user_id": 8280,
        "position": 31,
        "pull_request_id": 63100,
        "body": "fixed."
      },
      {
        "created_at": 1343088323,
        "commit_id": 23585,
        "comment_id": "1220307",
        "user_id": 8280,
        "position": 26,
        "pull_request_id": 63100,
        "body": "oops.  removed."
      },
      {
        "created_at": 1343088434,
        "commit_id": 23585,
        "comment_id": "1220323",
        "user_id": 8280,
        "position": 39,
        "pull_request_id": 63100,
        "body": "good point.  probably type, too, right?  removed compare on type as well."
      }
    ],
    "commits": [
      {
        "created_at": 1343252226,
        "author_id": 6597,
        "sha": "80b95117aa61990c0c343aa566860f428b9937c8",
        "id": 23576,
        "committer_id": 6597,
        "comments": []
      },
      {
        "created_at": 1343251285,
        "author_id": 6597,
        "sha": "480d96383b64aa3b685a3d8701fe4b8ca1bf3d7d",
        "id": 23577,
        "committer_id": 6597,
        "comments": []
      },
      {
        "created_at": 1343248111,
        "author_id": 8280,
        "sha": "59b25ce89fdb00c05243c80e7f787cbe7c4fdfc3",
        "id": 23578,
        "committer_id": 8280,
        "comments": []
      },
      {
        "created_at": 1343247930,
        "author_id": 8280,
        "sha": "6e41c86183c5ced0317ac52ccca848cf62874ed1",
        "id": 23579,
        "committer_id": 8280,
        "comments": []
      },
      {
        "created_at": 1343076434,
        "author_id": 8280,
        "sha": "0ce12a5f049865b17b4f6e8e6ce784b12def1a5a",
        "id": 23580,
        "committer_id": 8280,
        "comments": []
      },
      {
        "created_at": 1342843455,
        "author_id": 8280,
        "sha": "bc9929e808c3da508521357bf96f7ef9b22b4908",
        "id": 23583,
        "committer_id": 8280,
        "comments": []
      },
      {
        "created_at": 1342758458,
        "author_id": 8280,
        "sha": "9f51229435a1e1a9ede7bb8063669f3fe43bcefd",
        "id": 23585,
        "committer_id": 8280,
        "comments": []
      },
      {
        "created_at": 1342754677,
        "author_id": 8280,
        "sha": "48c9dd64e3c6a80e02d0ab06f81a4a0da50ffb3c",
        "id": 23594,
        "committer_id": 8280,
        "comments": []
      },
      {
        "created_at": 1342751987,
        "author_id": 8280,
        "sha": "cb25cbd0b7896e26be53f9714f787bf85c1a356c",
        "id": 23600,
        "committer_id": 8280,
        "comments": []
      },
      {
        "created_at": 1342750522,
        "author_id": 8280,
        "sha": "f589f3c27c6d0aa7d6822a64136246440a901b3a",
        "id": 23606,
        "committer_id": 8280,
        "comments": []
      },
      {
        "created_at": 1342750504,
        "author_id": 8280,
        "sha": "9df18014cea55fbd64d7b784dde41c3e1cf765e9",
        "id": 23608,
        "committer_id": 8280,
        "comments": []
      },
      {
        "created_at": 1342746250,
        "author_id": 8280,
        "sha": "d6a61071e978ae6dd3b30b4d59efcbb690812e0b",
        "id": 23611,
        "committer_id": 8280,
        "comments": []
      },
      {
        "created_at": 1342745266,
        "author_id": 8280,
        "sha": "cec0d264b258859e8c3a1bb8856e7bf1d278efbd",
        "id": 23614,
        "committer_id": 8280,
        "comments": []
      },
      {
        "created_at": 1342740694,
        "author_id": 8280,
        "sha": "14c3ef1ba8999f965c2b69160b18e337762e7c08",
        "id": 23617,
        "committer_id": 8280,
        "comments": []
      },
      {
        "created_at": 1342740668,
        "author_id": 8280,
        "sha": "1b941763f91e68f03b56a0484e82f80c6ca5a0e3",
        "id": 23621,
        "committer_id": 8280,
        "comments": []
      },
      {
        "created_at": 1342667038,
        "author_id": 8280,
        "sha": "7478c8ccd6d5d3e27e361400db2945e4e74cd27d",
        "id": 23626,
        "committer_id": 8280,
        "comments": []
      },
      {
        "created_at": 1342667011,
        "author_id": 8280,
        "sha": "0a1ff971f9a42a344db42b8097b52bbc45c0e32f",
        "id": 23636,
        "committer_id": 8280,
        "comments": []
      },
      {
        "created_at": 1342644561,
        "author_id": 8280,
        "sha": "05745f3ea0a46d509b397455725d775994d706ff",
        "id": 23640,
        "committer_id": 8280,
        "comments": []
      },
      {
        "created_at": 1342565655,
        "author_id": 8280,
        "sha": "0387afde1004eb0d2d61fc43d11bd6d327adf0ea",
        "id": 23675,
        "committer_id": 8280,
        "comments": []
      },
      {
        "created_at": 1342560995,
        "author_id": 8280,
        "sha": "8ac802144152f69b22cb9a404be1323e956d7f55",
        "id": 23687,
        "committer_id": 8280,
        "comments": []
      },
      {
        "created_at": 1342470910,
        "author_id": 8280,
        "sha": "7527a946f700cb6237a601308ed791890a60496a",
        "id": 23692,
        "committer_id": 8280,
        "comments": []
      },
      {
        "created_at": 1342240645,
        "author_id": 8280,
        "sha": "1f4eae1d20d7afda8f70e71a8203687950e94306",
        "id": 4423422,
        "committer_id": 8280,
        "comments": []
      }
    ]
  },
  "349131": {
    "authors": [
      6597
    ],
    "num_watchers": 8862,
    "id": 349131,
    "org_owned": true,
    "relevant_users": {
      "6597": {
        "country_code": "us",
        "is_project_member": {
          "created_at": 1335460256,
          "ext_ref_id": "501983a1edecb512ac00231f"
        },
        "type": "USR",
        "deleted": 0,
        "location": "Rapid City, SD",
        "company": "OddBird",
        "login": "carljm",
        "fake": 0,
        "state": "South Dakota",
        "created_at": 1236618647,
        "id": 6597,
        "num_prior_commits": 77,
        "is_owner_member": false,
        "city": "Rapid City"
      },
      "8277": {
        "country_code": null,
        "is_project_member": {
          "created_at": 1335460256,
          "ext_ref_id": "501983a1edecb512ac002320"
        },
        "type": "USR",
        "deleted": 0,
        "location": null,
        "company": null,
        "login": "jeads",
        "fake": 0,
        "state": null,
        "created_at": 1312101341,
        "id": 8277,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": null
      }
    },
    "project": {
      "full_name": "mozilla/datazilla",
      "created_at": 1335467456,
      "description": "Datazilla is a system for managing and visualizing data.",
      "html_url": "https://github.com/mozilla/datazilla",
      "num_forks": 0,
      "name": "datazilla",
      "id": 4148916,
      "language": "JavaScript",
      "mysql_id": 1366
    },
    "owner": 1146,
    "pull_request": {
      "created_at": 1342723901,
      "issue_id": 56,
      "html_url": "https://github.com/mozilla/datazilla/pull/56",
      "number": 56,
      "merged": true,
      "title": "Add test for bugfix to _set_build_data.",
      "id": 1840172,
      "opened_by": 6597,
      "body": "When we have a bug that doesn't cause any test to fail, that indicates a hole in test coverage. Preferably ever time we fix a bug, we also add a test that fails prior to the bugfix and passes after it. This pull request adds such a test for the recent fix to _set_build_data.",
      "mysql_id": 349131
    },
    "issue_events": [
      {
        "created_at": 1342723901,
        "actor_id": 6597,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "20632768"
      },
      {
        "created_at": 1342739860,
        "actor_id": 8277,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "20669095"
      },
      {
        "created_at": 1342739991,
        "actor_id": 8277,
        "action": "referenced",
        "action_specific": "e4d27f11a49f2f9ffebf6389cc3f634318f2e1bc",
        "event_id": "20669344"
      },
      {
        "created_at": 1342739991,
        "actor_id": 8277,
        "action": "merged",
        "action_specific": "e4d27f11a49f2f9ffebf6389cc3f634318f2e1bc",
        "event_id": "20669345"
      },
      {
        "created_at": 1342739991,
        "actor_id": 8277,
        "action": "closed",
        "action_specific": null,
        "event_id": "20669346"
      }
    ],
    "issue_comments": [
      {
        "created_at": 1342739860,
        "user_id": 8277,
        "comment_id": "7115576",
        "body": "This looks great.  It also looks like the rest of the reference data tests include a second call confirming that the first id is returned for the same reference data, so it looks like we're covered.  Thanks for adding this!"
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1342730907,
        "author_id": 6597,
        "sha": "e3f2bb0781b4662a7504d1a1ee777b4d6b51bf1b",
        "id": 4418005,
        "committer_id": 6597,
        "comments": []
      }
    ]
  },
  "873045": {
    "authors": [
      28773
    ],
    "num_watchers": 8862,
    "id": 873045,
    "org_owned": true,
    "relevant_users": {
      "2427": {
        "country_code": "us",
        "is_project_member": {
          "created_at": 1352489170,
          "corrected_created_at": 1307211291,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": "Portland, OR",
        "company": "Heroku",
        "login": "mattt",
        "fake": 0,
        "state": "Oregon",
        "created_at": 1208409534,
        "id": 2427,
        "num_prior_commits": 0,
        "is_owner_member": true,
        "city": "Portland"
      },
      "28773": {
        "country_code": null,
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": null,
        "company": null,
        "login": "diederich",
        "fake": 0,
        "state": null,
        "created_at": 1236482796,
        "id": 28773,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": null
      }
    },
    "project": {
      "full_name": "AFNetworking/AFNetworking",
      "created_at": 1306884524,
      "description": "A delightful iOS and OS X networking framework",
      "html_url": "https://github.com/AFNetworking/AFNetworking",
      "num_forks": 500,
      "name": "AFNetworking",
      "id": 1828795,
      "language": "Objective-C",
      "mysql_id": 1273
    },
    "owner": 7315,
    "pull_request": {
      "created_at": 1346786839,
      "issue_id": 498,
      "html_url": "https://github.com/AFNetworking/AFNetworking/pull/498",
      "number": 498,
      "merged": true,
      "title": "fix warning",
      "id": 2242249,
      "opened_by": 28773,
      "body": "Xcode warns about a missing prototype which can\nbe fixed by making the (private) method static",
      "mysql_id": 873045
    },
    "issue_events": [
      {
        "created_at": 1346788634,
        "actor_id": 2427,
        "action": "closed",
        "action_specific": null,
        "event_id": "23939372"
      },
      {
        "created_at": 1346788637,
        "actor_id": 2427,
        "action": "reopened",
        "action_specific": null,
        "event_id": "23939379"
      },
      {
        "created_at": 1346788641,
        "actor_id": 2427,
        "action": "referenced",
        "action_specific": "4bdc72cee09a703c2b786927cbf45b08449b2f25",
        "event_id": "23939380"
      },
      {
        "created_at": 1346788641,
        "actor_id": 2427,
        "action": "merged",
        "action_specific": "4bdc72cee09a703c2b786927cbf45b08449b2f25",
        "event_id": "23939381"
      },
      {
        "created_at": 1346788641,
        "actor_id": 2427,
        "action": "closed",
        "action_specific": null,
        "event_id": "23939382"
      }
    ],
    "issue_comments": [
      {
        "created_at": 1346788634,
        "user_id": 2427,
        "comment_id": "8272523",
        "body": "Ah, thanks. I missed that when I was refactoring. That's now a private function, since it isn't particularly useful to an end-user."
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1346793843,
        "author_id": 28773,
        "sha": "e1dafd15ecad6acad6c2fc76f40e1bb4549bbe27",
        "id": 9896585,
        "committer_id": 28773,
        "comments": []
      }
    ]
  },
  "873054": {
    "authors": [
      35430
    ],
    "num_watchers": 8862,
    "id": 873054,
    "org_owned": true,
    "relevant_users": {
      "2427": {
        "country_code": "us",
        "is_project_member": {
          "created_at": 1352489170,
          "corrected_created_at": 1307211291,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": "Portland, OR",
        "company": "Heroku",
        "login": "mattt",
        "fake": 0,
        "state": "Oregon",
        "created_at": 1208409534,
        "id": 2427,
        "num_prior_commits": 0,
        "is_owner_member": true,
        "city": "Portland"
      },
      "35430": {
        "country_code": "us",
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": "Bay Area",
        "company": "Square",
        "login": "mikelikespie",
        "fake": 0,
        "state": "California",
        "created_at": 1219347667,
        "id": 35430,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "SF"
      }
    },
    "project": {
      "full_name": "AFNetworking/AFNetworking",
      "created_at": 1306884524,
      "description": "A delightful iOS and OS X networking framework",
      "html_url": "https://github.com/AFNetworking/AFNetworking",
      "num_forks": 500,
      "name": "AFNetworking",
      "id": 1828795,
      "language": "Objective-C",
      "mysql_id": 1273
    },
    "owner": 7315,
    "pull_request": {
      "created_at": 1346488432,
      "issue_id": 494,
      "html_url": "https://github.com/AFNetworking/AFNetworking/pull/494",
      "number": 494,
      "merged": true,
      "title": "Removing setting Accept-Encoding by default.",
      "id": 2224383,
      "opened_by": 35430,
      "body": "Hi Mattt,\n\nWas wondering if it would be possible to get this change into AFNetworking.\n\nI think it is a bit better behavior since the encodings aren't implemented in userland and it seems the system should set it to what it supports.\n\nIt also adds a workaround to a bug we (think) we found in NSURLConnection where in ios5.1 it won't call the connection:willSendRequest delegate method which is what PonyDebugger relies on when it times connections.\n\nWe wrote about the workaround in our [readme](https://github.com/square/PonyDebugger#known-issues--improvements), but it would be awesome if AFNetworking could help out with this because I think most of our users are on AFNetworking.\n\nNSURLConnection will set this to the supported formats which is a\nsuperset of gzip. (at least in 5.1 it set deflate as well)",
      "mysql_id": 873054
    },
    "issue_events": [
      {
        "created_at": 1346546920,
        "actor_id": 2427,
        "action": "referenced",
        "action_specific": "8fc948cf211699cf4d26f257f7ff43ab4ed860fe",
        "event_id": "23814091"
      },
      {
        "created_at": 1346546920,
        "actor_id": 2427,
        "action": "merged",
        "action_specific": "8fc948cf211699cf4d26f257f7ff43ab4ed860fe",
        "event_id": "23814092"
      },
      {
        "created_at": 1346546920,
        "actor_id": 2427,
        "action": "closed",
        "action_specific": null,
        "event_id": "23814093"
      },
      {
        "created_at": 1346788569,
        "actor_id": 2427,
        "action": "mentioned",
        "action_specific": null,
        "event_id": "23939269"
      },
      {
        "created_at": 1346788569,
        "actor_id": 2427,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "23939270"
      },
      {
        "created_at": 1352799929,
        "actor_id": 2427,
        "action": "referenced",
        "action_specific": null,
        "event_id": "29336257"
      }
    ],
    "issue_comments": [
      {
        "created_at": 1346547158,
        "user_id": 2427,
        "comment_id": "8217369",
        "body": "Mike, thanks for bringing this to my attention. Having just changed a bit of the code around the default User-Agent, I was actually just thinking about whether or not this should be in there too.\n\nI'll have to dig in a bit more into the NSURLConnection internals (maybe ask some Apple engineers in the know) to figure out exactly what's going on (if only out of curiosity), but for now, I'm very comfortable removing a default header that causes magical behavior—especially if it's causing problems on your end.\n\nThanks!"
      },
      {
        "created_at": 1346788569,
        "user_id": 35430,
        "comment_id": "8272488",
        "body": "Thanks a lot @mattt!"
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1346495351,
        "author_id": 35430,
        "sha": "b614dee5bb938abbfbf6fd2dda8d67b812dabc42",
        "id": 9438812,
        "committer_id": 35430,
        "comments": []
      }
    ]
  },
  "873066": {
    "authors": [
      4270
    ],
    "num_watchers": 8862,
    "id": 873066,
    "org_owned": true,
    "relevant_users": {
      "2427": {
        "country_code": "us",
        "is_project_member": {
          "created_at": 1352489170,
          "corrected_created_at": 1307211291,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": "Portland, OR",
        "company": "Heroku",
        "login": "mattt",
        "fake": 0,
        "state": "Oregon",
        "created_at": 1208409534,
        "id": 2427,
        "num_prior_commits": 0,
        "is_owner_member": true,
        "city": "Portland"
      },
      "4270": {
        "country_code": "us",
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": "San Francisco",
        "company": "ZummZumm",
        "login": "tonymillion",
        "fake": 0,
        "state": "California",
        "created_at": 1277775305,
        "id": 4270,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "SF"
      }
    },
    "project": {
      "full_name": "AFNetworking/AFNetworking",
      "created_at": 1306884524,
      "description": "A delightful iOS and OS X networking framework",
      "html_url": "https://github.com/AFNetworking/AFNetworking",
      "num_forks": 500,
      "name": "AFNetworking",
      "id": 1828795,
      "language": "Objective-C",
      "mysql_id": 1273
    },
    "owner": 7315,
    "pull_request": {
      "created_at": 1346367531,
      "issue_id": 488,
      "html_url": "https://github.com/AFNetworking/AFNetworking/pull/488",
      "number": 488,
      "merged": true,
      "title": "hasAcceptableStatusCode will return true after network failure",
      "id": 2210809,
      "opened_by": 4270,
      "body": "I just found a problem where hasAcceptableStatusCode will return true after a network failure.\n\nSteps to reproduce:\n\n1> disable network connectivity on device (airplane mode)\n\n2> create network operation \n\n3> add operation to queue\n\n4> use \"[operation waitUntilFinished]\"\n\n5> test \"[operation hasAcceptableStatusCode]\"\n\n(it will return true even though the network operation failed)",
      "mysql_id": 873066
    },
    "issue_events": [
      {
        "created_at": 1346434979,
        "actor_id": 2427,
        "action": "merged",
        "action_specific": "cdbae5a9fbb6d6cec795d981b055878f340dbd0b",
        "event_id": "23765820"
      },
      {
        "created_at": 1346434980,
        "actor_id": 2427,
        "action": "closed",
        "action_specific": null,
        "event_id": "23765821"
      }
    ],
    "issue_comments": [
      {
        "created_at": 1346372248,
        "user_id": 2427,
        "comment_id": "8176632",
        "body": "Alas, the complication here is that loading from a file also returns an `NSURLResponse`. Is there no way to distinguish between these cases?"
      },
      {
        "created_at": 1346372748,
        "user_id": 4270,
        "comment_id": "8176847",
        "body": "The alternative would be to put a boolean didFail somewhere in the class structure probably AFURLConnectionOperation and have it set to YES in connection:didFailWithError:\n\nI'll have to dig deeper, but I don't believe you can distinguish between a network \"error\" and a (for example) JSONDecode error or I'd suggest doing that.\n\nIn my case I have a series of files to upload to a server which pretty much need to be done serially. Hence me creating the request then using waitUntilFinished, then testing everything went ok. I could probably work around it with a serial dispatch queue and some cleverness, but at least if this is here its a \"known issue\" for someone in the future."
      },
      {
        "created_at": 1346408915,
        "user_id": 4270,
        "comment_id": "8185586",
        "body": "This should now fix the problem, as self.response is nil for failed network connections."
      },
      {
        "created_at": 1346435016,
        "user_id": 2427,
        "comment_id": "8196089",
        "body": "Great, just merged all of this in. Thanks for figuring this all out, dude."
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1346374299,
        "author_id": 4270,
        "sha": "e3307924110bfd54e342cf600c6fb48a0a5bd44b",
        "id": 9099982,
        "committer_id": 4270,
        "comments": []
      },
      {
        "created_at": 1346416063,
        "author_id": 4270,
        "sha": "cdbae5a9fbb6d6cec795d981b055878f340dbd0b",
        "id": 9177242,
        "committer_id": 4270,
        "comments": []
      }
    ]
  },
  "873079": {
    "authors": [
      273139
    ],
    "num_watchers": 8862,
    "id": 873079,
    "org_owned": true,
    "relevant_users": {
      "35991": {
        "country_code": null,
        "is_project_member": {
          "created_at": 1343075576,
          "corrected_created_at": 1335395320,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": null,
        "company": null,
        "login": "tewha",
        "fake": 0,
        "state": null,
        "created_at": 1248391412,
        "id": 35991,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": null
      },
      "273139": {
        "country_code": "us",
        "is_project_member": {
          "created_at": 1345760582,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": "New York, NY",
        "company": null,
        "login": "pnc",
        "fake": 0,
        "state": "New York",
        "created_at": 1248501080,
        "id": 273139,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "NYC"
      }
    },
    "project": {
      "full_name": "AFNetworking/AFNetworking",
      "created_at": 1306884524,
      "description": "A delightful iOS and OS X networking framework",
      "html_url": "https://github.com/AFNetworking/AFNetworking",
      "num_forks": 500,
      "name": "AFNetworking",
      "id": 1828795,
      "language": "Objective-C",
      "mysql_id": 1273
    },
    "owner": 7315,
    "pull_request": {
      "created_at": 1345758553,
      "issue_id": 478,
      "html_url": "https://github.com/AFNetworking/AFNetworking/pull/478",
      "number": 478,
      "merged": false,
      "title": "Automatically dispatch callbacks to the calling queue",
      "id": 2146331,
      "opened_by": 273139,
      "body": "GREETINGS.\n\nThis patch changes the default dispatch queue on which AFNetworking calls your success and failure blocks. \n\nCurrently, AFNetworking calls you back on the main queue unless you specifically request otherwise using `successCallbackQueue` and `failureCallbackQueue`. This patch changes AFNetworking so it assumes that the queue _calling_ the `setCompletionBlockWithSuccess:failure:` selector is the intended callback queue. Because all paths lead to `setCompletionBlockWithSuccess:failure:`, this patch also changes the behavior of the more commonly-used APIs, such as the lovable `getPath:parameters:success:failure:`.\n\nThis allows `AFHTTPRequestOperation`, its subclasses, and the get/post/put/delete/patch methods on `AFHTTPClient`, to be used safely from long-lived background queues, such as an `NSOperation` performing a multi-request action.\n\nIn (I posit) 90% of use cases, it will end up dispatching on the main queue anyway, exactly as it worked previously. However, I believe this implementation better fits with what one expects when using blocks. The (beautiful) illusion blocks create for the developer is that code is happening later, but in nearly (or very nearly) the same context. This helps preserve that illusion in the (admittedly rarer) cases where you call AFNetworking from a non-main queue.\n\nI tested this patch in the two example applications, and I've been using it in a private application I'm developing for a client.\n\nI fully expect some discussion (or an outright close!) of this pull request. I also recognize that it may be appropriate to add this same functionality in `AFHTTPClient`'s `enqueueBatchOfHTTPRequestOperations:progressBlock:completionBlock:`. I am totally willing to do this and squash it if people like the spirit of the patch.\n\nP.S. I am a huge fan of AFNetworking and recommend it to anyone who asks.",
      "mysql_id": 873079
    },
    "issue_events": [
      {
        "created_at": 1345760196,
        "actor_id": 35991,
        "action": "mentioned",
        "action_specific": null,
        "event_id": "23267254"
      },
      {
        "created_at": 1345760196,
        "actor_id": 35991,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "23267255"
      },
      {
        "created_at": 1345760582,
        "actor_id": 273139,
        "action": "closed",
        "action_specific": null,
        "event_id": "23267745"
      }
    ],
    "issue_comments": [
      {
        "created_at": 1345759411,
        "user_id": 35991,
        "comment_id": "7982226",
        "body": "You shouldn't do this. `dispatch_get_current_queue()` is only for debugging, and is (I'm told) being deprecated. It doesn't behave as you expect; the return results are often the default concurrent queue, even when that isn't the queue you're in.\n\nTake a look at the documentation in queue.h, and of course the discussion in the Documentation."
      },
      {
        "created_at": 1345760196,
        "user_id": 273139,
        "comment_id": "7982595",
        "body": "@tewha — That's interesting to hear it's being deprecated. I found the discussion on the manpage and the Documentation to be stern, but I took the `Recommended for debugging and logging purposes only` to mean \"this can surprise you,\" not \"don't use this.\" Apple tends to be very upfront when they don't want you to use something. Obviously, if this returns something you don't expect and you dispatch synchronously, you're going to deadlock, and I think that's the reason for the warning.\n\nYou say the results are \"often the default concurrent queue\", but I don't think that's an accurate characterization. According to the [manpage](http://developer.apple.com/library/mac/#documentation/Darwin/Reference/ManPages/man3/dispatch_get_current_queue.3.html), \"If this function is called from the main thread before `dispatch_main()` is called, then the result of `dispatch_get_main_queue()` is returned.\" However, `dispatch_main()` is not used in Cocoa applications, so this is not a concern.\n\nIs the suggestion that this is being deprecated public?"
      },
      {
        "created_at": 1345760528,
        "user_id": 35991,
        "comment_id": "7982761",
        "body": "https://devforums.apple.com/message/710933"
      },
      {
        "created_at": 1345760577,
        "user_id": 35991,
        "comment_id": "7982784",
        "body": "Better yet, the Apple engineer's reply:\nhttps://devforums.apple.com/message/714753#714753"
      },
      {
        "created_at": 1345760581,
        "user_id": 273139,
        "comment_id": "7982789",
        "body": "Of course. Ungooglable. Thanks."
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1345764217,
        "author_id": 273139,
        "sha": "2816c87606bb490685361a6f3cf3aa9fdec79991",
        "id": 7380618,
        "committer_id": 273139,
        "comments": []
      }
    ]
  },
  "873080": {
    "authors": [
      35991
    ],
    "num_watchers": 8862,
    "id": 873080,
    "org_owned": true,
    "relevant_users": {
      "2427": {
        "country_code": "us",
        "is_project_member": {
          "created_at": 1352489170,
          "corrected_created_at": 1307211291,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": "Portland, OR",
        "company": "Heroku",
        "login": "mattt",
        "fake": 0,
        "state": "Oregon",
        "created_at": 1208409534,
        "id": 2427,
        "num_prior_commits": 0,
        "is_owner_member": true,
        "city": "Portland"
      },
      "35991": {
        "country_code": null,
        "is_project_member": {
          "created_at": 1343075576,
          "corrected_created_at": 1335395320,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": null,
        "company": null,
        "login": "tewha",
        "fake": 0,
        "state": null,
        "created_at": 1248391412,
        "id": 35991,
        "num_prior_commits": 3,
        "is_owner_member": false,
        "city": null
      }
    },
    "project": {
      "full_name": "AFNetworking/AFNetworking",
      "created_at": 1306884524,
      "description": "A delightful iOS and OS X networking framework",
      "html_url": "https://github.com/AFNetworking/AFNetworking",
      "num_forks": 500,
      "name": "AFNetworking",
      "id": 1828795,
      "language": "Objective-C",
      "mysql_id": 1273
    },
    "owner": 7315,
    "pull_request": {
      "created_at": 1345749041,
      "issue_id": 477,
      "html_url": "https://github.com/AFNetworking/AFNetworking/pull/477",
      "number": 477,
      "merged": true,
      "title": "Spelling fixes",
      "id": 2144501,
      "opened_by": 35991,
      "body": "Used Xcode's spelling checker on header files.",
      "mysql_id": 873080
    },
    "issue_events": [
      {
        "created_at": 1346266529,
        "actor_id": 2427,
        "action": "referenced",
        "action_specific": "7681a923828346a74fcf05bbd339e84b6919fefe",
        "event_id": "23611061"
      },
      {
        "created_at": 1346266529,
        "actor_id": 2427,
        "action": "merged",
        "action_specific": "7681a923828346a74fcf05bbd339e84b6919fefe",
        "event_id": "23611062"
      },
      {
        "created_at": 1346266529,
        "actor_id": 2427,
        "action": "closed",
        "action_specific": null,
        "event_id": "23611063"
      }
    ],
    "issue_comments": [
      {
        "created_at": 1346116782,
        "user_id": 35991,
        "comment_id": "8074383",
        "body": "Note: These are NOT the same fixes suggested by pull request #475. This is after that pull request landed."
      },
      {
        "created_at": 1346266561,
        "user_id": 2427,
        "comment_id": "8132342",
        "body": "I find these changes \"accceptable\" :tongue:"
      },
      {
        "created_at": 1346266673,
        "user_id": 35991,
        "comment_id": "8132399",
        "body": "Thanks for the respose! ;)"
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1345756092,
        "author_id": 35991,
        "sha": "dd0e659e09d34288bbe73bd80ff3e232a9bf901e",
        "id": 7375468,
        "committer_id": 35991,
        "comments": []
      }
    ]
  },
  "873081": {
    "authors": [
      230279
    ],
    "num_watchers": 8862,
    "id": 873081,
    "org_owned": true,
    "relevant_users": {
      "2427": {
        "country_code": "us",
        "is_project_member": {
          "created_at": 1352489170,
          "corrected_created_at": 1307211291,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": "Portland, OR",
        "company": "Heroku",
        "login": "mattt",
        "fake": 0,
        "state": "Oregon",
        "created_at": 1208409534,
        "id": 2427,
        "num_prior_commits": 0,
        "is_owner_member": true,
        "city": "Portland"
      },
      "230279": {
        "country_code": null,
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": null,
        "company": null,
        "login": "garethson",
        "fake": 0,
        "state": null,
        "created_at": 1271912028,
        "id": 230279,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": null
      }
    },
    "project": {
      "full_name": "AFNetworking/AFNetworking",
      "created_at": 1306884524,
      "description": "A delightful iOS and OS X networking framework",
      "html_url": "https://github.com/AFNetworking/AFNetworking",
      "num_forks": 500,
      "name": "AFNetworking",
      "id": 1828795,
      "language": "Objective-C",
      "mysql_id": 1273
    },
    "owner": 7315,
    "pull_request": {
      "created_at": 1345748467,
      "issue_id": 476,
      "html_url": "https://github.com/AFNetworking/AFNetworking/pull/476",
      "number": 476,
      "merged": true,
      "title": "Calling downloadProgress no longer casting [data length] to (long long)",
      "id": 2144391,
      "opened_by": 230279,
      "body": "AFURLConnectionOperationProgressBlock specifies \"bytes\" as an NSInteger. Master was casting [data length] as a long long, resulting in compilation errors if attempting to compile with more strict complication rules. Only the totalBytes and totalBytesExpected are specified as (and correctly called with) long long values.\n\nNSUInteger appears to be the most appropriate data type, and plays nicely with setting \"Implicit Conversion to 32 Bit Type\" warning setting in XCode.",
      "mysql_id": 873081
    },
    "issue_events": [
      {
        "created_at": 1346266746,
        "actor_id": 2427,
        "action": "referenced",
        "action_specific": "6558e95ae51a569c8ce2b1a4b6c3fea719393813",
        "event_id": "23611335"
      },
      {
        "created_at": 1346266746,
        "actor_id": 2427,
        "action": "merged",
        "action_specific": "6558e95ae51a569c8ce2b1a4b6c3fea719393813",
        "event_id": "23611336"
      },
      {
        "created_at": 1346266746,
        "actor_id": 2427,
        "action": "closed",
        "action_specific": null,
        "event_id": "23611337"
      },
      {
        "created_at": 1348015473,
        "actor_id": 108861,
        "action": "referenced",
        "action_specific": "ac72acbe2973963526cdb1d608a7ec439fa01737",
        "event_id": "24907836"
      }
    ],
    "issue_comments": [
      {
        "created_at": 1346266743,
        "user_id": 2427,
        "comment_id": "8132444",
        "body": "Thanks for your pull request. This all seems correct to me, though I can't help but be dismayed by the churn on this particular issue—I have no idea why I've gone back and forth on type casting for all this so many times. "
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1345760147,
        "author_id": 230279,
        "sha": "13ec70cc8f5bc5acd3d579c60704e7a8638abc24",
        "id": 7375164,
        "committer_id": 230279,
        "comments": []
      },
      {
        "created_at": 1345755594,
        "author_id": 230279,
        "sha": "1136bc5e2f8493cab0db582b336581c18d01e3dc",
        "id": 7375165,
        "committer_id": 230279,
        "comments": []
      }
    ]
  },
  "873085": {
    "authors": [
      596965
    ],
    "num_watchers": 8862,
    "id": 873085,
    "org_owned": true,
    "relevant_users": {
      "2427": {
        "country_code": "us",
        "is_project_member": {
          "created_at": 1352489170,
          "corrected_created_at": 1307211291,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": "Portland, OR",
        "company": "Heroku",
        "login": "mattt",
        "fake": 0,
        "state": "Oregon",
        "created_at": 1208409534,
        "id": 2427,
        "num_prior_commits": 0,
        "is_owner_member": true,
        "city": "Portland"
      },
      "23824": {
        "country_code": "de",
        "is_project_member": {
          "created_at": 1345618990,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": "Berlin, Germany",
        "company": null,
        "login": "stanislaw",
        "fake": 0,
        "state": "Berlin",
        "created_at": 1287989531,
        "id": 23824,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "Berlin"
      },
      "35991": {
        "country_code": null,
        "is_project_member": {
          "created_at": 1343075576,
          "corrected_created_at": 1335395320,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": null,
        "company": null,
        "login": "tewha",
        "fake": 0,
        "state": null,
        "created_at": 1248391412,
        "id": 35991,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": null
      },
      "358971": {
        "country_code": "us",
        "is_project_member": {
          "created_at": 1344979284,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": "Columbus, OH",
        "company": "Light Year Software, LLC",
        "login": "sjmadsen",
        "fake": 0,
        "state": "Ohio",
        "created_at": 1235506180,
        "id": 358971,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "Columbus"
      },
      "596965": {
        "country_code": null,
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": null,
        "company": null,
        "login": "JakeMan",
        "fake": 0,
        "state": null,
        "created_at": 1263947645,
        "id": 596965,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": null
      }
    },
    "project": {
      "full_name": "AFNetworking/AFNetworking",
      "created_at": 1306884524,
      "description": "A delightful iOS and OS X networking framework",
      "html_url": "https://github.com/AFNetworking/AFNetworking",
      "num_forks": 500,
      "name": "AFNetworking",
      "id": 1828795,
      "language": "Objective-C",
      "mysql_id": 1273
    },
    "owner": 7315,
    "pull_request": {
      "created_at": 1345673319,
      "issue_id": 472,
      "html_url": "https://github.com/AFNetworking/AFNetworking/pull/472",
      "number": 472,
      "merged": false,
      "title": "Added HTTP Status Code as a separate key in NSError dictionary",
      "id": 2131155,
      "opened_by": 153639,
      "body": "Added HTTP status codes like 404, 500 in as a separate key in NSErrors so that developers do not have to parse the error string and assume the error code is after the word \"got\".",
      "mysql_id": 873085
    },
    "issue_events": [
      {
        "created_at": 1346282190,
        "actor_id": 2427,
        "action": "referenced",
        "action_specific": "ed94ddf7b09263fcc7104e936a7ae1d751199fe7",
        "event_id": "23631854"
      },
      {
        "created_at": 1346282556,
        "actor_id": 153639,
        "action": "mentioned",
        "action_specific": null,
        "event_id": "23632353"
      },
      {
        "created_at": 1346282556,
        "actor_id": 153639,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "23632354"
      },
      {
        "created_at": 1346282557,
        "actor_id": 2427,
        "action": "closed",
        "action_specific": null,
        "event_id": "23632355"
      },
      {
        "created_at": 1348015473,
        "actor_id": 108861,
        "action": "referenced",
        "action_specific": "a72184a22698d18494401e6692461e6ce6e5d4fb",
        "event_id": "24907838"
      }
    ],
    "issue_comments": [
      {
        "created_at": 1345675521,
        "user_id": 35991,
        "comment_id": "7948749",
        "body": "I like the idea, but wouldn't this make more sense as a NSNumber?\n\n(Disclaimer: I'm not a AFNetworking developer, I'm just some guy who likes to watch the issues as they arise.)"
      },
      {
        "created_at": 1345723570,
        "user_id": 23824,
        "comment_id": "7965176",
        "body": "+1 for this."
      },
      {
        "created_at": 1345742135,
        "user_id": 358971,
        "comment_id": "7972968",
        "body": "While this doesn't hurt anything, you can already get the numeric HTTP status code in the failure block, as `operation.response.statusCode`."
      },
      {
        "created_at": 1345744939,
        "user_id": 35991,
        "comment_id": "7974574",
        "body": "That's only true if you still have the operation around, which means passing the operation all the way to where the error is interpreted.\n\nI think adding the operation to the error's dictionary would also be smart, but this is a bigger request."
      },
      {
        "created_at": 1346282556,
        "user_id": 2427,
        "comment_id": "8141677",
        "body": "Errors can be a lot like notifications in how they can travel far across the application. In order to cope with this loss of locality, I think it's useful to keep some of the original context, to better inform a response to that error.\n\nAdding the status code does well to provide some of that context, but I think we can add a lot more by providing the original request and response of the operation in the error. \n\nThis could be useful if, for instance, an application has a unified logging system for errors, such that it aggregates the failed URL requests in some significant way. By providing that original context, a developer wouldn't have to resort to parsing a user-facing string or anything like that.\n\nThanks for raising this point, @jake-stacktrace. I hope you find this solution amenable to your needs."
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1345680327,
        "author_id": 596965,
        "sha": "791767f66797368f461dd6c2ece6efa803326878",
        "id": 7336429,
        "committer_id": 596965,
        "comments": []
      },
      {
        "created_at": 1345842824,
        "author_id": 596965,
        "sha": "ec0725d4589982dc5045fad62b933d3c1c701444",
        "id": 7336441,
        "committer_id": 596965,
        "comments": []
      }
    ]
  },
  "873093": {
    "authors": [
      582634
    ],
    "num_watchers": 8862,
    "id": 873093,
    "org_owned": true,
    "relevant_users": {
      "2427": {
        "country_code": "us",
        "is_project_member": {
          "created_at": 1352489170,
          "corrected_created_at": 1307211291,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": "Portland, OR",
        "company": "Heroku",
        "login": "mattt",
        "fake": 0,
        "state": "Oregon",
        "created_at": 1208409534,
        "id": 2427,
        "num_prior_commits": 0,
        "is_owner_member": true,
        "city": "Portland"
      },
      "35991": {
        "country_code": null,
        "is_project_member": {
          "created_at": 1343075576,
          "corrected_created_at": 1335395320,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": null,
        "company": null,
        "login": "tewha",
        "fake": 0,
        "state": null,
        "created_at": 1248391412,
        "id": 35991,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": null
      },
      "582634": {
        "country_code": null,
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": null,
        "company": null,
        "login": "CDUCWVOG",
        "fake": 1,
        "state": null,
        "created_at": 1345711205,
        "id": 582634,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": null
      },
      "661070": {
        "country_code": null,
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": null,
        "company": null,
        "login": "tuzzolo",
        "fake": 0,
        "state": null,
        "created_at": 1238459955,
        "id": 661070,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": null
      }
    },
    "project": {
      "full_name": "AFNetworking/AFNetworking",
      "created_at": 1306884524,
      "description": "A delightful iOS and OS X networking framework",
      "html_url": "https://github.com/AFNetworking/AFNetworking",
      "num_forks": 500,
      "name": "AFNetworking",
      "id": 1828795,
      "language": "Objective-C",
      "mysql_id": 1273
    },
    "owner": 7315,
    "pull_request": {
      "created_at": 1345577673,
      "issue_id": 469,
      "html_url": "https://github.com/AFNetworking/AFNetworking/pull/469",
      "number": 469,
      "merged": false,
      "title": "Faster calculation of the count of finished operations in a queue.",
      "id": 2116773,
      "opened_by": 661070,
      "body": "This works around a performance issue with NSPredicate that arises when canceling queues with a large number of operations. Since the progress blocks are generally executed on the main thread, the UI can be blocked for several seconds when large queues are cancelled. Fast Enumeration performs much better, completing in roughly .0004s for ~1700 operations vs .0090s when using filteredArrayUsingPredicate.",
      "mysql_id": 873093
    },
    "issue_events": [
      {
        "created_at": 1345663105,
        "actor_id": 2427,
        "action": "closed",
        "action_specific": null,
        "event_id": "23172117"
      },
      {
        "created_at": 1345667585,
        "actor_id": 2427,
        "action": "referenced",
        "action_specific": "706fbe473d6118db12f0c15258d619d6de2e67bc",
        "event_id": "23178104"
      },
      {
        "created_at": 1345667742,
        "actor_id": 2427,
        "action": "reopened",
        "action_specific": null,
        "event_id": "23178307"
      },
      {
        "created_at": 1345667750,
        "actor_id": 35991,
        "action": "mentioned",
        "action_specific": null,
        "event_id": "23178321"
      },
      {
        "created_at": 1345667750,
        "actor_id": 35991,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "23178322"
      },
      {
        "created_at": 1345667750,
        "actor_id": 661070,
        "action": "mentioned",
        "action_specific": null,
        "event_id": "23178323"
      },
      {
        "created_at": 1345667750,
        "actor_id": 661070,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "23178324"
      },
      {
        "created_at": 1345667750,
        "actor_id": 2427,
        "action": "closed",
        "action_specific": null,
        "event_id": "23178325"
      },
      {
        "created_at": 1346120334,
        "actor_id": 2427,
        "action": "mentioned",
        "action_specific": null,
        "event_id": "23471522"
      },
      {
        "created_at": 1346120334,
        "actor_id": 2427,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "23471523"
      },
      {
        "created_at": 1348015473,
        "actor_id": 108861,
        "action": "referenced",
        "action_specific": "b9fb07f682141740912656e08a80676fb716ab2b",
        "event_id": "24907835"
      }
    ],
    "issue_comments": [
      {
        "created_at": 1345590974,
        "user_id": 2427,
        "comment_id": "7916524",
        "body": "~1700 operations? I can't say I'd ever imagined that many at once. Out of curiosity, what kind of application is this?"
      },
      {
        "created_at": 1345663105,
        "user_id": 2427,
        "comment_id": "7941809",
        "body": "While an order-of-magnitude speedup is impressive, I don't think this optimization is worth it—particularly if it means a few milliseconds for a particularly extreme data size (on the order of a dozen operations, which I suspect is normal, I don't think this would make much of a difference).\n\nIf your progress block is blocking the UI, you may want to consider backgrounding work in a background queue before dispatching to main in your callback. What you're describing in this issue should not be the cause of the slowness there. I hope that helps."
      },
      {
        "created_at": 1345664256,
        "user_id": 35991,
        "comment_id": "7942431",
        "body": "I think you're right about the performance aspects of it. It's not that important.\n\nBut the current code is building an array just to get the number of items matching the criteria (and immediately throwing the array away). That's not only unnecessary cycles, but also extra memory usage. Just counting the items is more elegant, and I think that makes the patch valuable on its own merits."
      },
      {
        "created_at": 1345667750,
        "user_id": 2427,
        "comment_id": "7944426",
        "body": "@tewha Yeah, you're right. I wish NSArray had `-countOfObjectsMatchingPredicate:` (or at least I could've sworn that there's something like that method somewhere around Foundation).\n\nAnyway, I added my own, more pedantic implementation in 72a85e1. Thanks for opening this issue, @mtuzzolo—sorry for the brush off before."
      },
      {
        "created_at": 1346120334,
        "user_id": 661070,
        "comment_id": "8075570",
        "body": "For some reason didn't get the email notifications of the activity on this. Sorry about that. Thanks for the fix, @mattt. \n\nIn case you're still curious, the app is syncing a large body of content, mostly product catalogues comprised of PNGs, mp4s, etc. Since we're working with a lot of data (gigs), the UI is designed to be something fairly informative for the user  and displays KB/s, current filename, file progress, total queue progress, as well as a cancel button.\n\nBackgrounding wouldn't really an option here since the progress block executes on the main thread to update the progress view. Of course, when the queue is cancelled, it's still executed on the main thread. If you run the math on the filteredArrayUsingPredicate, .0090 * 1700 is roughly 15s. So even in 100-200 operation range you'd start to see very noticeable blocking on the main thread when canceling. \n\nAnyway, sorry for the delayed response. Thanks again for your help."
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1345583733,
        "author_id": 582634,
        "sha": "dc0edfc8933b8928ced066ec5a2500578a26d8d9",
        "id": 6986173,
        "committer_id": 582634,
        "comments": []
      }
    ]
  },
  "873094": {
    "authors": [
      562050
    ],
    "num_watchers": 8862,
    "id": 873094,
    "org_owned": true,
    "relevant_users": {
      "2427": {
        "country_code": "us",
        "is_project_member": {
          "created_at": 1352489170,
          "corrected_created_at": 1307211291,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": "Portland, OR",
        "company": "Heroku",
        "login": "mattt",
        "fake": 0,
        "state": "Oregon",
        "created_at": 1208409534,
        "id": 2427,
        "num_prior_commits": 0,
        "is_owner_member": true,
        "city": "Portland"
      },
      "562050": {
        "country_code": null,
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": null,
        "company": null,
        "login": "leolobato",
        "fake": 0,
        "state": null,
        "created_at": 1254511518,
        "id": 562050,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": null
      }
    },
    "project": {
      "full_name": "AFNetworking/AFNetworking",
      "created_at": 1306884524,
      "description": "A delightful iOS and OS X networking framework",
      "html_url": "https://github.com/AFNetworking/AFNetworking",
      "num_forks": 500,
      "name": "AFNetworking",
      "id": 1828795,
      "language": "Objective-C",
      "mysql_id": 1273
    },
    "owner": 7315,
    "pull_request": {
      "created_at": 1345567325,
      "issue_id": 468,
      "html_url": "https://github.com/AFNetworking/AFNetworking/pull/468",
      "number": 468,
      "merged": true,
      "title": "Fix for issue #237.",
      "id": 2114517,
      "opened_by": 562050,
      "body": "Check if statusCode is available on response class.",
      "mysql_id": 873094
    },
    "issue_events": [
      {
        "created_at": 1345668808,
        "actor_id": 2427,
        "action": "merged",
        "action_specific": "7787f17469bb1edf0e4765e7ac54af7387a39b3b",
        "event_id": "23179883"
      },
      {
        "created_at": 1345668808,
        "actor_id": 2427,
        "action": "closed",
        "action_specific": null,
        "event_id": "23179885"
      }
    ],
    "issue_comments": [
      {
        "created_at": 1345668834,
        "user_id": 2427,
        "comment_id": "7945069",
        "body": "Thanks for your patch. This has been merged in with some reformatting in d863759. Cheers!"
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1345574458,
        "author_id": 562050,
        "sha": "7787f17469bb1edf0e4765e7ac54af7387a39b3b",
        "id": 6855674,
        "committer_id": 562050,
        "comments": []
      }
    ]
  },
  "873119": {
    "authors": [
      153057
    ],
    "num_watchers": 8862,
    "id": 873119,
    "org_owned": true,
    "relevant_users": {
      "2427": {
        "country_code": "us",
        "is_project_member": {
          "created_at": 1352489170,
          "corrected_created_at": 1307211291,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": "Portland, OR",
        "company": "Heroku",
        "login": "mattt",
        "fake": 0,
        "state": "Oregon",
        "created_at": 1208409534,
        "id": 2427,
        "num_prior_commits": 0,
        "is_owner_member": true,
        "city": "Portland"
      },
      "153057": {
        "country_code": null,
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": null,
        "company": null,
        "login": "NDOVXDMF",
        "fake": 1,
        "state": null,
        "created_at": 1344269990,
        "id": 153057,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": null
      }
    },
    "project": {
      "full_name": "AFNetworking/AFNetworking",
      "created_at": 1306884524,
      "description": "A delightful iOS and OS X networking framework",
      "html_url": "https://github.com/AFNetworking/AFNetworking",
      "num_forks": 500,
      "name": "AFNetworking",
      "id": 1828795,
      "language": "Objective-C",
      "mysql_id": 1273
    },
    "owner": 7315,
    "pull_request": {
      "created_at": 1344902290,
      "issue_id": 459,
      "html_url": "https://github.com/AFNetworking/AFNetworking/pull/459",
      "number": 459,
      "merged": false,
      "title": "ImageView+AFNetworking category support for OSX",
      "id": 2047078,
      "opened_by": 104157,
      "body": "This patch consists in replacing UIImageView by NSImageView if AFNetworking is user in an OSX app.\n\n`- (void)setImageWithURL:placeholderImage:` and `- (void)setImageWithURLRequest:placeholderImage:success:failure:` were tested successfully. They should be the only two critical methods for this modification, but further tests are welcomed.",
      "mysql_id": 873119
    },
    "issue_events": [
      {
        "created_at": 1344964223,
        "actor_id": 2427,
        "action": "closed",
        "action_specific": null,
        "event_id": "22661219"
      }
    ],
    "issue_comments": [
      {
        "created_at": 1344964223,
        "user_id": 2427,
        "comment_id": "7728929",
        "body": "This is an interesting idea, but `typedef`-ing `UIImageView` to `NSImageView` is perhaps too clever by half. It certainly works, and you're fine to keep doing that yourself, but I will hold back on adding this in until a full solution exists. Thanks, though.\n\nI do plan to introduce a bunch of Mac extensions in future versions. However, in my limited Mac dev experience so far, it would seem that it'd be much more useful to create a better experience around `NSCell` first, or at least figure out the right way to bind images to image views. "
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1344909147,
        "author_id": 153057,
        "sha": "ffe63da3c33869be5a4cd39af277bfe08aa28128",
        "id": 4752769,
        "committer_id": 153057,
        "comments": []
      }
    ]
  },
  "873126": {
    "authors": [
      331628
    ],
    "num_watchers": 8862,
    "id": 873126,
    "org_owned": true,
    "relevant_users": {
      "2427": {
        "country_code": "us",
        "is_project_member": {
          "created_at": 1352489170,
          "corrected_created_at": 1307211291,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": "Portland, OR",
        "company": "Heroku",
        "login": "mattt",
        "fake": 0,
        "state": "Oregon",
        "created_at": 1208409534,
        "id": 2427,
        "num_prior_commits": 0,
        "is_owner_member": true,
        "city": "Portland"
      },
      "331622": {
        "country_code": null,
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": null,
        "company": null,
        "login": "smokinguns",
        "fake": 0,
        "state": null,
        "created_at": 1307305497,
        "id": 331622,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": null
      },
      "331628": {
        "country_code": null,
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": null,
        "company": null,
        "login": "FHLARIJP",
        "fake": 1,
        "state": null,
        "created_at": 1344405972,
        "id": 331628,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": null
      }
    },
    "project": {
      "full_name": "AFNetworking/AFNetworking",
      "created_at": 1306884524,
      "description": "A delightful iOS and OS X networking framework",
      "html_url": "https://github.com/AFNetworking/AFNetworking",
      "num_forks": 500,
      "name": "AFNetworking",
      "id": 1828795,
      "language": "Objective-C",
      "mysql_id": 1273
    },
    "owner": 7315,
    "pull_request": {
      "created_at": 1344791269,
      "issue_id": 456,
      "html_url": "https://github.com/AFNetworking/AFNetworking/pull/456",
      "number": 456,
      "merged": true,
      "title": "add accept header for setImageWithURL",
      "id": 2036448,
      "opened_by": 331622,
      "body": "Currently the accepts header gets sets as Accept \\*/* for setImageWithURL\n\nSince this is for an image request, would it be ok to set the header to Accept image/* as the accept header",
      "mysql_id": 873126
    },
    "issue_events": [
      {
        "created_at": 1344896404,
        "actor_id": 2427,
        "action": "merged",
        "action_specific": "59ef3550d59e1b18a2094445cb2adb2da695eeb7",
        "event_id": "22607530"
      },
      {
        "created_at": 1344896404,
        "actor_id": 2427,
        "action": "closed",
        "action_specific": null,
        "event_id": "22607531"
      }
    ],
    "issue_comments": [
      {
        "created_at": 1344896627,
        "user_id": 2427,
        "comment_id": "7706727",
        "body": "You know what? That's a great idea. Thanks for sharing it.\n\nI've merged this into b3d63b58c0ecf168682287b583cd81eb23174ce2."
      },
      {
        "created_at": 1344915462,
        "user_id": 331622,
        "comment_id": "7713924",
        "body": "Cool this helps a lot. I'm using the same URL in my web api to return either json or an image. Thanks for this library. It really has saved me a lot of development time. I also love how stable it is.\r\n\r\nBradley Lower\r\n\r\nOn Aug 13, 2012, at 3:23 PM, \"Mattt Thompson\" <notifications@github.com> wrote:\r\n\r\n> You know what? That's a great idea. Thanks for sharing it.\r\n> \r\n> I've merged this into b3d63b5.\r\n> \r\n> —\r\n> Reply to this email directly or view it on GitHub.\r\n> \r\n"
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1344797551,
        "author_id": 331628,
        "sha": "59ef3550d59e1b18a2094445cb2adb2da695eeb7",
        "id": 3640567,
        "committer_id": 331628,
        "comments": []
      }
    ]
  },
  "873139": {
    "authors": [
      35991
    ],
    "num_watchers": 8862,
    "id": 873139,
    "org_owned": true,
    "relevant_users": {
      "2427": {
        "country_code": "us",
        "is_project_member": {
          "created_at": 1352489170,
          "corrected_created_at": 1307211291,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": "Portland, OR",
        "company": "Heroku",
        "login": "mattt",
        "fake": 0,
        "state": "Oregon",
        "created_at": 1208409534,
        "id": 2427,
        "num_prior_commits": 0,
        "is_owner_member": true,
        "city": "Portland"
      },
      "35991": {
        "country_code": null,
        "is_project_member": {
          "created_at": 1343075576,
          "corrected_created_at": 1335395320,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": null,
        "company": null,
        "login": "tewha",
        "fake": 0,
        "state": null,
        "created_at": 1248391412,
        "id": 35991,
        "num_prior_commits": 3,
        "is_owner_member": false,
        "city": null
      }
    },
    "project": {
      "full_name": "AFNetworking/AFNetworking",
      "created_at": 1306884524,
      "description": "A delightful iOS and OS X networking framework",
      "html_url": "https://github.com/AFNetworking/AFNetworking",
      "num_forks": 500,
      "name": "AFNetworking",
      "id": 1828795,
      "language": "Objective-C",
      "mysql_id": 1273
    },
    "owner": 7315,
    "pull_request": {
      "created_at": 1344456607,
      "issue_id": 450,
      "html_url": "https://github.com/AFNetworking/AFNetworking/pull/450",
      "number": 450,
      "merged": true,
      "title": "initWithBaseURL should treat URL as directory",
      "id": 2006953,
      "opened_by": 35991,
      "body": "Fixes #446. If the URL passed into initWithBaseURL is a file URL rather than a directory URL we will fix it.\r\n\r\nWithout this fix, if you provide \"http://myhost/api\" as a baseURL and try to get \"path\", AFNetworking will get http://myhost/path instead of http://myhost/api/path. With the fix, we'll change http://myhost/api to http://myhost/api/.",
      "mysql_id": 873139
    },
    "issue_events": [
      {
        "created_at": 1344716777,
        "actor_id": 2427,
        "action": "merged",
        "action_specific": "f849627f9a67b3258fcc7aa3673135e0f55a66fe",
        "event_id": "22526143"
      },
      {
        "created_at": 1344716777,
        "actor_id": 2427,
        "action": "closed",
        "action_specific": null,
        "event_id": "22526144"
      },
      {
        "created_at": 1344716883,
        "actor_id": 35991,
        "action": "mentioned",
        "action_specific": null,
        "event_id": "22526170"
      },
      {
        "created_at": 1344716883,
        "actor_id": 35991,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "22526171"
      }
    ],
    "issue_comments": [
      {
        "created_at": 1344552556,
        "user_id": 35991,
        "comment_id": "7626603",
        "body": "In case you're pondering the point of this: I couldn't think of any reason to ever pass initWithBaseURL an URL of the form https://myservice.local/api rather than https://myservice.local/api/. If you can, this fix isn't helpful. But I think using a baseURL of https://myservice.local/api is always a mistake."
      },
      {
        "created_at": 1344716883,
        "user_id": 2427,
        "comment_id": "7668959",
        "body": "I agree. After going through all of the edge cases I could think of, I couldn't come up with a case where this would not be the way this is expected to work. This is merged in as of 481033ae0c811573e17a4a10c7c0c268e0badddf. Thanks so much, @tewha."
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1344463640,
        "author_id": 35991,
        "sha": "f849627f9a67b3258fcc7aa3673135e0f55a66fe",
        "id": 2671298,
        "committer_id": 35991,
        "comments": []
      }
    ]
  },
  "873144": {
    "authors": [
      9737
    ],
    "num_watchers": 8862,
    "id": 873144,
    "org_owned": true,
    "relevant_users": {
      "1477": {
        "country_code": "ca",
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": "Waterloo, Ontario, Canada",
        "company": "Bunch",
        "login": "michaelmior",
        "fake": 0,
        "state": "Ontario",
        "created_at": 1241814500,
        "id": 1477,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "Waterloo"
      },
      "2427": {
        "country_code": "us",
        "is_project_member": {
          "created_at": 1352489170,
          "corrected_created_at": 1307211291,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": "Portland, OR",
        "company": "Heroku",
        "login": "mattt",
        "fake": 0,
        "state": "Oregon",
        "created_at": 1208409534,
        "id": 2427,
        "num_prior_commits": 0,
        "is_owner_member": true,
        "city": "Portland"
      },
      "9737": {
        "country_code": null,
        "is_project_member": {
          "created_at": 1344349318,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": null,
        "company": "Demon Llama Studios",
        "login": "andyast",
        "fake": 0,
        "state": null,
        "created_at": 1292617180,
        "id": 9737,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": null
      }
    },
    "project": {
      "full_name": "AFNetworking/AFNetworking",
      "created_at": 1306884524,
      "description": "A delightful iOS and OS X networking framework",
      "html_url": "https://github.com/AFNetworking/AFNetworking",
      "num_forks": 500,
      "name": "AFNetworking",
      "id": 1828795,
      "language": "Objective-C",
      "mysql_id": 1273
    },
    "owner": 7315,
    "pull_request": {
      "created_at": 1344349441,
      "issue_id": 448,
      "html_url": "https://github.com/AFNetworking/AFNetworking/pull/448",
      "number": 448,
      "merged": false,
      "title": "Adding cancelAllHTTPOperations",
      "id": 1991542,
      "opened_by": 9737,
      "body": "I have found it necessary to cancel all operations regardless of method and path. ",
      "mysql_id": 873144
    },
    "issue_events": [
      {
        "created_at": 1344378973,
        "actor_id": 2427,
        "action": "closed",
        "action_specific": null,
        "event_id": "22280031"
      },
      {
        "created_at": 1345479611,
        "actor_id": 2427,
        "action": "referenced",
        "action_specific": null,
        "event_id": "22996975"
      }
    ],
    "issue_comments": [
      {
        "created_at": 1344378973,
        "user_id": 2427,
        "comment_id": "7565962",
        "body": "Thanks for submitting this patch, but this is why I exposed `operationQueue` as a property. A separate method for this seems unnecessary if it's just as easy to do `[client.operationQueue cancelAllRequests]`."
      },
      {
        "created_at": 1344383838,
        "user_id": 9737,
        "comment_id": "7568230",
        "body": "Ok. That makes sense. \r\n\r\nSent from my iPhone\r\n\r\nOn Aug 7, 2012, at 15:36, Mattt Thompson <notifications@github.com> wrote:\r\n\r\n> Thanks for submitting this patch, but this is why I exposed operationQueue as a property. A separate method for this seems unnecessary if it's just as easy to do [client.operationQueue cancelAllRequests].\r\n> \r\n> —\r\n> Reply to this email directly or view it on GitHub.\r\n> "
      },
      {
        "created_at": 1345479990,
        "user_id": 1477,
        "comment_id": "7870745",
        "body": "Just a small note that it should be `[client.operationQueue cancelAllOperations]`."
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1344355790,
        "author_id": 9737,
        "sha": "7d47b02701867b0247f0637f5a678597d86cff51",
        "id": 1858443,
        "committer_id": 9737,
        "comments": []
      }
    ]
  },
  "873151": {
    "authors": [
      153678
    ],
    "num_watchers": 8862,
    "id": 873151,
    "org_owned": true,
    "relevant_users": {
      "2427": {
        "country_code": "us",
        "is_project_member": {
          "created_at": 1352489170,
          "corrected_created_at": 1307211291,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": "Portland, OR",
        "company": "Heroku",
        "login": "mattt",
        "fake": 0,
        "state": "Oregon",
        "created_at": 1208409534,
        "id": 2427,
        "num_prior_commits": 0,
        "is_owner_member": true,
        "city": "Portland"
      },
      "153678": {
        "country_code": "au",
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": "Melbourne, Australia",
        "company": null,
        "login": "mcilvena",
        "fake": 0,
        "state": "Victoria",
        "created_at": 1282580735,
        "id": 153678,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "Melbourne"
      }
    },
    "project": {
      "full_name": "AFNetworking/AFNetworking",
      "created_at": 1306884524,
      "description": "A delightful iOS and OS X networking framework",
      "html_url": "https://github.com/AFNetworking/AFNetworking",
      "num_forks": 500,
      "name": "AFNetworking",
      "id": 1828795,
      "language": "Objective-C",
      "mysql_id": 1273
    },
    "owner": 7315,
    "pull_request": {
      "created_at": 1344325214,
      "issue_id": 445,
      "html_url": "https://github.com/AFNetworking/AFNetworking/pull/445",
      "number": 445,
      "merged": false,
      "title": "Added setImageWithURL:placeholderImage:success:failure: to UIImageView+AFNetworking",
      "id": 1988974,
      "opened_by": 153678,
      "body": "Convenience method to allow the use of success and failure blocks without the need to duplicated the NSMutableURLRequest set up.",
      "mysql_id": 873151
    },
    "issue_events": [
      {
        "created_at": 1344347976,
        "actor_id": 2427,
        "action": "closed",
        "action_specific": null,
        "event_id": "22240515"
      },
      {
        "created_at": 1354326914,
        "actor_id": 2427,
        "action": "referenced",
        "action_specific": null,
        "event_id": "30888325"
      }
    ],
    "issue_comments": [
      {
        "created_at": 1344347976,
        "user_id": 2427,
        "comment_id": "7550943",
        "body": "Thanks, but I don't think this method is necessary. Needing success/failure blocks here is rare enough that I'm fine having the most verbose signature to be the only one with them.\n\nOut of curiosity, what are you using success / failure blocks here for?"
      },
      {
        "created_at": 1344350609,
        "user_id": 153678,
        "comment_id": "7551927",
        "body": "Hi Mattt,\r\n\r\nI'm using the success block to post render the images. \r\n\r\nThe app reuses the same 100px Facebook profile image, rendered differently for different parts of the app. So I'm happy to use UIImageView+AFNetworking as the layer that retrieves and caches the original image (I'm also using AFNetworking for REST in other parts of the app). The success block calls a different renderer for different screens.\r\n\r\nEg. In the screenshot below, the 100 x variable height image (?type=normal from Facebook) is fitted into 40 x 40 (80 x 80 on retina), has the corners rounded, 1px inner glow and 1px white drop shadow. \r\n\r\nAs UIImageView+AFNetworking is now, if you want to use blocks, it's not possible to use the default request set up. You have no choice but to duplicated the NSMutableURLRequest set up in your own code, which doesn't seem to make a lot of sense to me. Using setImageWithURL: is also consistent with the other methods.\r\n\r\nBy the way, thanks heaps for AFNetworking.\r\n\r\nCheers,\r\n\r\nTroy.\r\n\r\n\r\n\r\nOn 07/08/2012, at 9:59 PM, Mattt Thompson <notifications@github.com> wrote:\r\n\r\n> Thanks, but I don't think this method is necessary. Needing success/failure blocks here is rare enough that I'm fine having the most verbose signature to be the only one with them.\r\n> \r\n> Out of curiosity, what are you using success / failure blocks here for?\r\n> \r\n> —\r\n> Reply to this email directly or view it on GitHub.\r\n> \r\n> "
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1344329299,
        "author_id": 153678,
        "sha": "b368900556757cd2208cafdacd80b85bba87fc5c",
        "id": 1651743,
        "committer_id": 153678,
        "comments": []
      }
    ]
  },
  "873156": {
    "authors": [
      417986
    ],
    "num_watchers": 8862,
    "id": 873156,
    "org_owned": true,
    "relevant_users": {
      "2427": {
        "country_code": "us",
        "is_project_member": {
          "created_at": 1352489170,
          "corrected_created_at": 1307211291,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": "Portland, OR",
        "company": "Heroku",
        "login": "mattt",
        "fake": 0,
        "state": "Oregon",
        "created_at": 1208409534,
        "id": 2427,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "Portland"
      },
      "417986": {
        "country_code": "us",
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": "San Francisco, CA",
        "company": null,
        "login": "coolstar",
        "fake": 0,
        "state": "California",
        "created_at": 1329093175,
        "id": 417986,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "SF"
      }
    },
    "project": {
      "full_name": "AFNetworking/AFNetworking",
      "created_at": 1306884524,
      "description": "A delightful iOS and OS X networking framework",
      "html_url": "https://github.com/AFNetworking/AFNetworking",
      "num_forks": 500,
      "name": "AFNetworking",
      "id": 1828795,
      "language": "Objective-C",
      "mysql_id": 1273
    },
    "owner": 7315,
    "pull_request": {
      "created_at": 1344120063,
      "issue_id": 443,
      "html_url": "https://github.com/AFNetworking/AFNetworking/pull/443",
      "number": 443,
      "merged": false,
      "title": "Fixed Downloads/Uploads of more than 4 GB in size",
      "id": 1974984,
      "opened_by": 417986,
      "body": "I fixed the downloads/uploads of more than 4 GB in size.",
      "mysql_id": 873156
    },
    "issue_events": [
      {
        "created_at": 1344120063,
        "actor_id": 417986,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "22075655"
      },
      {
        "created_at": 1344127019,
        "actor_id": 2427,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "22078352"
      },
      {
        "created_at": 1344127062,
        "actor_id": 2427,
        "action": "referenced",
        "action_specific": null,
        "event_id": "22078370"
      },
      {
        "created_at": 1344789471,
        "actor_id": 417986,
        "action": "mentioned",
        "action_specific": null,
        "event_id": "22539481"
      },
      {
        "created_at": 1344789471,
        "actor_id": 417986,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "22539482"
      },
      {
        "created_at": 1345598074,
        "actor_id": 2427,
        "action": "closed",
        "action_specific": null,
        "event_id": "23117258"
      }
    ],
    "issue_comments": [
      {
        "created_at": 1344127019,
        "user_id": 2427,
        "comment_id": "7506066",
        "body": "Hmm, are you sure that this is the problem? `bytesRead` / `bytesWritten` is sent back as the number of bytes read / written in the last batch. I couldn't imagine this number being larger than tens of kilobytes... "
      },
      {
        "created_at": 1344789471,
        "user_id": 2427,
        "comment_id": "7676257",
        "body": "@coolstar  Can you please explain why `bytesRead` / `bytesWritten` needs to be an `unsigned long long`? As I understand it, that value should never be close to the maximum range of a signed integer, since it represents the chunked size just written / read."
      },
      {
        "created_at": 1344808909,
        "user_id": 417986,
        "comment_id": "7679264",
        "body": "hmm..."
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1343346059,
        "author_id": 417986,
        "sha": "9e77d9819ce25ec5ab84a7c634657f97486e0ab2",
        "id": 6968116,
        "committer_id": 417986,
        "comments": []
      }
    ]
  },
  "873159": {
    "authors": [
      35991
    ],
    "num_watchers": 8862,
    "id": 873159,
    "org_owned": true,
    "relevant_users": {
      "2427": {
        "country_code": "us",
        "is_project_member": {
          "created_at": 1352489170,
          "corrected_created_at": 1307211291,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": "Portland, OR",
        "company": "Heroku",
        "login": "mattt",
        "fake": 0,
        "state": "Oregon",
        "created_at": 1208409534,
        "id": 2427,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "Portland"
      },
      "35991": {
        "country_code": null,
        "is_project_member": {
          "created_at": 1343075576,
          "corrected_created_at": 1335395320,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": null,
        "company": null,
        "login": "tewha",
        "fake": 0,
        "state": null,
        "created_at": 1248391412,
        "id": 35991,
        "num_prior_commits": 3,
        "is_owner_member": false,
        "city": null
      }
    },
    "project": {
      "full_name": "AFNetworking/AFNetworking",
      "created_at": 1306884524,
      "description": "A delightful iOS and OS X networking framework",
      "html_url": "https://github.com/AFNetworking/AFNetworking",
      "num_forks": 500,
      "name": "AFNetworking",
      "id": 1828795,
      "language": "Objective-C",
      "mysql_id": 1273
    },
    "owner": 7315,
    "pull_request": {
      "created_at": 1344056238,
      "issue_id": 442,
      "html_url": "https://github.com/AFNetworking/AFNetworking/pull/442",
      "number": 442,
      "merged": true,
      "title": "Fixed comment",
      "id": 1973437,
      "opened_by": 35991,
      "body": "Grammar problem in comment. Minor and easy to miss.",
      "mysql_id": 873159
    },
    "issue_events": [
      {
        "created_at": 1344056238,
        "actor_id": 35991,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "22054948"
      },
      {
        "created_at": 1344113930,
        "actor_id": 2427,
        "action": "referenced",
        "action_specific": "3f32f8e6604e35aa6b75c398017f1d695a5a241b",
        "event_id": "22073012"
      },
      {
        "created_at": 1344113930,
        "actor_id": 2427,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "22073013"
      },
      {
        "created_at": 1344113930,
        "actor_id": 2427,
        "action": "merged",
        "action_specific": "3f32f8e6604e35aa6b75c398017f1d695a5a241b",
        "event_id": "22073014"
      },
      {
        "created_at": 1344113930,
        "actor_id": 2427,
        "action": "closed",
        "action_specific": null,
        "event_id": "22073015"
      }
    ],
    "issue_comments": [
      {
        "created_at": 1344113970,
        "user_id": 2427,
        "comment_id": "7504524",
        "body": ":grin:"
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1344063408,
        "author_id": 35991,
        "sha": "1d82992f36494fc8f0bfcb33b9702f75b1ea6f6c",
        "id": 1272799,
        "committer_id": 35991,
        "comments": []
      }
    ]
  },
  "873160": {
    "authors": [
      13409
    ],
    "num_watchers": 8862,
    "id": 873160,
    "org_owned": true,
    "relevant_users": {
      "2427": {
        "country_code": "us",
        "is_project_member": {
          "created_at": 1352489170,
          "corrected_created_at": 1307211291,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": "Portland, OR",
        "company": "Heroku",
        "login": "mattt",
        "fake": 0,
        "state": "Oregon",
        "created_at": 1208409534,
        "id": 2427,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "Portland"
      },
      "13409": {
        "country_code": "us",
        "is_project_member": {
          "created_at": 1344217151,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": "San Francisco, CA",
        "company": "",
        "login": "jparise",
        "fake": 0,
        "state": "California",
        "created_at": 1210805894,
        "id": 13409,
        "num_prior_commits": 2,
        "is_owner_member": false,
        "city": "SF"
      }
    },
    "project": {
      "full_name": "AFNetworking/AFNetworking",
      "created_at": 1306884524,
      "description": "A delightful iOS and OS X networking framework",
      "html_url": "https://github.com/AFNetworking/AFNetworking",
      "num_forks": 500,
      "name": "AFNetworking",
      "id": 1828795,
      "language": "Objective-C",
      "mysql_id": 1273
    },
    "owner": 7315,
    "pull_request": {
      "created_at": 1343963082,
      "issue_id": 441,
      "html_url": "https://github.com/AFNetworking/AFNetworking/pull/441",
      "number": 441,
      "merged": false,
      "title": "Declare use of the NSURLConnectionDelegate protocol.",
      "id": 1963203,
      "opened_by": 13409,
      "body": "This allows subclasses to formally override NSURLConnectionDelegate\nmethods.",
      "mysql_id": 873160
    },
    "issue_events": [
      {
        "created_at": 1343963082,
        "actor_id": 13409,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "21954284"
      },
      {
        "created_at": 1344114080,
        "actor_id": 2427,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "22073066"
      },
      {
        "created_at": 1344117133,
        "actor_id": 2427,
        "action": "closed",
        "action_specific": null,
        "event_id": "22074480"
      },
      {
        "created_at": 1344117135,
        "actor_id": 2427,
        "action": "reopened",
        "action_specific": null,
        "event_id": "22074483"
      },
      {
        "created_at": 1344217151,
        "actor_id": 13409,
        "action": "closed",
        "action_specific": null,
        "event_id": "22107839"
      }
    ],
    "issue_comments": [
      {
        "created_at": 1344114080,
        "user_id": 2427,
        "comment_id": "7504530",
        "body": "That's one of the weirder things, that `NSURLConnectionDelegate` was only an informal protocol until iOS 5 / OS X 10.7. I'll merge this into the 1.0 branch, but will have to manually add the headers in `AFURLConnectionOperation`."
      },
      {
        "created_at": 1344114654,
        "user_id": 2427,
        "comment_id": "7504586",
        "body": "Actually, could you retarget the pull request for the experimental-1.0RC branch?"
      },
      {
        "created_at": 1344117133,
        "user_id": 2427,
        "comment_id": "7504928",
        "body": "Method signature added in header for 0.10.x (master) branch in b494bfe3fb5281a4a20085420e854189a12cd4bd"
      },
      {
        "created_at": 1344217157,
        "user_id": 13409,
        "comment_id": "7514428",
        "body": "I assume you mean the experimental-1.0RC2 branch?  I'll open a new pull request for that."
      },
      {
        "created_at": 1344218102,
        "user_id": 13409,
        "comment_id": "7514525",
        "body": "Nevermind. The experimental-1.0RC2 branch already formally declares these protocols, so everything is good now."
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1343970050,
        "author_id": 13409,
        "sha": "9459d6a8f6d680afd796328d76a41c89016179c1",
        "id": 2351720,
        "committer_id": 13409,
        "comments": []
      }
    ]
  },
  "873162": {
    "authors": [
      35991
    ],
    "num_watchers": 8862,
    "id": 873162,
    "org_owned": true,
    "relevant_users": {
      "2427": {
        "country_code": "us",
        "is_project_member": {
          "created_at": 1352489170,
          "corrected_created_at": 1307211291,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": "Portland, OR",
        "company": "Heroku",
        "login": "mattt",
        "fake": 0,
        "state": "Oregon",
        "created_at": 1208409534,
        "id": 2427,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "Portland"
      },
      "35991": {
        "country_code": null,
        "is_project_member": {
          "created_at": 1343075576,
          "corrected_created_at": 1335395320,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": null,
        "company": null,
        "login": "tewha",
        "fake": 0,
        "state": null,
        "created_at": 1248391412,
        "id": 35991,
        "num_prior_commits": 3,
        "is_owner_member": false,
        "city": null
      }
    },
    "project": {
      "full_name": "AFNetworking/AFNetworking",
      "created_at": 1306884524,
      "description": "A delightful iOS and OS X networking framework",
      "html_url": "https://github.com/AFNetworking/AFNetworking",
      "num_forks": 500,
      "name": "AFNetworking",
      "id": 1828795,
      "language": "Objective-C",
      "mysql_id": 1273
    },
    "owner": 7315,
    "pull_request": {
      "created_at": 1343898031,
      "issue_id": 439,
      "html_url": "https://github.com/AFNetworking/AFNetworking/pull/439",
      "number": 439,
      "merged": false,
      "title": "Expanded docs for AFImageRequestOperation",
      "id": 1953414,
      "opened_by": 35991,
      "body": "I am submitting this proposed change only as a basis for discussion. I am looking for guidance about how to describe this. If you can think of an acceptable way, let me know and I will update the documentation as I find it.\n\nThe core of the problem is that I was unsure which blocks ran on which queues, so I made some bad assumptions. In fact, AFNetworking is coded to make processing from the right thread trivially easy. However, the client coder is left guessing about what the right thing for *them* to do.\n\nI think improving the documentation would be useful. Please let me know what you think.",
      "mysql_id": 873162
    },
    "issue_events": [
      {
        "created_at": 1343898031,
        "actor_id": 35991,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "21860293"
      },
      {
        "created_at": 1344114555,
        "actor_id": 2427,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "22073288"
      },
      {
        "created_at": 1344114555,
        "actor_id": 2427,
        "action": "closed",
        "action_specific": null,
        "event_id": "22073289"
      }
    ],
    "issue_comments": [
      {
        "created_at": 1344114555,
        "user_id": 2427,
        "comment_id": "7504580",
        "body": "The main (get it?) thing about all of this is that operations have a `successQueue` property which determines with queue success blocks get called on, so we should either document that in all operation subclasses or none of them...\n\nEither way, thanks for bringing this to my attention. I'd be interested to hear your thoughts about all of that."
      },
      {
        "created_at": 1344368329,
        "user_id": 35991,
        "comment_id": "7560849",
        "body": "I'm happy building a pull request to add this to all the subclasses, once we have an example of what it *should* look like. :)\n\n\nWhat about something like this?\n\n\t/**\n\t Creates and returns an `AFImageRequestOperation` object and sets the specified success callback.\n\t \n\t @param urlRequest The request object to be loaded asynchronously during execution of the operation.\n\t @param imageProcessingBlock A block object to be executed after the image request finishes successfully, but before the image is returned in the `success` block. This block takes a single argument, the image loaded from the response body, and returns the processed image.\n\t @param success A block object to be executed on [AFHTTPRequestOperation successCallbackQueue] when the request finishes successfully, with a status code in the 2xx range, and with an acceptable content type (e.g. `image/png`). This block has no return value and takes three arguments: the request object of the operation, the response for the request, and the image created from the response data.\n\t @param failure A block object to be executed on [AFHTTPRequestOperation failureCallbackQueue] when the request finishes unsuccessfully. This block has no return value and takes three arguments: the request object of the operation, the response for the request, and the error associated with the cause for the unsuccessful operation.\n\t \n\t @return A new image request operation\n\t */\n\nI've experimented with various link styles in appledoc, and unfortunately I can't get any of them to work on properties. That might be me, though, as I'm fairly new to appledoc."
      },
      {
        "created_at": 1344368471,
        "user_id": 35991,
        "comment_id": "7560925",
        "body": "It looks about like this:\n\n*success*\nA block object to be executed on [[AFHTTPRequestOperation successCallbackQueue]](#) when the request finishes successfully, with a status code in the 2xx range, and with an acceptable content type (e.g. `image/png`). This block has no return value and takes three arguments: the request object of the operation, the response for the request, and the image created from the response data.\n"
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1343905070,
        "author_id": 35991,
        "sha": "41b149c08c4b095fe19069074e2c62ee0cc3672a",
        "id": 641321,
        "committer_id": 35991,
        "comments": []
      }
    ]
  },
  "873163": {
    "authors": [
      46742
    ],
    "num_watchers": 8862,
    "id": 873163,
    "org_owned": true,
    "relevant_users": {
      "46742": {
        "country_code": "us",
        "is_project_member": {
          "created_at": 1343888645,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": "New York, NY",
        "company": null,
        "login": "spenrose",
        "fake": 0,
        "state": "New York",
        "created_at": 1289795591,
        "id": 46742,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "NYC"
      },
      "297194": {
        "country_code": "ph",
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": "Manila, Philippines",
        "company": "Kakao Corp.",
        "login": "minorblend",
        "fake": 0,
        "state": "Manila Fővárosi Régió",
        "created_at": 1296447749,
        "id": 297194,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "Manila"
      }
    },
    "project": {
      "full_name": "AFNetworking/AFNetworking",
      "created_at": 1306884524,
      "description": "A delightful iOS and OS X networking framework",
      "html_url": "https://github.com/AFNetworking/AFNetworking",
      "num_forks": 500,
      "name": "AFNetworking",
      "id": 1828795,
      "language": "Objective-C",
      "mysql_id": 1273
    },
    "owner": 7315,
    "pull_request": {
      "created_at": 1343887033,
      "issue_id": 438,
      "html_url": "https://github.com/AFNetworking/AFNetworking/pull/438",
      "number": 438,
      "merged": false,
      "title": "Added support for tracking image download progress.",
      "id": 1952785,
      "opened_by": 46742,
      "body": "",
      "mysql_id": 873163
    },
    "issue_events": [
      {
        "created_at": 1343887033,
        "actor_id": 46742,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "21853125"
      },
      {
        "created_at": 1343888194,
        "actor_id": 46742,
        "action": "mentioned",
        "action_specific": null,
        "event_id": "21853862"
      },
      {
        "created_at": 1343888195,
        "actor_id": 297194,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "21853863"
      },
      {
        "created_at": 1343888645,
        "actor_id": 297194,
        "action": "mentioned",
        "action_specific": null,
        "event_id": "21854133"
      },
      {
        "created_at": 1343888645,
        "actor_id": 46742,
        "action": "closed",
        "action_specific": null,
        "event_id": "21854134"
      }
    ],
    "issue_comments": [
      {
        "created_at": 1343888194,
        "user_id": 297194,
        "comment_id": "7446804",
        "body": "@spenrose FYI :) https://github.com/AFNetworking/AFNetworking/pull/382#issuecomment-6548168"
      },
      {
        "created_at": 1343888645,
        "user_id": 46742,
        "comment_id": "7446888",
        "body": "@minorblend didn't see that. I will go ahead and close this."
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1343893401,
        "author_id": 46742,
        "sha": "eb4ff45e8c83060a3356be1f1cd778fdce4f5fff",
        "id": 6931081,
        "committer_id": 46742,
        "comments": []
      }
    ]
  },
  "873165": {
    "authors": [
      49575
    ],
    "num_watchers": 8862,
    "id": 873165,
    "org_owned": true,
    "relevant_users": {
      "35991": {
        "country_code": null,
        "is_project_member": {
          "created_at": 1343075576,
          "corrected_created_at": 1335395320,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": null,
        "company": null,
        "login": "tewha",
        "fake": 0,
        "state": null,
        "created_at": 1248391412,
        "id": 35991,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": null
      },
      "49575": {
        "country_code": "us",
        "is_project_member": {
          "created_at": 1343313014,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": "Tampa, FL",
        "company": null,
        "login": "gcox",
        "fake": 0,
        "state": "Florida",
        "created_at": 1272132883,
        "id": 49575,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "Tampa"
      }
    },
    "project": {
      "full_name": "AFNetworking/AFNetworking",
      "created_at": 1306884524,
      "description": "A delightful iOS and OS X networking framework",
      "html_url": "https://github.com/AFNetworking/AFNetworking",
      "num_forks": 500,
      "name": "AFNetworking",
      "id": 1828795,
      "language": "Objective-C",
      "mysql_id": 1273
    },
    "owner": 7315,
    "pull_request": {
      "created_at": 1343313120,
      "issue_id": 436,
      "html_url": "https://github.com/AFNetworking/AFNetworking/pull/436",
      "number": 436,
      "merged": true,
      "title": "Changed string format specifiers for NSUInteger values from %u to %lu",
      "id": 1896623,
      "opened_by": 49575,
      "body": "Resolves two compiler warnings in AFHTTPRequestOperation.m and one in AFHTTPClient.m",
      "mysql_id": 873165
    },
    "issue_events": [
      {
        "created_at": 1343313120,
        "actor_id": 49575,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "21249704"
      },
      {
        "created_at": 1343344018,
        "actor_id": 35991,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "21305818"
      },
      {
        "created_at": 1344114581,
        "actor_id": 2427,
        "action": "referenced",
        "action_specific": "173493c1f9c1cdfb68c3e0cf7a40d8fbf0369f4b",
        "event_id": "22073302"
      },
      {
        "created_at": 1344114581,
        "actor_id": 2427,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "22073303"
      },
      {
        "created_at": 1344114581,
        "actor_id": 2427,
        "action": "merged",
        "action_specific": "173493c1f9c1cdfb68c3e0cf7a40d8fbf0369f4b",
        "event_id": "22073304"
      },
      {
        "created_at": 1344114582,
        "actor_id": 2427,
        "action": "closed",
        "action_specific": null,
        "event_id": "22073305"
      }
    ],
    "issue_comments": [
      {
        "created_at": 1343344018,
        "user_id": 35991,
        "comment_id": "7290408",
        "body": "Oh, never mind, I get it. This is the experimental branch. Apologies. :)"
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1343319421,
        "author_id": 49575,
        "sha": "2834ecc97d0c9bd44165586cf7e804c3aa6939f5",
        "id": 786331,
        "committer_id": 49575,
        "comments": [
          {
            "comment_id": 1636284,
            "id": 360296,
            "user_id": 35991,
            "body": "I think this is already landed. :)",
            "created_at": 1343343103,
            "position": null,
            "line": null
          },
          {
            "comment_id": 1636286,
            "id": 360297,
            "user_id": 35991,
            "body": "Take a look at these:\n\nhttps://github.com/AFNetworking/AFNetworking/pull/420\nhttps://github.com/AFNetworking/AFNetworking/pull/422",
            "created_at": 1343343133,
            "position": null,
            "line": null
          }
        ]
      }
    ]
  },
  "873167": {
    "authors": [
      49575
    ],
    "num_watchers": 8862,
    "id": 873167,
    "org_owned": true,
    "relevant_users": {
      "2427": {
        "country_code": "us",
        "is_project_member": {
          "created_at": 1352489170,
          "corrected_created_at": 1307211291,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": "Portland, OR",
        "company": "Heroku",
        "login": "mattt",
        "fake": 0,
        "state": "Oregon",
        "created_at": 1208409534,
        "id": 2427,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "Portland"
      },
      "49575": {
        "country_code": "us",
        "is_project_member": {
          "created_at": 1343313014,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": "Tampa, FL",
        "company": null,
        "login": "gcox",
        "fake": 0,
        "state": "Florida",
        "created_at": 1272132883,
        "id": 49575,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "Tampa"
      }
    },
    "project": {
      "full_name": "AFNetworking/AFNetworking",
      "created_at": 1306884524,
      "description": "A delightful iOS and OS X networking framework",
      "html_url": "https://github.com/AFNetworking/AFNetworking",
      "num_forks": 500,
      "name": "AFNetworking",
      "id": 1828795,
      "language": "Objective-C",
      "mysql_id": 1273
    },
    "owner": 7315,
    "pull_request": {
      "created_at": 1343311953,
      "issue_id": 434,
      "html_url": "https://github.com/AFNetworking/AFNetworking/pull/434",
      "number": 434,
      "merged": true,
      "title": "Fixed compiler error in AFHTTPRequestOperation; #417",
      "id": 1896494,
      "opened_by": 49575,
      "body": "Casting (void *) block to (__bridge id).  Required as of Xcode 4.4",
      "mysql_id": 873167
    },
    "issue_events": [
      {
        "created_at": 1343311953,
        "actor_id": 49575,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "21248172"
      },
      {
        "created_at": 1345597974,
        "actor_id": 2427,
        "action": "referenced",
        "action_specific": "0e460eaff5532e1e96e7fb1c0b1cb45d94d9ee6c",
        "event_id": "23117165"
      },
      {
        "created_at": 1345597974,
        "actor_id": 2427,
        "action": "merged",
        "action_specific": "0e460eaff5532e1e96e7fb1c0b1cb45d94d9ee6c",
        "event_id": "23117166"
      },
      {
        "created_at": 1345597974,
        "actor_id": 2427,
        "action": "closed",
        "action_specific": null,
        "event_id": "23117167"
      },
      {
        "created_at": 1345597997,
        "actor_id": 49575,
        "action": "mentioned",
        "action_specific": null,
        "event_id": "23117188"
      },
      {
        "created_at": 1345597997,
        "actor_id": 49575,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "23117189"
      },
      {
        "created_at": 1348015473,
        "actor_id": 108861,
        "action": "referenced",
        "action_specific": "9b0568f4865aeb6fd7492cd32c77d012685ce259",
        "event_id": "24907832"
      }
    ],
    "issue_comments": [
      {
        "created_at": 1345597997,
        "user_id": 2427,
        "comment_id": "7919763",
        "body": "Alright, looks good. Thanks for the patch, @gcox."
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1343318720,
        "author_id": 49575,
        "sha": "109037831a7cb5461d0c383bc3c348003b1a7d29",
        "id": 7099505,
        "committer_id": 49575,
        "comments": []
      }
    ]
  },
  "873169": {
    "authors": [
      580653
    ],
    "num_watchers": 8862,
    "id": 873169,
    "org_owned": true,
    "relevant_users": {
      "4165": {
        "country_code": "us",
        "is_project_member": {
          "created_at": 1368229261,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": "San Francisco, CA",
        "company": "GateGuru, Inc.",
        "login": "blakewatters",
        "fake": 0,
        "state": "California",
        "created_at": 1209064357,
        "id": 4165,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "SF"
      },
      "31395": {
        "country_code": "de",
        "is_project_member": {
          "created_at": 1380138725,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": "Germany",
        "company": null,
        "login": "Shukuyen",
        "fake": 0,
        "state": null,
        "created_at": 1312734708,
        "id": 31395,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": null
      },
      "36472": {
        "country_code": "us",
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": "San Francisco",
        "company": null,
        "login": "paulyoung",
        "fake": 0,
        "state": "California",
        "created_at": 1242343873,
        "id": 36472,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "SF"
      },
      "94665": {
        "country_code": "us",
        "is_project_member": {
          "created_at": 1343349241,
          "corrected_created_at": 1333755083,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": "Mountain View, CA",
        "company": "SEED",
        "login": "dstnbrkr",
        "fake": 0,
        "state": "California",
        "created_at": 1225839299,
        "id": 94665,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "Mountain View"
      },
      "155956": {
        "country_code": "us",
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": "Napa / Mountain View",
        "company": "Tule Technologies",
        "login": "jefflab",
        "fake": 0,
        "state": "California",
        "created_at": 1243728324,
        "id": 155956,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": null
      },
      "429313": {
        "country_code": "us",
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": "Stanford, CA, USA",
        "company": "Instagram",
        "login": "alexkarpenko",
        "fake": 0,
        "state": "California",
        "created_at": 1311465652,
        "id": 429313,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": null
      },
      "580653": {
        "country_code": null,
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": null,
        "company": null,
        "login": "WNXSMXDJ",
        "fake": 1,
        "state": null,
        "created_at": 1345694143,
        "id": 580653,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": null
      }
    },
    "project": {
      "full_name": "AFNetworking/AFNetworking",
      "created_at": 1306884524,
      "description": "A delightful iOS and OS X networking framework",
      "html_url": "https://github.com/AFNetworking/AFNetworking",
      "num_forks": 500,
      "name": "AFNetworking",
      "id": 1828795,
      "language": "Objective-C",
      "mysql_id": 1273
    },
    "owner": 7315,
    "pull_request": {
      "created_at": 1343301412,
      "issue_id": 432,
      "html_url": "https://github.com/AFNetworking/AFNetworking/pull/432",
      "number": 432,
      "merged": false,
      "title": "Make AFHTTPClient baseURL readwrite",
      "id": 1895274,
      "opened_by": 94665,
      "body": "Also resets reachability monitoring when baseURL changes. Needed this to allow a runtime switch between development, staging and production services when the AFHTTPClient instance is a singleton.",
      "mysql_id": 873169
    },
    "issue_events": [
      {
        "created_at": 1343301412,
        "actor_id": 94665,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "21235919"
      },
      {
        "created_at": 1343349241,
        "actor_id": 94665,
        "action": "closed",
        "action_specific": null,
        "event_id": "21314416"
      },
      {
        "created_at": 1343349476,
        "actor_id": 94665,
        "action": "reopened",
        "action_specific": null,
        "event_id": "21314720"
      },
      {
        "created_at": 1343386084,
        "actor_id": 31395,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "21344354"
      },
      {
        "created_at": 1343679659,
        "actor_id": 155956,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "21578592"
      },
      {
        "created_at": 1343882550,
        "actor_id": 429313,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "21849955"
      },
      {
        "created_at": 1343886723,
        "actor_id": 94665,
        "action": "closed",
        "action_specific": null,
        "event_id": "21852932"
      }
    ],
    "issue_comments": [
      {
        "created_at": 1343349251,
        "user_id": 94665,
        "comment_id": "7292675",
        "body": "Ran into some trickiness with SCNetworkReachabilityUnscheduleFromRunLoop, closing until it's sorted."
      },
      {
        "created_at": 1343386084,
        "user_id": 31395,
        "comment_id": "7300577",
        "body": "I support this pull request, two of my AFHTTPClient subclasses also need write access to the baseURL as the client is for a service that can be installed by the user on his/her own servers ... the url isn't fixed in this case."
      },
      {
        "created_at": 1343679659,
        "user_id": 155956,
        "comment_id": "7376867",
        "body": "I support this feature too.  I want to use it for switching between development, staging, and production servers from a developer menu.\n\nThe alternative seems to be finding a way to reset the shared singleton instance, which seems error prone."
      },
      {
        "created_at": 1343872827,
        "user_id": 94665,
        "comment_id": "7443740",
        "body": "I've been using this for about a week with no issue, but today got a crash here:\n\nAssertion failed: (_lock_), function __SCNetworkReachabilityUnscheduleFromRunLoop, file /SourceCache/configd_Sim/configd-432/SystemConfiguration.fproj/SCNetworkReachability.c, line 5578.\n\nwhen I switched environments and changed the baseURL (which in turn restarts reachability). So there's a threading issue in this pull that needs to get sorted out."
      },
      {
        "created_at": 1343882550,
        "user_id": 429313,
        "comment_id": "7445733",
        "body": "It's possible that the baseURL is accessed on a background queue inside AFNetworking, so modifying it on the main thread is not safe and could lead to undefined behavior.\n\nRather than modifying AFHTTPClient baseURL, why don't you modify your [MyHTTPClient sharedClient] method to return different clients at run time based on a user setting? This is safe as currently executing commands will complete on the client that they were started with, and subsequent requests will be sent to the new client."
      },
      {
        "created_at": 1343886723,
        "user_id": 94665,
        "comment_id": "7446534",
        "body": "Good idea, that would solve it and sidestep any threading issues. Closing this pull since it doesn't access baseURL safely."
      },
      {
        "created_at": 1343985945,
        "user_id": 31395,
        "comment_id": "7477382",
        "body": "Can you please elaborate on how to do that? Thanks!"
      },
      {
        "created_at": 1344034423,
        "user_id": 429313,
        "comment_id": "7494404",
        "body": "```\n+ (MyHTTPClient*)sharedClient {\n  if (testEnvironment) {\n    static dispatch_once_t once;\n    static MyHTTPClient *testClient = nil;\n    dispatch_once(once, ^{ /* init with test server baseURL */ });\n    return testClient;\n  } else {\n    static dispatch_once_t once;\n    static MyHTTPClient *productionClient = nil;\n    /* init with production server baseURL */\n    return productionClient;\n  }\n}\n```"
      },
      {
        "created_at": 1388889477,
        "user_id": 36472,
        "comment_id": "31590627",
        "body": "@Shukuyen - It sounds like you want to allow the user to provide the baseURL at runtime. What did you land on?"
      },
      {
        "created_at": 1388891835,
        "user_id": 4165,
        "comment_id": "31591477",
        "body": "You can just redeclare the property as readwrite with your implementation\r\nand change it.\r\n\r\nOn Saturday, January 4, 2014, Paul Young wrote:\r\n\r\n> @Shukuyen <https://github.com/Shukuyen> - It sounds like you want to\r\n> allow the user to provide the baseURL at runtime. What did you land on?\r\n>\r\n> —\r\n> Reply to this email directly or view it on GitHub<https://github.com/AFNetworking/AFNetworking/pull/432#issuecomment-31590627>\r\n> .\r\n>\r\n\r\n\r\n-- \r\nTo stay sane & productive, I don't live in e-mail. If you need to reach me\r\nquickly, try this link: https://awayfind.com/blakewatters"
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1343356621,
        "author_id": 94665,
        "sha": "8eb7fa63702f63f08388367c7333f846a829fdf1",
        "id": 6931042,
        "committer_id": 580653,
        "comments": []
      },
      {
        "created_at": 1343300070,
        "author_id": 94665,
        "sha": "ef7ccc4aad594148c7a03b9d9f03c635f015843b",
        "id": 6931048,
        "committer_id": 580653,
        "comments": []
      }
    ]
  },
  "873170": {
    "authors": [
      35991
    ],
    "num_watchers": 8862,
    "id": 873170,
    "org_owned": true,
    "relevant_users": {
      "2427": {
        "country_code": "us",
        "is_project_member": {
          "created_at": 1352489170,
          "corrected_created_at": 1307211291,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": "Portland, OR",
        "company": "Heroku",
        "login": "mattt",
        "fake": 0,
        "state": "Oregon",
        "created_at": 1208409534,
        "id": 2427,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "Portland"
      },
      "35991": {
        "country_code": null,
        "is_project_member": {
          "created_at": 1343075576,
          "corrected_created_at": 1335395320,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": null,
        "company": null,
        "login": "tewha",
        "fake": 0,
        "state": null,
        "created_at": 1248391412,
        "id": 35991,
        "num_prior_commits": 3,
        "is_owner_member": false,
        "city": null
      }
    },
    "project": {
      "full_name": "AFNetworking/AFNetworking",
      "created_at": 1306884524,
      "description": "A delightful iOS and OS X networking framework",
      "html_url": "https://github.com/AFNetworking/AFNetworking",
      "num_forks": 500,
      "name": "AFNetworking",
      "id": 1828795,
      "language": "Objective-C",
      "mysql_id": 1273
    },
    "owner": 7315,
    "pull_request": {
      "created_at": 1343165825,
      "issue_id": 431,
      "html_url": "https://github.com/AFNetworking/AFNetworking/pull/431",
      "number": 431,
      "merged": true,
      "title": "Fixes warning about using == on floats.",
      "id": 1878469,
      "opened_by": 35991,
      "body": "If the value changes from near to 2.0 to some other near 2.0, it's fine to recalculate.\n\nThus, use #pragma clang diagnostic to explicitly turn off the float-equal warning.",
      "mysql_id": 873170
    },
    "issue_events": [
      {
        "created_at": 1343165825,
        "actor_id": 35991,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "21069379"
      },
      {
        "created_at": 1344115076,
        "actor_id": 2427,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "22073524"
      },
      {
        "created_at": 1344115078,
        "actor_id": 2427,
        "action": "referenced",
        "action_specific": "a144c8f0a775ebb1f669436de883df457b43ba8a",
        "event_id": "22073527"
      },
      {
        "created_at": 1344115078,
        "actor_id": 2427,
        "action": "merged",
        "action_specific": "a144c8f0a775ebb1f669436de883df457b43ba8a",
        "event_id": "22073528"
      },
      {
        "created_at": 1344115078,
        "actor_id": 2427,
        "action": "closed",
        "action_specific": null,
        "event_id": "22073529"
      },
      {
        "created_at": 1348015473,
        "actor_id": 108861,
        "action": "referenced",
        "action_specific": "b9310103195104361d8b338805d13fd66d03e977",
        "event_id": "24907825"
      }
    ],
    "issue_comments": [
      {
        "created_at": 1343167212,
        "user_id": 35991,
        "comment_id": "7231567",
        "body": "This is only one way to solve this problem. The other would be to use a abs(a-b)<someSmallValue pattern, but I think your code is correct already."
      },
      {
        "created_at": 1344115076,
        "user_id": 2427,
        "comment_id": "7504643",
        "body": "TIL. So awesome I had to [tweet it out](https://twitter.com/afnetworking/status/231831158680334336) :)"
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1343172985,
        "author_id": 35991,
        "sha": "eafbfec11c57fdd67568c17e7b6c6c5fe1fc7a85",
        "id": 787373,
        "committer_id": 35991,
        "comments": []
      }
    ]
  },
  "873174": {
    "authors": [
      35991
    ],
    "num_watchers": 8862,
    "id": 873174,
    "org_owned": true,
    "relevant_users": {
      "2427": {
        "country_code": "us",
        "is_project_member": {
          "created_at": 1352489170,
          "corrected_created_at": 1307211291,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": "Portland, OR",
        "company": "Heroku",
        "login": "mattt",
        "fake": 0,
        "state": "Oregon",
        "created_at": 1208409534,
        "id": 2427,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "Portland"
      },
      "35991": {
        "country_code": null,
        "is_project_member": {
          "created_at": 1343075576,
          "corrected_created_at": 1335395320,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": null,
        "company": null,
        "login": "tewha",
        "fake": 0,
        "state": null,
        "created_at": 1248391412,
        "id": 35991,
        "num_prior_commits": 1,
        "is_owner_member": false,
        "city": null
      }
    },
    "project": {
      "full_name": "AFNetworking/AFNetworking",
      "created_at": 1306884524,
      "description": "A delightful iOS and OS X networking framework",
      "html_url": "https://github.com/AFNetworking/AFNetworking",
      "num_forks": 500,
      "name": "AFNetworking",
      "id": 1828795,
      "language": "Objective-C",
      "mysql_id": 1273
    },
    "owner": 7315,
    "pull_request": {
      "created_at": 1343096502,
      "issue_id": 427,
      "html_url": "https://github.com/AFNetworking/AFNetworking/pull/427",
      "number": 427,
      "merged": true,
      "title": "Fixed incomplete implementation warning.",
      "id": 1869701,
      "opened_by": 35991,
      "body": "sharedProfileImageRequestOperationQueue is declared in interface extension, but only implemented on Mac OS X. This causes an incomplete implementation warning. Added same #if around interface as surrounds impelmentation.\n\nThis only affects the example project.",
      "mysql_id": 873174
    },
    "issue_events": [
      {
        "created_at": 1343096502,
        "actor_id": 35991,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "20969620"
      },
      {
        "created_at": 1343100396,
        "actor_id": 2427,
        "action": "referenced",
        "action_specific": "d509c54fe60725951d03546b78c571d782071da2",
        "event_id": "20972904"
      },
      {
        "created_at": 1343100396,
        "actor_id": 2427,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "20972905"
      },
      {
        "created_at": 1343100396,
        "actor_id": 2427,
        "action": "merged",
        "action_specific": "d509c54fe60725951d03546b78c571d782071da2",
        "event_id": "20972906"
      },
      {
        "created_at": 1343100397,
        "actor_id": 2427,
        "action": "closed",
        "action_specific": null,
        "event_id": "20972907"
      }
    ],
    "issue_comments": [
      {
        "created_at": 1343100423,
        "user_id": 2427,
        "comment_id": "7196474",
        "body": "Just as I get close to Issue Inbox 0, you have to find all sorts of things to fix :p\n\nThanks!"
      },
      {
        "created_at": 1343103311,
        "user_id": 35991,
        "comment_id": "7197094",
        "body": "I can be a bastard that way. :)"
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1343103557,
        "author_id": 35991,
        "sha": "5c4c94081b864b7d13017496ecbdbd78b761bc67",
        "id": 351946,
        "committer_id": 35991,
        "comments": []
      }
    ]
  },
  "873180": {
    "authors": [
      35991
    ],
    "num_watchers": 8862,
    "id": 873180,
    "org_owned": true,
    "relevant_users": {
      "2427": {
        "country_code": "us",
        "is_project_member": {
          "created_at": 1352489170,
          "corrected_created_at": 1307211291,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": "Portland, OR",
        "company": "Heroku",
        "login": "mattt",
        "fake": 0,
        "state": "Oregon",
        "created_at": 1208409534,
        "id": 2427,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "Portland"
      },
      "35991": {
        "country_code": null,
        "is_project_member": {
          "created_at": 1343075576,
          "corrected_created_at": 1335395320,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": null,
        "company": null,
        "login": "tewha",
        "fake": 0,
        "state": null,
        "created_at": 1248391412,
        "id": 35991,
        "num_prior_commits": 1,
        "is_owner_member": false,
        "city": null
      }
    },
    "project": {
      "full_name": "AFNetworking/AFNetworking",
      "created_at": 1306884524,
      "description": "A delightful iOS and OS X networking framework",
      "html_url": "https://github.com/AFNetworking/AFNetworking",
      "num_forks": 500,
      "name": "AFNetworking",
      "id": 1828795,
      "language": "Objective-C",
      "mysql_id": 1273
    },
    "owner": 7315,
    "pull_request": {
      "created_at": 1343096141,
      "issue_id": 425,
      "html_url": "https://github.com/AFNetworking/AFNetworking/pull/425",
      "number": 425,
      "merged": true,
      "title": "Fixed sign conversion warning.",
      "id": 1869660,
      "opened_by": 35991,
      "body": "containsIndex takes a NSUInteger, not a NSInteger. When CLANG_WARN_IMPLICIT_SIGN_CONVERSION is set, this generates a warning.\n\nThis is easily fixed with a typecast.",
      "mysql_id": 873180
    },
    "issue_events": [
      {
        "created_at": 1343096141,
        "actor_id": 35991,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "20969290"
      },
      {
        "created_at": 1343100741,
        "actor_id": 2427,
        "action": "referenced",
        "action_specific": "762a3effa8d67cfd9bff2ba7d75e65a55a763388",
        "event_id": "20973174"
      },
      {
        "created_at": 1343100741,
        "actor_id": 2427,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "20973175"
      },
      {
        "created_at": 1343100741,
        "actor_id": 2427,
        "action": "merged",
        "action_specific": "762a3effa8d67cfd9bff2ba7d75e65a55a763388",
        "event_id": "20973176"
      },
      {
        "created_at": 1343100741,
        "actor_id": 2427,
        "action": "closed",
        "action_specific": null,
        "event_id": "20973177"
      },
      {
        "created_at": 1348015472,
        "actor_id": 108861,
        "action": "referenced",
        "action_specific": "7b14b81cc4621f24fa9606b883337c76ab957422",
        "event_id": "24907823"
      }
    ],
    "issue_comments": [
      {
        "created_at": 1343100811,
        "user_id": 2427,
        "comment_id": "7196572",
        "body": "It's not that I have anything against pedantic compiler settings—they're lifesavers, they are—but why do they have to be so... yelly about it? \n\nCLANG_WARN_IMPLICIT_SIGN_CONVERSION. More like CLANG_WARN_IMPOLITE_CAPS_LOCK_SETTING."
      },
      {
        "created_at": 1343103232,
        "user_id": 35991,
        "comment_id": "7197079",
        "body": "No kidding!\n\nI hope you don't mind me submitting these; I know they're pedantic, but -weverything is coming. :)"
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1343103114,
        "author_id": 35991,
        "sha": "1037a807f5b91387939c538080b787f5ac590a9f",
        "id": 148795,
        "committer_id": 35991,
        "comments": []
      }
    ]
  },
  "873183": {
    "authors": [
      27024
    ],
    "num_watchers": 8862,
    "id": 873183,
    "org_owned": true,
    "relevant_users": {
      "2427": {
        "country_code": "us",
        "is_project_member": {
          "created_at": 1352489170,
          "corrected_created_at": 1307211291,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": "Portland, OR",
        "company": "Heroku",
        "login": "mattt",
        "fake": 0,
        "state": "Oregon",
        "created_at": 1208409534,
        "id": 2427,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "Portland"
      },
      "27024": {
        "country_code": "nz",
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": "Auckland, New Zealand",
        "company": null,
        "login": "ryanmaxwell",
        "fake": 0,
        "state": "Auckland",
        "created_at": 1302309209,
        "id": 27024,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "Auckland"
      }
    },
    "project": {
      "full_name": "AFNetworking/AFNetworking",
      "created_at": 1306884524,
      "description": "A delightful iOS and OS X networking framework",
      "html_url": "https://github.com/AFNetworking/AFNetworking",
      "num_forks": 500,
      "name": "AFNetworking",
      "id": 1828795,
      "language": "Objective-C",
      "mysql_id": 1273
    },
    "owner": 7315,
    "pull_request": {
      "created_at": 1343095365,
      "issue_id": 424,
      "html_url": "https://github.com/AFNetworking/AFNetworking/pull/424",
      "number": 424,
      "merged": false,
      "title": "Don't unnecessarily add ? to URL if parameter dictionary is empty.",
      "id": 1869587,
      "opened_by": 27024,
      "body": "",
      "mysql_id": 873183
    },
    "issue_events": [
      {
        "created_at": 1343095365,
        "actor_id": 27024,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "20968593"
      },
      {
        "created_at": 1343095797,
        "actor_id": 2427,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "20968975"
      },
      {
        "created_at": 1343095797,
        "actor_id": 2427,
        "action": "closed",
        "action_specific": null,
        "event_id": "20968976"
      }
    ],
    "issue_comments": [
      {
        "created_at": 1343095797,
        "user_id": 2427,
        "comment_id": "7195444",
        "body": "I'm sympathetic to this, but I think that empty parameters adding a `?` is actually a good behavior.\n\nIf someone really wanted to omit the query string, they would just pass `nil` parameters. There is indeed a functional reason why someone _would_ want to append a blank query string, and that's to invalidate cache. I couldn't tell you if anyone has specifically used this feature, but I wouldn't want to introduce a potentially-breaking change without a clear advantage."
      },
      {
        "created_at": 1343110695,
        "user_id": 27024,
        "comment_id": "7198365",
        "body": "Right. That's one reason - generally I would add a timestamp param or similar to clear cache. \nWhere this behaviour of the empty array was getting me, was I was passing mutable array that may or may not have elements. \n\nI don't particularly mind as it wasn't breaking anything for me, It would just execute this code path that had unnecessary calculations. "
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1342967901,
        "author_id": 27024,
        "sha": "dd617fcfef9aff88422fe09f6abba1169d1e6f06",
        "id": 6892576,
        "committer_id": 27024,
        "comments": []
      }
    ]
  },
  "873187": {
    "authors": [
      35991
    ],
    "num_watchers": 8862,
    "id": 873187,
    "org_owned": true,
    "relevant_users": {
      "35991": {
        "country_code": null,
        "is_project_member": {
          "created_at": 1343075576,
          "corrected_created_at": 1335395320,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": null,
        "company": null,
        "login": "tewha",
        "fake": 0,
        "state": null,
        "created_at": 1248391412,
        "id": 35991,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": null
      }
    },
    "project": {
      "full_name": "AFNetworking/AFNetworking",
      "created_at": 1306884524,
      "description": "A delightful iOS and OS X networking framework",
      "html_url": "https://github.com/AFNetworking/AFNetworking",
      "num_forks": 500,
      "name": "AFNetworking",
      "id": 1828795,
      "language": "Objective-C",
      "mysql_id": 1273
    },
    "owner": 7315,
    "pull_request": {
      "created_at": 1343075543,
      "issue_id": 423,
      "html_url": "https://github.com/AFNetworking/AFNetworking/pull/423",
      "number": 423,
      "merged": false,
      "title": "Fix a warning when building AFNetowrking iOS Example",
      "id": 1866254,
      "opened_by": 35991,
      "body": "Fixes a warning when building AFNetowrking iOS Example.\n\nA method is declared in an interface, then only implemented on Mac OS X. The method does not need to be implemented on iOS, so I've wrapped the `@interface` in `#if __MAC_OS_X_VERSION_MIN_REQUIRED`.\n\nIt is probably possible to drop the `@interface` entirely, as the use of `sharedProfileImageRequestOperationQueue` occurs *after* its implementation, but I'm not familiar enough with how older versions of Xcode to guarantee that and am unable to test it.",
      "mysql_id": 873187
    },
    "issue_events": [
      {
        "created_at": 1343075544,
        "actor_id": 35991,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "20937254"
      },
      {
        "created_at": 1343075544,
        "actor_id": 937217,
        "action": "mentioned",
        "action_specific": null,
        "event_id": "20937255"
      },
      {
        "created_at": 1343075544,
        "actor_id": 937217,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "20937256"
      },
      {
        "created_at": 1343075576,
        "actor_id": 35991,
        "action": "closed",
        "action_specific": null,
        "event_id": "20937320"
      }
    ],
    "issue_comments": [
      {
        "created_at": 1343075695,
        "user_id": 35991,
        "comment_id": "7186801",
        "body": "Apparently I don't know how the UI works for pull requests. :) I'll re-add the new one later."
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1343081489,
        "author_id": 35991,
        "sha": "25186f8ebf9cbfd4ec8f32a2a6cca79c7105912f",
        "id": 351957,
        "committer_id": 35991,
        "comments": []
      },
      {
        "created_at": 1343081158,
        "author_id": 35991,
        "sha": "69da97c5a89fd41aa52c3ac699ad549161abc158",
        "id": 351985,
        "committer_id": 35991,
        "comments": []
      },
      {
        "created_at": 1343082405,
        "author_id": 35991,
        "sha": "d5bed3417630662dfbdfdc85ecb0782701c15db8",
        "id": 6885478,
        "committer_id": 35991,
        "comments": []
      }
    ]
  },
  "873189": {
    "authors": [
      35991
    ],
    "num_watchers": 8862,
    "id": 873189,
    "org_owned": true,
    "relevant_users": {
      "2427": {
        "country_code": "us",
        "is_project_member": {
          "created_at": 1352489170,
          "corrected_created_at": 1307211291,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": "Portland, OR",
        "company": "Heroku",
        "login": "mattt",
        "fake": 0,
        "state": "Oregon",
        "created_at": 1208409534,
        "id": 2427,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "Portland"
      },
      "35991": {
        "country_code": null,
        "is_project_member": {
          "created_at": 1343075576,
          "corrected_created_at": 1335395320,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": null,
        "company": null,
        "login": "tewha",
        "fake": 0,
        "state": null,
        "created_at": 1248391412,
        "id": 35991,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": null
      }
    },
    "project": {
      "full_name": "AFNetworking/AFNetworking",
      "created_at": 1306884524,
      "description": "A delightful iOS and OS X networking framework",
      "html_url": "https://github.com/AFNetworking/AFNetworking",
      "num_forks": 500,
      "name": "AFNetworking",
      "id": 1828795,
      "language": "Objective-C",
      "mysql_id": 1273
    },
    "owner": 7315,
    "pull_request": {
      "created_at": 1343074147,
      "issue_id": 422,
      "html_url": "https://github.com/AFNetworking/AFNetworking/pull/422",
      "number": 422,
      "merged": true,
      "title": "Fix to pull 420",
      "id": 1865997,
      "opened_by": 35991,
      "body": "Per Apple's Platform Dependencies in String Programming Guide, casting NSInteger to long before using %lu.\n\nhttps://developer.apple.com/library/ios/#documentation/Cocoa/Conceptual/Strings/Articles/formatSpecifiers.html#//apple_ref/doc/uid/TP40004265-SW5",
      "mysql_id": 873189
    },
    "issue_events": [
      {
        "created_at": 1343074147,
        "actor_id": 35991,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "20934903"
      },
      {
        "created_at": 1343075534,
        "actor_id": 2427,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "20937241"
      },
      {
        "created_at": 1343075534,
        "actor_id": 2427,
        "action": "closed",
        "action_specific": null,
        "event_id": "20937242"
      },
      {
        "created_at": 1343095388,
        "actor_id": 2427,
        "action": "reopened",
        "action_specific": null,
        "event_id": "20968626"
      },
      {
        "created_at": 1343095408,
        "actor_id": 2427,
        "action": "referenced",
        "action_specific": "877333a08e1da0cd242e94b903eefcb8fde37575",
        "event_id": "20968649"
      },
      {
        "created_at": 1343095408,
        "actor_id": 2427,
        "action": "merged",
        "action_specific": "877333a08e1da0cd242e94b903eefcb8fde37575",
        "event_id": "20968650"
      },
      {
        "created_at": 1343095408,
        "actor_id": 2427,
        "action": "closed",
        "action_specific": null,
        "event_id": "20968651"
      },
      {
        "created_at": 1348015472,
        "actor_id": 108861,
        "action": "referenced",
        "action_specific": "a3b97fce5fc4a69368210166bb017a8249cd6ba2",
        "event_id": "24907822"
      }
    ],
    "issue_comments": [
      {
        "created_at": 1343074561,
        "user_id": 35991,
        "comment_id": "7186215",
        "body": "Apparently I somehow managed to add a minor security fix suggested by the compiler after I created this pull request. Not sure how. It's still safe, and I'll make sure not to do anything else. :)"
      },
      {
        "created_at": 1343075534,
        "user_id": 2427,
        "comment_id": "7186717",
        "body": "Thanks for following up on this. String format specifiers are kinda the worst—no matter how pedantic I try to get, Xcode isn't impressed.\n\nThat security fix makes sense, too. Thanks for adding that in."
      },
      {
        "created_at": 1343095130,
        "user_id": 35991,
        "comment_id": "7195270",
        "body": "Mattt, did you apply this and it's just taking a while? I don't see it in the commit log."
      },
      {
        "created_at": 1343095423,
        "user_id": 2427,
        "comment_id": "7195352",
        "body": "Heh, I was wondering where that went! Done and done."
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1343094543,
        "author_id": 35991,
        "sha": "cc35e61ff617f1882b4447dd65ea60747b1268e5",
        "id": 351951,
        "committer_id": 35991,
        "comments": []
      },
      {
        "created_at": 1343081489,
        "author_id": 35991,
        "sha": "25186f8ebf9cbfd4ec8f32a2a6cca79c7105912f",
        "id": 351957,
        "committer_id": 35991,
        "comments": []
      },
      {
        "created_at": 1343081158,
        "author_id": 35991,
        "sha": "69da97c5a89fd41aa52c3ac699ad549161abc158",
        "id": 351985,
        "committer_id": 35991,
        "comments": []
      }
    ]
  },
  "873194": {
    "authors": [
      24559
    ],
    "num_watchers": 8862,
    "id": 873194,
    "org_owned": false,
    "relevant_users": {
      "15119": {
        "country_code": "us",
        "is_project_member": {
          "created_at": 1251490537,
          "ext_ref_id": "50cc481bedecb50eed004dc8"
        },
        "type": "USR",
        "deleted": 0,
        "location": "Portland, Oregon",
        "company": "Planet Argon, LLC",
        "login": "robbyrussell",
        "fake": 0,
        "state": "Oregon",
        "created_at": 1202958283,
        "id": 15119,
        "num_prior_commits": 0,
        "is_owner_member": true,
        "city": "Portland"
      },
      "24559": {
        "country_code": "us",
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": "Seattle",
        "company": "Superformula",
        "login": "wprater",
        "fake": 0,
        "state": "Washington",
        "created_at": 1210897490,
        "id": 24559,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "Seattle"
      }
    },
    "project": {
      "full_name": "robbyrussell/oh-my-zsh",
      "created_at": 1251497737,
      "description": "A community-driven framework for managing your zsh configuration. Includes 40+ optional plugins (rails, git, OSX, hub, capistrano, brew, ant, macports, etc), over 80 terminal themes to spice up  your morning, and an auto-update tool so that makes it easy to keep up with the latest updates from the community.",
      "html_url": "https://github.com/robbyrussell/oh-my-zsh",
      "num_forks": 2363,
      "name": "oh-my-zsh",
      "id": 291137,
      "language": "Shell",
      "mysql_id": 3231
    },
    "owner": 15119,
    "pull_request": {
      "created_at": 1351723108,
      "issue_id": 1384,
      "html_url": "https://github.com/robbyrussell/oh-my-zsh/pull/1384",
      "number": 1384,
      "merged": false,
      "title": "Added wprater theme.  Support for VCS, red  user prompt, two-line, and ruby version (rbenv)",
      "id": 2840894,
      "opened_by": 24559,
      "body": "Theme I've been using for a long time and wanted to share.",
      "mysql_id": 873194
    },
    "issue_events": [
      {
        "created_at": 1354405506,
        "actor_id": 24559,
        "action": "mentioned",
        "action_specific": null,
        "event_id": "30924981"
      },
      {
        "created_at": 1354405506,
        "actor_id": 24559,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "30924982"
      },
      {
        "created_at": 1354405506,
        "actor_id": 15119,
        "action": "closed",
        "action_specific": null,
        "event_id": "30924983"
      }
    ],
    "issue_comments": [
      {
        "created_at": 1354405506,
        "user_id": 15119,
        "comment_id": "10921186",
        "body": "@wprater thanks, but we're holding off on new themes for a bit. want to post a screenshot here and if a few people upvote it, i'll consider it?"
      },
      {
        "created_at": 1354405676,
        "user_id": 24559,
        "comment_id": "10921223",
        "body": "Sure.. here is a screenshot\r\n\r\n![Theme](http://f.cl.ly/items/3W3x1V3o2X1c1l0B1G2G/Image%202012.12.01%2011:47:17%20AM.png)\r\n"
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1351723063,
        "author_id": 24559,
        "sha": "41e2be3fb33a40ccc55a1b21c832b7912110320f",
        "id": 21830693,
        "committer_id": 24559,
        "comments": []
      }
    ]
  },
  "873201": {
    "authors": [
      33881
    ],
    "num_watchers": 8862,
    "id": 873201,
    "org_owned": true,
    "relevant_users": {
      "2427": {
        "country_code": "us",
        "is_project_member": {
          "created_at": 1352489170,
          "corrected_created_at": 1307211291,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": "Portland, OR",
        "company": "Heroku",
        "login": "mattt",
        "fake": 0,
        "state": "Oregon",
        "created_at": 1208409534,
        "id": 2427,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "Portland"
      },
      "33881": {
        "country_code": "us",
        "is_project_member": {
          "created_at": 1326282861,
          "corrected_created_at": 1323697692,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": "Irvine, CA",
        "company": "",
        "login": "kgn",
        "fake": 0,
        "state": "California",
        "created_at": 1284238680,
        "id": 33881,
        "num_prior_commits": 5,
        "is_owner_member": false,
        "city": "Irvine"
      },
      "35991": {
        "country_code": null,
        "is_project_member": {
          "created_at": 1343075576,
          "corrected_created_at": 1335395320,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": null,
        "company": null,
        "login": "tewha",
        "fake": 0,
        "state": null,
        "created_at": 1248391412,
        "id": 35991,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": null
      }
    },
    "project": {
      "full_name": "AFNetworking/AFNetworking",
      "created_at": 1306884524,
      "description": "A delightful iOS and OS X networking framework",
      "html_url": "https://github.com/AFNetworking/AFNetworking",
      "num_forks": 500,
      "name": "AFNetworking",
      "id": 1828795,
      "language": "Objective-C",
      "mysql_id": 1273
    },
    "owner": 7315,
    "pull_request": {
      "created_at": 1342944082,
      "issue_id": 420,
      "html_url": "https://github.com/AFNetworking/AFNetworking/pull/420",
      "number": 420,
      "merged": true,
      "title": "String formatting changes wanted by Xcode4.5 on Mountain Lion",
      "id": 1857696,
      "opened_by": 33881,
      "body": "",
      "mysql_id": 873201
    },
    "issue_events": [
      {
        "created_at": 1342944082,
        "actor_id": 33881,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "20823353"
      },
      {
        "created_at": 1343072881,
        "actor_id": 2427,
        "action": "referenced",
        "action_specific": "76c5b8e4de65abd5ce366fa39731dee0aadf4ebb",
        "event_id": "20932440"
      },
      {
        "created_at": 1343072881,
        "actor_id": 2427,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "20932442"
      },
      {
        "created_at": 1343072882,
        "actor_id": 2427,
        "action": "merged",
        "action_specific": "76c5b8e4de65abd5ce366fa39731dee0aadf4ebb",
        "event_id": "20932444"
      },
      {
        "created_at": 1343072882,
        "actor_id": 2427,
        "action": "closed",
        "action_specific": null,
        "event_id": "20932446"
      },
      {
        "created_at": 1343073723,
        "actor_id": 35991,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "20934087"
      }
    ],
    "issue_comments": [
      {
        "created_at": 1343072890,
        "user_id": 2427,
        "comment_id": "7185372",
        "body": "Thanks, dude!"
      },
      {
        "created_at": 1343073723,
        "user_id": 35991,
        "comment_id": "7185806",
        "body": "I didn't realize you'd already merged + closed this. I'll do another pull request."
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1342951253,
        "author_id": 33881,
        "sha": "b46284860dc38e7e84caf68a9659073e4dec10d3",
        "id": 351990,
        "committer_id": 33881,
        "comments": []
      }
    ]
  },
  "873210": {
    "authors": [
      534047
    ],
    "num_watchers": 8862,
    "id": 873210,
    "org_owned": true,
    "relevant_users": {
      "2427": {
        "country_code": "us",
        "is_project_member": {
          "created_at": 1352489170,
          "corrected_created_at": 1307211291,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": "Portland, OR",
        "company": "Heroku",
        "login": "mattt",
        "fake": 0,
        "state": "Oregon",
        "created_at": 1208409534,
        "id": 2427,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "Portland"
      },
      "7059": {
        "country_code": "at",
        "is_project_member": {
          "created_at": 1338326439,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": "Vienna, Austria",
        "company": "I make iOS apps that are lickable. Love to rant on startups. Speaker. Developer of http://pspdfkit.com.",
        "login": "steipete",
        "fake": 0,
        "state": "Wien",
        "created_at": 1235738062,
        "id": 7059,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "Wien"
      },
      "73457": {
        "country_code": null,
        "is_project_member": {
          "created_at": 1350321589,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": null,
        "company": "HAKORE",
        "login": "krzak",
        "fake": 0,
        "state": null,
        "created_at": 1304042197,
        "id": 73457,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": null
      },
      "212797": {
        "country_code": "fi",
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": "Finland",
        "company": "Geometrify",
        "login": "inDigiNeous",
        "fake": 0,
        "state": null,
        "created_at": 1321975770,
        "id": 212797,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": null
      },
      "534047": {
        "country_code": "us",
        "is_project_member": {
          "created_at": 1342769533,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": "Los Angeles",
        "company": null,
        "login": "lansing",
        "fake": 0,
        "state": "California",
        "created_at": 1206996992,
        "id": 534047,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "LA"
      },
      "1197180": {
        "country_code": null,
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": null,
        "company": null,
        "login": "wbonar",
        "fake": 0,
        "state": null,
        "created_at": 1316023995,
        "id": 1197180,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": null
      }
    },
    "project": {
      "full_name": "AFNetworking/AFNetworking",
      "created_at": 1306884524,
      "description": "A delightful iOS and OS X networking framework",
      "html_url": "https://github.com/AFNetworking/AFNetworking",
      "num_forks": 500,
      "name": "AFNetworking",
      "id": 1828795,
      "language": "Objective-C",
      "mysql_id": 1273
    },
    "owner": 7315,
    "pull_request": {
      "created_at": 1342769642,
      "issue_id": 418,
      "html_url": "https://github.com/AFNetworking/AFNetworking/pull/418",
      "number": 418,
      "merged": false,
      "title": "Experimental extreme streaming",
      "id": 1845864,
      "opened_by": 534047,
      "body": "This is a better version of my earlier extreme streaming addition. I learned more about how to properly handle the CF callbacks. This is finishing requests including completion handlers for me.",
      "mysql_id": 873210
    },
    "issue_events": [
      {
        "created_at": 1342769642,
        "actor_id": 534047,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "20694880"
      },
      {
        "created_at": 1343073977,
        "actor_id": 534047,
        "action": "mentioned",
        "action_specific": null,
        "event_id": "20934613"
      },
      {
        "created_at": 1343073977,
        "actor_id": 2427,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "20934615"
      },
      {
        "created_at": 1343081438,
        "actor_id": 2427,
        "action": "mentioned",
        "action_specific": null,
        "event_id": "20947550"
      },
      {
        "created_at": 1343689007,
        "actor_id": 1197180,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "21597716"
      },
      {
        "created_at": 1344122549,
        "actor_id": 534047,
        "action": "mentioned",
        "action_specific": null,
        "event_id": "22076501"
      },
      {
        "created_at": 1344131832,
        "actor_id": 7059,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "22080226"
      },
      {
        "created_at": 1345192178,
        "actor_id": 2427,
        "action": "mentioned",
        "action_specific": null,
        "event_id": "22858865"
      },
      {
        "created_at": 1345192178,
        "actor_id": 2427,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "22858867"
      },
      {
        "created_at": 1345692152,
        "actor_id": 534047,
        "action": "mentioned",
        "action_specific": null,
        "event_id": "23204092"
      },
      {
        "created_at": 1345692152,
        "actor_id": 534047,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "23204093"
      },
      {
        "created_at": 1345771663,
        "actor_id": 534047,
        "action": "mentioned",
        "action_specific": null,
        "event_id": "23280107"
      },
      {
        "created_at": 1345771663,
        "actor_id": 534047,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "23280108"
      },
      {
        "created_at": 1346151040,
        "actor_id": 405497,
        "action": "mentioned",
        "action_specific": null,
        "event_id": "23494803"
      },
      {
        "created_at": 1346151040,
        "actor_id": 405497,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "23494804"
      },
      {
        "created_at": 1348523447,
        "actor_id": 25753,
        "action": "referenced",
        "action_specific": null,
        "event_id": "25308773"
      },
      {
        "created_at": 1348607714,
        "actor_id": 25753,
        "action": "mentioned",
        "action_specific": null,
        "event_id": "25398262"
      },
      {
        "created_at": 1348607714,
        "actor_id": 25753,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "25398263"
      },
      {
        "created_at": 1348607714,
        "actor_id": 534047,
        "action": "mentioned",
        "action_specific": null,
        "event_id": "25398264"
      },
      {
        "created_at": 1348607714,
        "actor_id": 534047,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "25398265"
      },
      {
        "created_at": 1348607714,
        "actor_id": 2427,
        "action": "closed",
        "action_specific": null,
        "event_id": "25398266"
      },
      {
        "created_at": 1348608389,
        "actor_id": 2427,
        "action": "referenced",
        "action_specific": null,
        "event_id": "25399176"
      },
      {
        "created_at": 1348860950,
        "actor_id": 73457,
        "action": "mentioned",
        "action_specific": null,
        "event_id": "25671629"
      },
      {
        "created_at": 1348860950,
        "actor_id": 73457,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "25671630"
      },
      {
        "created_at": 1348863885,
        "actor_id": 405497,
        "action": "mentioned",
        "action_specific": null,
        "event_id": "25675796"
      },
      {
        "created_at": 1348863885,
        "actor_id": 405497,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "25675797"
      }
    ],
    "issue_comments": [
      {
        "created_at": 1343073977,
        "user_id": 2427,
        "comment_id": "7185942",
        "body": "Hi @lansing,\n\nI've given this a few cursory glances over the last week, and it looks pretty good. I think I missed out on the original context of this feature to begin with, though... Could you explain how this is an improvement over the current implementation? What are the possible downsides to this approach?"
      },
      {
        "created_at": 1343081438,
        "user_id": 534047,
        "comment_id": "7189573",
        "body": "Hey @mattt \n\nI made changes both to the implementation and the API. In summary, this push request removes \"risky\" API methods, and lets you upload arbitrarily large files without requiring any disk space for temporary files or substantial in-memory buffers.\n\nThe API changes were the removal of a number of public methods (appendData: and so on) that allowed the API user to inject arbitrary data, without formatting, into the multipart form body. Such usage can easily break the multipart forms (being mishandled or misinterpreted by the server), so I don't think it should be part of the public API. If a developer has an edge case that requires this usage, they can subclass.\n\nThe previous implementation composed and wrote the multipart form body to a temporary file, then used that as the request body input stream. The \"problem\" with this is that any file being uploaded are duplicated on disk unnecessarily. This could become a real issue in my current use case, which involves uploading video files. My re-implementation provides an nsinputstream subclass that internally uses file streams (as well as in-data objects for additional key-value form data) provided by the API user to compose and stream the multipart form body without using any temporary files and minimal in-memory buffers.\n\nThe main downside is the increased complexity of implementing an NSInputStream subclass versus the previous approach. The Apple documentation on NSStream subclassing is a bit sketchy, so one has to refer to third party documentation (blogs and github) to understand what's really going on. Hopefully this addition will cover most if not all use cases for multipart form submission, and not a lot of future maintenance to the stream subclass will be required."
      },
      {
        "created_at": 1343091785,
        "user_id": 2427,
        "comment_id": "7194300",
        "body": "Excellent. I'd love to merge this in with a bit more testing and polish.\n\nOne cool thing I'd like to add would be features to fix a bug related to streaming uploads over 3G. There are several open issues on AFN about that since it was added in 0.10.0. Details were sketchy until I found [this article from Amazon about the S3 iOS SDK](http://aws.amazon.com/articles/0006282245644577). They seem to be implementing something similar, so this looks very much like a two birds/one stone kinda deal (or maybe since streaming introduced the bug, is it more like racketeering?) \n\nAnyway, let me know if you have any strong ideas for that. I'd be happy to dive in and implement that if you'd like."
      },
      {
        "created_at": 1343094209,
        "user_id": 534047,
        "comment_id": "7195022",
        "body": "I should also add, this fork fixes the issue I previously brought up, which is still in master, which is that it is apparently not possible to get the MIME type from a file URL using NSURLRequest without allocating an NSData object for the entire file content. I adapted some code I found on the internet to access the MIME type table directly instead."
      },
      {
        "created_at": 1343094428,
        "user_id": 534047,
        "comment_id": "7195074",
        "body": "Regarding the 3G issue, this seems like a good place to deal with that. I checked out the AWS S3UploadInputStream.m file. All AWS did was insert a thread sleep call in the read method, in addition to allowing a limit on the max returned buffer size. I don't know that the latter ensures that the OS networking code will actually send packets of that size, but maybe they have tested it. \n\nThe \"packet size\" (though it's not really that, actually just the buffer size we offer to the OS networking code) could be adjusted by checking and reassigning the \"len\" variable to the desired size at the very top of my read method. I don't think that will have any side effects.\n\nA good insertion point for a simple delay could be in my read method where the copiedCallback() gets called (line ~1104). This block only executes when the buffer is full and there are more bytes to read on the next call.\n\nA slightly more elegant approach might involve storing the size of the last buffer read, and the time it was read at. Next time the read method is called, you check the time elapsed and see if it's been less than the desired throttle length, and if so you sleep for that long before continuing. I like the API implications of this because it lets the API user set a desired speed rather than a packet size and delay."
      },
      {
        "created_at": 1343689007,
        "user_id": 1197180,
        "comment_id": "7381855",
        "body": "Is there any progress on this? The upload on 3G fix would be greatly useful.  If you need assistance, please let me know"
      },
      {
        "created_at": 1344122549,
        "user_id": 2427,
        "comment_id": "7505574",
        "body": "@lansing I'm just getting around to looking through this, and I see some nice opportunities to refactor. My current thought is to have form data and files defined in classes that conform to a protocol that can be enumerated by an NSEnumerator subclass, which would be responsible for handling the changing input streams. All in the name of a cleaner OO approach."
      },
      {
        "created_at": 1344131832,
        "user_id": 7059,
        "comment_id": "7506483",
        "body": "When reading the diffs, a added ?w=1 suppresses the whitespace changes (even better would be to not reformat them in the first place)"
      },
      {
        "created_at": 1345192178,
        "user_id": 534047,
        "comment_id": "7810813",
        "body": "Okay, yall. I refactored the main stream body class into a whole buncha other classes, as per @mattt's suggestion. It was the right thing to do, the code seems much cleaner now. \n\nAdditionally, I implemented a 3G throttle mechanism. It can pretty easily be extended to throttle at arbitrary speeds; right now it's just hard coded to 80KB/s. The only catch is, I didn't implement the actual code to check whether it's using 3G at the moment or not. It's just stubbed out in a \"throttle3G\" method. I figured @mattt or somebody else would know the cleanest way to do it-- it needs to be queried from within the stream instance, which I didn't see an obvious way to do."
      },
      {
        "created_at": 1345692152,
        "user_id": 2427,
        "comment_id": "7957495",
        "body": "Hi @lansing, Thanks for your work refactoring all of this. Sorry for the delay—I'll be taking a real look at this tomorrow and figure out the best way to merge this all in."
      },
      {
        "created_at": 1345723821,
        "user_id": 73457,
        "comment_id": "7965256",
        "body": "I'm not sure how it hsould be used? I did apply this patch however still I'm facing problem with allocated memory. Not allways I think it's working on 3G while still broken on EDGE. Can it be ?"
      },
      {
        "created_at": 1345771663,
        "user_id": 2427,
        "comment_id": "7987773",
        "body": "@lansing I went back and refactored from an earlier version of the branch; the results are on the [experimental-refined-streaming branch](https://github.com/afnetworking/afnetworking/tree/experimental-refined-stream). \n\nIt's approaching what I'm hoping for in terms of architecture, but in the process of refactoring, I must have missed some details about `NSInputStream`, and it's not quite working.\n\nI'll return with fresh eyes tomorrow, but I wanted to put it out there to see if you see if the problem is more obvious to you, and to solicit any feedback about the structure of things."
      },
      {
        "created_at": 1345776345,
        "user_id": 534047,
        "comment_id": "7989112",
        "body": "I haven't run the code yet but just looking at it, I noticed a likely bug. In the NSInputStream subclass's read method, in the while loop, the httpbodypart read methods are potentially called multiple times, passing in the same buffer pointer and maxLength value each time. This will simply overwrite the buffer from the beginning on each iteration, instead of appending from where the last iteration ended. I was doing this stuff via recursive calls so it won't translate exactly into the while loop implementation, but you are going to have to increase the buffer pointer and decrease the length variables appropriately, or keep track of the cursor in a separate variable and add/subtract it from buffer/length when passing those values to the httpbodypart read call."
      },
      {
        "created_at": 1346151040,
        "user_id": 73457,
        "comment_id": "8085175",
        "body": "@matt experimental-refined-streaming branch crash on line https://github.com/AFNetworking/AFNetworking/blob/experimental-refined-stream/AFNetworking/AFHTTPClient.m#L841 for me. I don't use ARC. Something about CFRetain."
      },
      {
        "created_at": 1346253468,
        "user_id": 212797,
        "comment_id": "8124832",
        "body": "I am looking into uploading large files, in the range of 5-25 megs maybe, on an iOS device. Are there any examples of how to do this, without constructing the request in-memory or having to read the whole file into memory before constructing the request ? I checked out the branched AFNetworking code from here: https://github.com/lansing/AFNetworking.\n\nHow would one go making this kind of request ? Can the NSInputStream be used to read a file part by part and then construct the multipart form so that the whole request is not built in memory ? The examples in the documentation about NSInputStream are not really helping. I've tried also looking for some projects that do this, but no luck yet. \n\nThank you for any help and I appreciate making this library open source.\n\nHere is the current code I am using. Obviously this will allocate the buffer completely in memory, then start sending it in the request. How to just stream the data without allocating it first in memory ?\n\n\n    if ([[NSFileManager defaultManager] isReadableFileAtPath:filePath]) {\n        NSMutableData *videoData = [NSMutableData dataWithContentsOfFile:filePath];\n        \n        NSMutableURLRequest *request = [[APIClient sharedInstance] multipartFormRequestWithMethod:@\"POST\" path:uploadURL.absoluteString parameters:uploadParams constructingBodyWithBlock: ^(id <AFMultipartFormData> formData) {\n            [formData appendPartWithFileData:videoData name:@\"asset_data\" fileName:strFileName mimeType:@\"video/mp4\"];\n        }];\n\n        AFHTTPRequestOperation *operation = [[AFHTTPRequestOperation alloc] initWithRequest:request];\n        [operation setUploadProgressBlock:^(NSInteger bytesWritten, long long totalBytesWritten, long long totalBytesExpectedToWrite) {\n            if ((totalBytesWritten % 10) == 0) {\n                NSLog(@\"Sent %lld of %lld kB\", totalBytesWritten/1024, totalBytesExpectedToWrite/1024);\n            }\n        }];\n        \n        [operation\n         setCompletionBlockWithSuccess:^(AFHTTPRequestOperation *operation, id responseObject) {\n             NSLog(@\"Upload succesful, responseString: %@\", operation.responseString);\n             }\n         }\n         failure:^(AFHTTPRequestOperation *operation, NSError *error) {\n             NSLog(@\"error: %@\", operation.error);\n         }\n         ];\n        \n        [operation start];\n    }\n\nEDIT: Ok, I got it working. The documentation for sending streaming request is confusing. \nMaybe this is also something that is only in this fork of AFNetworking, solved it by adding this\n\n        NSMutableURLRequest *request = [[APIClient sharedInstance] multipartFormRequestWithMethod:@\"POST\" path:uploadURL.absoluteString parameters:uploadParams constructingBodyWithBlock: ^(id <AFMultipartFormData> formData) {\n            [formData appendPartWithStreamingURL:videoURL name:@\"asset_data\" mimeType:@\"video/mp4\"];\n        }];\n\nThere is no mention anywhere that this would stream the request, but by looking at the code in AFHTTPClient.m this seems to be the case. So no need to set up the NSInputStreams manually."
      },
      {
        "created_at": 1348607714,
        "user_id": 2427,
        "comment_id": "8866539",
        "body": "Very happy to say that everything has been merged into master as of d67e8a6bd69da68e4baf30f5f689f50336d720e1, thanks to @lxcid's fix for my attempt at re-refactoring. \n\nThanks so much for your patch, @lansing. Seriously awesome work. This is a significant improvement to AFN."
      },
      {
        "created_at": 1348797612,
        "user_id": 73457,
        "comment_id": "8959161",
        "body": "Hi, After this update, my code is crashing inside appendPartwithFormData on this\n\n    NSURLRequest *request = [[XAppDelegate sharedWebClient] multipartFormRequestWithMethod:@\"POST\" path:[NSString stringWithFormat:@\"/card/create/%@\",udid]  parameters:uploadParameters constructingBodyWithBlock:^(id<AFMultipartFormData> formData) {\n        [formData appendPartWithFormData:UIImagePNGRepresentation(drawImage) name:@\"draw\"];\n    }];\n\nwhat can be wrong ?\nthis is non-ARC code"
      },
      {
        "created_at": 1348797961,
        "user_id": 73457,
        "comment_id": "8959273",
        "body": "Oh I know. Before that merge, looks like appendPartWithFormData checked if data is nil. Currently if data is nil then it crash."
      },
      {
        "created_at": 1348842272,
        "user_id": 73457,
        "comment_id": "8974775",
        "body": "I think that this: #546 may be related to this patch."
      },
      {
        "created_at": 1348860950,
        "user_id": 2427,
        "comment_id": "8984890",
        "body": "@krzak This is a known, long-standing issue that occurs any time any stream is set to a URL request over AT&T 3G or Edge. I'm working towards a solution for that."
      },
      {
        "created_at": 1348863885,
        "user_id": 73457,
        "comment_id": "8986347",
        "body": "@matt is there known any known workaround for sending data over 3G/EDGE ?"
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1341114165,
        "author_id": 534047,
        "sha": "d434de241f933279b4a20389b3c4acd5f16fb5d5",
        "id": 6393317,
        "committer_id": 534047,
        "comments": []
      },
      {
        "created_at": 1341113531,
        "author_id": 534047,
        "sha": "ced167f8670c788bd4599350aaf289ee483f57bd",
        "id": 6393328,
        "committer_id": 534047,
        "comments": []
      },
      {
        "created_at": 1339580799,
        "author_id": 534047,
        "sha": "d92462ef8cd2de0d9780e6979f382498dcf7cecb",
        "id": 6393346,
        "committer_id": 534047,
        "comments": []
      },
      {
        "created_at": 1339582435,
        "author_id": 534047,
        "sha": "7399eaa7cc294f14d26bc8a24f7866e30ad083a9",
        "id": 6393349,
        "committer_id": 534047,
        "comments": []
      },
      {
        "created_at": 1341112884,
        "author_id": 534047,
        "sha": "5e90a17c767fb75a675cab7735e0ac19a6dd7ab9",
        "id": 6393352,
        "committer_id": 534047,
        "comments": []
      },
      {
        "created_at": 1342776396,
        "author_id": 534047,
        "sha": "15155f63956c702e02bf8ebb8104188a26ab9642",
        "id": 6827854,
        "committer_id": 534047,
        "comments": []
      },
      {
        "created_at": 1342776218,
        "author_id": 534047,
        "sha": "c7f6fb09bfa995c7f5d6de69fce1f3463b4600fe",
        "id": 6827865,
        "committer_id": 534047,
        "comments": []
      },
      {
        "created_at": 1345163799,
        "author_id": 534047,
        "sha": "1151971ecb4ac9c4a31504c2187328ba6628c72a",
        "id": 6827906,
        "committer_id": 534047,
        "comments": []
      },
      {
        "created_at": 1345163987,
        "author_id": 534047,
        "sha": "5a790360df9acdcf8bf2dd89612e0878911e3d4d",
        "id": 6827918,
        "committer_id": 534047,
        "comments": []
      },
      {
        "created_at": 1345198561,
        "author_id": 534047,
        "sha": "85aadda95ad67bf00eae80f68352d23da5b2705c",
        "id": 6827926,
        "committer_id": 534047,
        "comments": []
      }
    ]
  },
  "873218": {
    "authors": [
      783966
    ],
    "num_watchers": 8862,
    "id": 873218,
    "org_owned": true,
    "relevant_users": {
      "2359": {
        "country_code": "fr",
        "is_project_member": {
          "created_at": 1342705108,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": "Paris, France",
        "company": null,
        "login": "mackoj",
        "fake": 0,
        "state": "Île-de-France",
        "created_at": 1299766037,
        "id": 2359,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "Paris"
      },
      "2427": {
        "country_code": "us",
        "is_project_member": {
          "created_at": 1352489170,
          "corrected_created_at": 1307211291,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": "Portland, OR",
        "company": "Heroku",
        "login": "mattt",
        "fake": 0,
        "state": "Oregon",
        "created_at": 1208409534,
        "id": 2427,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "Portland"
      },
      "783966": {
        "country_code": null,
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": null,
        "company": null,
        "login": "TXOHXPEO",
        "fake": 1,
        "state": null,
        "created_at": 1347970296,
        "id": 783966,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": null
      }
    },
    "project": {
      "full_name": "AFNetworking/AFNetworking",
      "created_at": 1306884524,
      "description": "A delightful iOS and OS X networking framework",
      "html_url": "https://github.com/AFNetworking/AFNetworking",
      "num_forks": 500,
      "name": "AFNetworking",
      "id": 1828795,
      "language": "Objective-C",
      "mysql_id": 1273
    },
    "owner": 7315,
    "pull_request": {
      "created_at": 1342704873,
      "issue_id": 416,
      "html_url": "https://github.com/AFNetworking/AFNetworking/pull/416",
      "number": 416,
      "merged": false,
      "title": "Fix parameters order in requestWithMethod:",
      "id": 1836782,
      "opened_by": 2359,
      "body": "Some webservices (WCF based) only handle parameters in a certain order this fix handle this issue.\n\nThe OrderedDictionary class has been borrowed from Matt Gallagher from Cocoa with love (http://cocoawithlove.com/2008/12/ordereddictionary-subclassing-cocoa.html) and adapted for iOS.",
      "mysql_id": 873218
    },
    "issue_events": [
      {
        "created_at": 1342704873,
        "actor_id": 2359,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "20601050"
      },
      {
        "created_at": 1342705108,
        "actor_id": 2359,
        "action": "closed",
        "action_specific": null,
        "event_id": "20601316"
      },
      {
        "created_at": 1342705120,
        "actor_id": 2359,
        "action": "reopened",
        "action_specific": null,
        "event_id": "20601325"
      },
      {
        "created_at": 1342720283,
        "actor_id": 2359,
        "action": "mentioned",
        "action_specific": null,
        "event_id": "20626065"
      },
      {
        "created_at": 1342720283,
        "actor_id": 2427,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "20626067"
      },
      {
        "created_at": 1342720283,
        "actor_id": 2427,
        "action": "closed",
        "action_specific": null,
        "event_id": "20626068"
      },
      {
        "created_at": 1342789321,
        "actor_id": 2427,
        "action": "mentioned",
        "action_specific": null,
        "event_id": "20713501"
      }
    ],
    "issue_comments": [
      {
        "created_at": 1342705108,
        "user_id": 2359,
        "comment_id": "7096042",
        "body": "In order to make it work just pass an OrderedDictionary instead of a NSDictionary to requestWithMethod."
      },
      {
        "created_at": 1342720283,
        "user_id": 2427,
        "comment_id": "7102189",
        "body": "Hi @mackoj, thanks for your patch.\n\nI'm extremely reluctant to add any external dependencies unless it proves itself to be exceptionally useful. Unfortunately, I don't think parameter ordering for WCF services meets that criteria, nor do I think that this would be the way that I would solve this problem.\n\nFortunately, it is possible and indeed extremely easy to override what's needed to make this work for WCF, and I would encourage you to explore that—perhaps with your own `AFHTTPClient` subclass. My advice would be that instead of relying on a custom collection type, try being clever about parameters: add an NSArray / NSOrderedSet parameter defining the order of the keys, or maybe pass a block in which the user passes the keys in order."
      },
      {
        "created_at": 1342807864,
        "user_id": 2359,
        "comment_id": "7134175",
        "body": "They fix the problem on their side.\n\n"
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1342710255,
        "author_id": 783966,
        "sha": "8ac25b5e1da26e19edc33e07401fffc8812dcadf",
        "id": 12232761,
        "committer_id": 783966,
        "comments": []
      },
      {
        "created_at": 1342711525,
        "author_id": 783966,
        "sha": "e5937032a4b088b0e79bbb70ff0cddacbf2a78f9",
        "id": 12232765,
        "committer_id": 783966,
        "comments": []
      }
    ]
  },
  "873224": {
    "authors": [
      203637
    ],
    "num_watchers": 8862,
    "id": 873224,
    "org_owned": true,
    "relevant_users": {
      "2427": {
        "country_code": "us",
        "is_project_member": {
          "created_at": 1352489170,
          "corrected_created_at": 1307211291,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": "Portland, OR",
        "company": "Heroku",
        "login": "mattt",
        "fake": 0,
        "state": "Oregon",
        "created_at": 1208409534,
        "id": 2427,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "Portland"
      },
      "203637": {
        "country_code": "fr",
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": "France",
        "company": "Morin Innovation",
        "login": "florentmorin",
        "fake": 0,
        "state": null,
        "created_at": 1316720301,
        "id": 203637,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": null
      }
    },
    "project": {
      "full_name": "AFNetworking/AFNetworking",
      "created_at": 1306884524,
      "description": "A delightful iOS and OS X networking framework",
      "html_url": "https://github.com/AFNetworking/AFNetworking",
      "num_forks": 500,
      "name": "AFNetworking",
      "id": 1828795,
      "language": "Objective-C",
      "mysql_id": 1273
    },
    "owner": 7315,
    "pull_request": {
      "created_at": 1342481901,
      "issue_id": 415,
      "html_url": "https://github.com/AFNetworking/AFNetworking/pull/415",
      "number": 415,
      "merged": false,
      "title": "Automatically support ARC",
      "id": 1809019,
      "opened_by": 203637,
      "body": "Hi,\n\nI have just updated my version of AFNetworking.\n\nThe code is mainly the same, but it include support for ARC.\nIn face, it automatically use ARC if necessary.\n\nNot sure it's the best code of the world (sic!) but perhaps it can be helpful.\nSamples were successfully tested on iOS and Mac.\n\n++",
      "mysql_id": 873224
    },
    "issue_events": [
      {
        "created_at": 1342481901,
        "actor_id": 203637,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "20317510"
      },
      {
        "created_at": 1342483590,
        "actor_id": 2427,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "20320291"
      },
      {
        "created_at": 1342483590,
        "actor_id": 2427,
        "action": "closed",
        "action_specific": null,
        "event_id": "20320293"
      }
    ],
    "issue_comments": [
      {
        "created_at": 1342483590,
        "user_id": 2427,
        "comment_id": "7020920",
        "body": "Thanks for your contribution, but AFNetworking is already ARC-enabled as of 1.0RC2. \n\nI am interested in that fix for pausing download, though. Can you explain that a little more?"
      },
      {
        "created_at": 1342484430,
        "user_id": 203637,
        "comment_id": "7021292",
        "body": "Perhaps some parts of my code can be useful? It's also compatible with\r\nnon-ARC code. Blocks in operations work fine with \"self\" access…\r\n\r\nThe bug is only a non-tested var. It seems to work fine.\r\n\r\nFlorent\r\n\r\nLe 17 juil. 2012 à 00:06, Mattt Thompson\r\n<reply@reply.github.com>\r\na écrit :\r\n\r\n> Thanks for your contribution, but AFNetworking is already ARC-enabled as of 1.0RC2.\r\n>\r\n> I am interested in that fix for pausing download, though. Can you explain that a little more?\r\n>\r\n> ---\r\n> Reply to this email directly or view it on GitHub:\r\n> https://github.com/AFNetworking/AFNetworking/pull/415#issuecomment-7020920"
      },
      {
        "created_at": 1342484922,
        "user_id": 2427,
        "comment_id": "7021464",
        "body": "I really do appreciate your effort here, but I'm of a strong opinion that ARC support is an all-or-nothing proposition. \n\n1.0 and on will be ARC; 0.10.x and below are non-ARC."
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1342488656,
        "author_id": 203637,
        "sha": "5733c6a90c596e1a14495f2a69d15c6df33de902",
        "id": 6741598,
        "committer_id": 203637,
        "comments": []
      },
      {
        "created_at": 1342488506,
        "author_id": 203637,
        "sha": "d2b6bd60bd9fdc10c9a18e9e5dec107215b3d6b7",
        "id": 6741608,
        "committer_id": 203637,
        "comments": []
      },
      {
        "created_at": 1342472424,
        "author_id": 203637,
        "sha": "52d415180a1dcc3096dae4f218f3fb5906d89e8b",
        "id": 6741613,
        "committer_id": 203637,
        "comments": []
      }
    ]
  },
  "873230": {
    "authors": [
      72572
    ],
    "num_watchers": 8862,
    "id": 873230,
    "org_owned": true,
    "relevant_users": {
      "2427": {
        "country_code": "us",
        "is_project_member": {
          "created_at": 1352489170,
          "corrected_created_at": 1307211291,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": "Portland, OR",
        "company": "Heroku",
        "login": "mattt",
        "fake": 0,
        "state": "Oregon",
        "created_at": 1208409534,
        "id": 2427,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "Portland"
      },
      "72572": {
        "country_code": null,
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": null,
        "company": null,
        "login": "MGSKELUG",
        "fake": 1,
        "state": null,
        "created_at": 1344050031,
        "id": 72572,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": null
      }
    },
    "project": {
      "full_name": "AFNetworking/AFNetworking",
      "created_at": 1306884524,
      "description": "A delightful iOS and OS X networking framework",
      "html_url": "https://github.com/AFNetworking/AFNetworking",
      "num_forks": 500,
      "name": "AFNetworking",
      "id": 1828795,
      "language": "Objective-C",
      "mysql_id": 1273
    },
    "owner": 7315,
    "pull_request": {
      "created_at": 1342122671,
      "issue_id": 413,
      "html_url": "https://github.com/AFNetworking/AFNetworking/pull/413",
      "number": 413,
      "merged": true,
      "title": "Fix compiler errors in README upload example",
      "id": 1781181,
      "opened_by": 72575,
      "body": "Got some warnings after pasting example code into an Xcode iOS project. This should fix them in the README.",
      "mysql_id": 873230
    },
    "issue_events": [
      {
        "created_at": 1342122671,
        "actor_id": 72575,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "20001297"
      },
      {
        "created_at": 1343076255,
        "actor_id": 2427,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "20938540"
      },
      {
        "created_at": 1343076258,
        "actor_id": 2427,
        "action": "referenced",
        "action_specific": "2fae4086de49b7f7593776b2e64b53ced0a005ee",
        "event_id": "20938544"
      },
      {
        "created_at": 1343076258,
        "actor_id": 2427,
        "action": "merged",
        "action_specific": "2fae4086de49b7f7593776b2e64b53ced0a005ee",
        "event_id": "20938545"
      },
      {
        "created_at": 1343076260,
        "actor_id": 2427,
        "action": "closed",
        "action_specific": null,
        "event_id": "20938548"
      }
    ],
    "issue_comments": [
      {
        "created_at": 1343076255,
        "user_id": 2427,
        "comment_id": "7187104",
        "body": "Format specifiers—they get you every time. Much appreciated."
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1342122492,
        "author_id": 72572,
        "sha": "c161a420339fa680da53f80d8848165f3859ac04",
        "id": 351984,
        "committer_id": 72572,
        "comments": []
      }
    ]
  },
  "873234": {
    "authors": [
      72576
    ],
    "num_watchers": 8862,
    "id": 873234,
    "org_owned": true,
    "relevant_users": {
      "2427": {
        "country_code": "us",
        "is_project_member": {
          "created_at": 1352489170,
          "corrected_created_at": 1307211291,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": "Portland, OR",
        "company": "Heroku",
        "login": "mattt",
        "fake": 0,
        "state": "Oregon",
        "created_at": 1208409534,
        "id": 2427,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "Portland"
      },
      "72576": {
        "country_code": "ca",
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": "Canada",
        "company": null,
        "login": "wlue",
        "fake": 0,
        "state": null,
        "created_at": 1265754307,
        "id": 72576,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": null
      }
    },
    "project": {
      "full_name": "AFNetworking/AFNetworking",
      "created_at": 1306884524,
      "description": "A delightful iOS and OS X networking framework",
      "html_url": "https://github.com/AFNetworking/AFNetworking",
      "num_forks": 500,
      "name": "AFNetworking",
      "id": 1828795,
      "language": "Objective-C",
      "mysql_id": 1273
    },
    "owner": 7315,
    "pull_request": {
      "created_at": 1342001287,
      "issue_id": 412,
      "html_url": "https://github.com/AFNetworking/AFNetworking/pull/412",
      "number": 412,
      "merged": true,
      "title": "iOS 6 Warnings Fix",
      "id": 1765264,
      "opened_by": 72576,
      "body": "in Xcode 4.5 DP2 (iOS 6 SDK), Xcode reports 4 warnings. for these lines:\n\n    @property (nonatomic) dispatch_queue_t successCallbackQueue;\n    @property (nonatomic) dispatch_queue_t failureCallbackQueue;\n\nThis fix makes the properties explicitly 'assign' so that Xcode does not report these warnings.  assign attribute is automatic if not specified, so this should not affect any functionality.\n\n",
      "mysql_id": 873234
    },
    "issue_events": [
      {
        "created_at": 1342001287,
        "actor_id": 72576,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "19838431"
      },
      {
        "created_at": 1342001287,
        "actor_id": 948900,
        "action": "mentioned",
        "action_specific": null,
        "event_id": "19838432"
      },
      {
        "created_at": 1342001287,
        "actor_id": 948900,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "19838433"
      },
      {
        "created_at": 1342024314,
        "actor_id": 2427,
        "action": "referenced",
        "action_specific": "5dc7be4c64b77913af59fd17dbd5d1468b04637d",
        "event_id": "19867997"
      },
      {
        "created_at": 1342024314,
        "actor_id": 2427,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "19867998"
      },
      {
        "created_at": 1342024314,
        "actor_id": 2427,
        "action": "merged",
        "action_specific": "5dc7be4c64b77913af59fd17dbd5d1468b04637d",
        "event_id": "19867999"
      },
      {
        "created_at": 1342024315,
        "actor_id": 2427,
        "action": "closed",
        "action_specific": null,
        "event_id": "19868000"
      }
    ],
    "issue_comments": [
      {
        "created_at": 1342024350,
        "user_id": 2427,
        "comment_id": "6908202",
        "body": "Fair enough. Thanks for the patch!"
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1342008256,
        "author_id": 72576,
        "sha": "415ece4dd459de64de7d73c3d7f28212e0f1703b",
        "id": 351995,
        "committer_id": 72576,
        "comments": []
      }
    ]
  },
  "873238": {
    "authors": [
      72568
    ],
    "num_watchers": 8862,
    "id": 873238,
    "org_owned": true,
    "relevant_users": {
      "2427": {
        "country_code": "us",
        "is_project_member": {
          "created_at": 1352489170,
          "corrected_created_at": 1307211291,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": "Portland, OR",
        "company": "Heroku",
        "login": "mattt",
        "fake": 0,
        "state": "Oregon",
        "created_at": 1208409534,
        "id": 2427,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "Portland"
      },
      "72568": {
        "country_code": null,
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": null,
        "company": null,
        "login": "epatey",
        "fake": 0,
        "state": null,
        "created_at": 1304589262,
        "id": 72568,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": null
      }
    },
    "project": {
      "full_name": "AFNetworking/AFNetworking",
      "created_at": 1306884524,
      "description": "A delightful iOS and OS X networking framework",
      "html_url": "https://github.com/AFNetworking/AFNetworking",
      "num_forks": 500,
      "name": "AFNetworking",
      "id": 1828795,
      "language": "Objective-C",
      "mysql_id": 1273
    },
    "owner": 7315,
    "pull_request": {
      "created_at": 1341978993,
      "issue_id": 410,
      "html_url": "https://github.com/AFNetworking/AFNetworking/pull/410",
      "number": 410,
      "merged": true,
      "title": "Fix threading issue with AFNetworkActivityIndicatorManager.",
      "id": 1763830,
      "opened_by": 72568,
      "body": "AFNetworkActivityIndicatorManager still has a problem when decrementing from a background thread. The code intends to delay the hiding of the indicator to suppress flashing via a timer. The timer was added to the current run loop which, depending on the thread, will never fire.\n\nThe fix was trivial - put the timer on the mainRunLoop rather than the currentRunLoop.\n\nI also made an additional fix to avoid an extra dispatch_async onto the main queue when responding to the timer - since the timer is already firing on the proper queue/thread.",
      "mysql_id": 873238
    },
    "issue_events": [
      {
        "created_at": 1341978993,
        "actor_id": 72568,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "19822099"
      },
      {
        "created_at": 1343077635,
        "actor_id": 2427,
        "action": "merged",
        "action_specific": "a8210a93bb4ab13e7cbcb32518f9f0f5f737101a",
        "event_id": "20940980"
      },
      {
        "created_at": 1343077635,
        "actor_id": 2427,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "20940981"
      },
      {
        "created_at": 1343077635,
        "actor_id": 2427,
        "action": "closed",
        "action_specific": null,
        "event_id": "20940982"
      }
    ],
    "issue_comments": [
      {
        "created_at": 1343077771,
        "user_id": 2427,
        "comment_id": "7187854",
        "body": "Thanks for bringing this to my attention. I refactored it a bit to use `performSelectorOnMainThread:` instead of wrapping with a dispatch to main. These changes were merged in 69ff078. Cheers!"
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1341983574,
        "author_id": 72568,
        "sha": "a8210a93bb4ab13e7cbcb32518f9f0f5f737101a",
        "id": 351965,
        "committer_id": 72568,
        "comments": []
      }
    ]
  },
  "873257": {
    "authors": [
      422620
    ],
    "num_watchers": 8862,
    "id": 873257,
    "org_owned": true,
    "relevant_users": {
      "2427": {
        "country_code": "us",
        "is_project_member": {
          "created_at": 1352489170,
          "corrected_created_at": 1307211291,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": "Portland, OR",
        "company": "Heroku",
        "login": "mattt",
        "fake": 0,
        "state": "Oregon",
        "created_at": 1208409534,
        "id": 2427,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "Portland"
      },
      "409106": {
        "country_code": "sg",
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": "Singapore",
        "company": null,
        "login": "steve0hh",
        "fake": 0,
        "state": null,
        "created_at": 1300769488,
        "id": 409106,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "Singapore"
      },
      "422620": {
        "country_code": null,
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": null,
        "company": null,
        "login": "dedmons",
        "fake": 0,
        "state": null,
        "created_at": 1314476930,
        "id": 422620,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": null
      }
    },
    "project": {
      "full_name": "AFNetworking/AFNetworking",
      "created_at": 1306884524,
      "description": "A delightful iOS and OS X networking framework",
      "html_url": "https://github.com/AFNetworking/AFNetworking",
      "num_forks": 500,
      "name": "AFNetworking",
      "id": 1828795,
      "language": "Objective-C",
      "mysql_id": 1273
    },
    "owner": 7315,
    "pull_request": {
      "created_at": 1341550785,
      "issue_id": 402,
      "html_url": "https://github.com/AFNetworking/AFNetworking/pull/402",
      "number": 402,
      "merged": false,
      "title": "DELETE paramaters encoding location",
      "id": 1728650,
      "opened_by": 422620,
      "body": "These changes allow for the DELETE parameters to be encoded in the HTTP request body instead of the URL. This is how the documentation for the class describes the deletePath:parameters:success:failure: and with the property added it does not break existing code that relies on the params in the URL. This also creates compatibility with the Code Igniter RESTful implementation.\n\nFeel free to edit the names or comments.",
      "mysql_id": 873257
    },
    "issue_events": [
      {
        "created_at": 1341550785,
        "actor_id": 422620,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "19451804"
      },
      {
        "created_at": 1341978493,
        "actor_id": 409106,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "19821728"
      },
      {
        "created_at": 1343078757,
        "actor_id": 2427,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "20942988"
      },
      {
        "created_at": 1343078757,
        "actor_id": 2427,
        "action": "closed",
        "action_specific": null,
        "event_id": "20942989"
      },
      {
        "created_at": 1352880720,
        "actor_id": 29642,
        "action": "referenced",
        "action_specific": null,
        "event_id": "29473421"
      }
    ],
    "issue_comments": [
      {
        "created_at": 1341978493,
        "user_id": 409106,
        "comment_id": "6895987",
        "body": "+1 for this feature"
      },
      {
        "created_at": 1343078757,
        "user_id": 2427,
        "comment_id": "7188315",
        "body": "Sorry about that—the documentation was not corrected when this change was made. I have revised the documentation in 9236e41.\n\nAlthough the RFC doesn't explicitly prevent `DELETE` having an HTTP body, it makes a lot more sense for it to remain a query string parameter (as the resource is identified by its resource URI, which may include arguments)\n\nMore discussion about this can be found on [this StackOverflow thread](http://stackoverflow.com/questions/299628/is-an-entity-body-allowed-for-an-http-delete-request).\n\nCodeIgniter would be incorrect in looking for message bodies in DELETE requests. Because it is straightforward to override as necessary to get around any incorrect behavior, and in the interest of keeping the public API to a minimum, I'm not going to merge this in at this time."
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1341555019,
        "author_id": 422620,
        "sha": "bfc2436c4b8363ba1af3a1188e2f42dbac051fc3",
        "id": 12077937,
        "committer_id": 422620,
        "comments": []
      },
      {
        "created_at": 1341557420,
        "author_id": 422620,
        "sha": "583ed4430290d11b62cbcd699f02b95769be4d33",
        "id": 12077941,
        "committer_id": 422620,
        "comments": []
      }
    ]
  },
  "873260": {
    "authors": [
      562256
    ],
    "num_watchers": 8862,
    "id": 873260,
    "org_owned": true,
    "relevant_users": {
      "562256": {
        "country_code": "nz",
        "is_project_member": {
          "created_at": 1341495831,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": "Auckland, New Zealand",
        "company": "Jayco design Ltd.",
        "login": "tenfef",
        "fake": 0,
        "state": "Auckland",
        "created_at": 1316832605,
        "id": 562256,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "Auckland"
      }
    },
    "project": {
      "full_name": "AFNetworking/AFNetworking",
      "created_at": 1306884524,
      "description": "A delightful iOS and OS X networking framework",
      "html_url": "https://github.com/AFNetworking/AFNetworking",
      "num_forks": 500,
      "name": "AFNetworking",
      "id": 1828795,
      "language": "Objective-C",
      "mysql_id": 1273
    },
    "owner": 7315,
    "pull_request": {
      "created_at": 1341495092,
      "issue_id": 401,
      "html_url": "https://github.com/AFNetworking/AFNetworking/pull/401",
      "number": 401,
      "merged": false,
      "title": "Fixed crash on invalid JSON for AFJSONRequestOperation",
      "id": 1720810,
      "opened_by": 562256,
      "body": "Issue referenced here:\nhttps://github.com/AFNetworking/AFNetworking/issues/343\n\nself.error changed to self.JSONerror.\n\nFixed crash \"[NSError retain]: message sent to deallocated instance\".\n(May only happen when using ARC.)",
      "mysql_id": 873260
    },
    "issue_events": [
      {
        "created_at": 1341495092,
        "actor_id": 562256,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "19373203"
      },
      {
        "created_at": 1341495831,
        "actor_id": 562256,
        "action": "closed",
        "action_specific": null,
        "event_id": "19374014"
      }
    ],
    "issue_comments": [
      {
        "created_at": 1341495829,
        "user_id": 562256,
        "comment_id": "6776729",
        "body": "Hmm I just got the crash again, but forcing self.JSONerror into a new NSError variable fixed it. \nWIll do some more testing."
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1341502061,
        "author_id": 562256,
        "sha": "1b2529b7c1b753ae4ece0a5a5735d5559c7fe518",
        "id": 6486316,
        "committer_id": 562256,
        "comments": []
      },
      {
        "created_at": 1341501819,
        "author_id": 562256,
        "sha": "fc0439c48c9244b6906987f631ffdcc205f0eb52",
        "id": 6486318,
        "committer_id": 562256,
        "comments": []
      }
    ]
  },
  "873287": {
    "authors": [
      72584,
      72578,
      2427,
      72580,
      534047
    ],
    "num_watchers": 8862,
    "id": 873287,
    "org_owned": true,
    "relevant_users": {
      "2427": {
        "country_code": "us",
        "is_project_member": {
          "created_at": 1352489170,
          "corrected_created_at": 1307211291,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": "Portland, OR",
        "company": "Heroku",
        "login": "mattt",
        "fake": 0,
        "state": "Oregon",
        "created_at": 1208409534,
        "id": 2427,
        "num_prior_commits": 188,
        "is_owner_member": false,
        "city": "Portland"
      },
      "72578": {
        "country_code": "kr",
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": "Seoul, Korea",
        "company": "Wizet Corporation",
        "login": "dittos",
        "fake": 0,
        "state": "서울",
        "created_at": 1205050897,
        "id": 72578,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "서울"
      },
      "72580": {
        "country_code": null,
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": null,
        "company": null,
        "login": "AMETCFUR",
        "fake": 1,
        "state": null,
        "created_at": 1344050033,
        "id": 72580,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": null
      },
      "72584": {
        "country_code": "se",
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": "Göteborg, Sweden",
        "company": "Acando",
        "login": "pal",
        "fake": 0,
        "state": "Västra Götalands län",
        "created_at": 1222639937,
        "id": 72584,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "Gbg"
      },
      "220291": {
        "country_code": "se",
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": "Stockholm",
        "company": "Tictail",
        "login": "hwaxxer",
        "fake": 0,
        "state": "Stockholms län",
        "created_at": 1247421757,
        "id": 220291,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "Sthlm"
      },
      "534047": {
        "country_code": "us",
        "is_project_member": {
          "created_at": 1342769533,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": "Los Angeles",
        "company": null,
        "login": "lansing",
        "fake": 0,
        "state": "California",
        "created_at": 1206996992,
        "id": 534047,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "LA"
      }
    },
    "project": {
      "full_name": "AFNetworking/AFNetworking",
      "created_at": 1306884524,
      "description": "A delightful iOS and OS X networking framework",
      "html_url": "https://github.com/AFNetworking/AFNetworking",
      "num_forks": 500,
      "name": "AFNetworking",
      "id": 1828795,
      "language": "Objective-C",
      "mysql_id": 1273
    },
    "owner": 7315,
    "pull_request": {
      "created_at": 1341107139,
      "issue_id": 396,
      "html_url": "https://github.com/AFNetworking/AFNetworking/pull/396",
      "number": 396,
      "merged": false,
      "title": "Extreme streaming",
      "id": 1690702,
      "opened_by": 534047,
      "body": "Hey homeboy, check out this reimplementation of the HTTP multipart stuff. Rather than piling on one hack after another to get the temporary file stuff working, I created an nsinputstream subclass that aggregates your form datas and your file urls, handles building the headers, and doesn't use any temp files.\n\nIt's basically a drop-in replacement for the previous implementation, although I cut out a bunch of the public API for composing the request. I feel like there's no point in taking pains (and believe me, it was painful) to build a multipart request correctly via this method, only to let people bone it up themselves by appending data without the proper headers, etc. If they want to do that they should subclass. So really all you can do is attach a form data object or attach a file. \n\nThere are a bunch of stubbed out methods in the nsinputstream subclass which are simply required to avoid a runtime exception (not that Apple documented this fact). I also added the MobileCoreServices framework to the ios project, which is required to get the MIME type from the filename (although it's kinda not chill that this will break existing projects that don't have this framework added, with some bogus error).",
      "mysql_id": 873287
    },
    "issue_events": [
      {
        "created_at": 1341107139,
        "actor_id": 534047,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "19049277"
      },
      {
        "created_at": 1342478692,
        "actor_id": 220291,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "20311211"
      },
      {
        "created_at": 1342769533,
        "actor_id": 534047,
        "action": "closed",
        "action_specific": null,
        "event_id": "20694807"
      }
    ],
    "issue_comments": [
      {
        "created_at": 1342478692,
        "user_id": 220291,
        "comment_id": "7018454",
        "body": "This is a great addition but I had issues getting it to work. The server receives the data correctly, but oddly enough the NSURLRequest never completes or fails, it just times out after the specified timeoutInterval. Something wrong with the headers?"
      },
      {
        "created_at": 1342480558,
        "user_id": 534047,
        "comment_id": "7019424",
        "body": "I ran into this in my own usage but thought I had fixed the bug. The client should hang up automatically when the nsinputstream subclass returns zero bytes from a read or hasBytesAvailable returns NO, so it's likely that your use case has exposed a bug related to that behavior. That is my working assumption, anyway. The official NSStream subclassing documentation is nothing but half truths and outright fabrications so I'm learning via trial and error.\n\nIt would be great if you could provide a code snippet of your multiple request composition block. I'll try and recreate the issue. What is your server stack?"
      },
      {
        "created_at": 1342528102,
        "user_id": 220291,
        "comment_id": "7031687",
        "body": "It's just a simple:\n```\n[formData appendPartWithFileURL:[NSURL fileURLWithPath:filePath] name:@\"item[asset]\" error:&error];\n```\nThe file is already zipped.\nIt's a rails server. And I'm not sure if it's related, but I've had issues before because the server returns whitespace in the response body on 201."
      },
      {
        "created_at": 1342563337,
        "user_id": 534047,
        "comment_id": "7048010",
        "body": "To clarify, is this an issue that popped up once you checked out my fork, or were there other changes on client or server (and conversely, it goes away if you switch back to master)? \n\nI didn't change anything in the response handling. Does your client ever start receiving the response data, hitting the appropriate callbacks? Maybe set some breakpoints to find out. \n\nIf the server is completing the request on its end, it seems that the multipart form data is probably being written out properly and completely, but the client is still waiting on the inputstream to close.\n\nWhat's your rails version and what http server(s) are you using? iOS 5 sdk?"
      },
      {
        "created_at": 1342616071,
        "user_id": 220291,
        "comment_id": "7063595",
        "body": "Only having this problem with your fork.\nThe client receives no callbacks after upload progress reaches 100%.\nUsing rails 3.1.1, iOS 5x. \nI'm a bit swamped with other stuff right now, but I'll try to dig into the code to see if I can find something this week."
      },
      {
        "created_at": 1342643117,
        "user_id": 534047,
        "comment_id": "7077493",
        "body": "One more thing... do you mind pasting in your AFHTTPRequestOperation init -> completion/progress block setup -> start snippet? Probably boilerplate but i want to make sure I'm hitting the code the same way as you."
      },
      {
        "created_at": 1342769533,
        "user_id": 534047,
        "comment_id": "7122693",
        "body": "Closing this and making a new pull request with supposed fix."
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1340938287,
        "author_id": 2427,
        "sha": "7fda89e4a2a409fd178ed19c248a6aaabbf0d428",
        "id": 351992,
        "committer_id": 2427,
        "comments": []
      },
      {
        "created_at": 1340738761,
        "author_id": 2427,
        "sha": "b4406a3d03aae281bc0a5b6ecd5231c13b8b1cd7",
        "id": 351999,
        "committer_id": 2427,
        "comments": []
      },
      {
        "created_at": 1340738711,
        "author_id": 2427,
        "sha": "58b9eb51b78bf93e2a416b22d90a2bd134b565f9",
        "id": 352002,
        "committer_id": 2427,
        "comments": []
      },
      {
        "created_at": 1340417527,
        "author_id": 2427,
        "sha": "49842625347008b53cdee1227c2bf8b9a5107def",
        "id": 352005,
        "committer_id": 2427,
        "comments": []
      },
      {
        "created_at": 1340317276,
        "author_id": 2427,
        "sha": "af406e41038eb465ab2f79980b15a0529dd7a473",
        "id": 352006,
        "committer_id": 2427,
        "comments": []
      },
      {
        "created_at": 1340160448,
        "author_id": 2427,
        "sha": "c4f07c4b0741ef42b658319eb7540e5788582cd4",
        "id": 352008,
        "committer_id": 2427,
        "comments": []
      },
      {
        "created_at": 1340298784,
        "author_id": 72578,
        "sha": "61047bac769b12fcb1444689c8c6e8ca2a4f6433",
        "id": 352015,
        "committer_id": 72578,
        "comments": []
      },
      {
        "created_at": 1340159441,
        "author_id": 2427,
        "sha": "06d09903be6c033013e20060f0e667f1281209a7",
        "id": 352018,
        "committer_id": 2427,
        "comments": []
      },
      {
        "created_at": 1340156411,
        "author_id": 2427,
        "sha": "b648e33481d1fcbaff8bbfcd3d696aa8a0e706eb",
        "id": 352019,
        "committer_id": 2427,
        "comments": []
      },
      {
        "created_at": 1340155849,
        "author_id": 2427,
        "sha": "ec2cee42d20368f86cb542bd33985554578205f9",
        "id": 352022,
        "committer_id": 2427,
        "comments": []
      },
      {
        "created_at": 1340150836,
        "author_id": 2427,
        "sha": "a3f39712c73e5f9d0aad11a2159043479fe57b29",
        "id": 352024,
        "committer_id": 2427,
        "comments": []
      },
      {
        "created_at": 1340150811,
        "author_id": 2427,
        "sha": "9d399e9ffa837e75e98721dc39622e16b7a0ce96",
        "id": 352027,
        "committer_id": 2427,
        "comments": []
      },
      {
        "created_at": 1340149826,
        "author_id": 2427,
        "sha": "eaa9059cd20ded46190dcda939882c02611f5333",
        "id": 352029,
        "committer_id": 2427,
        "comments": []
      },
      {
        "created_at": 1340143725,
        "author_id": 2427,
        "sha": "d1e993f1fd72c172f27be8270d9b90f557d1b9ef",
        "id": 352033,
        "committer_id": 2427,
        "comments": []
      },
      {
        "created_at": 1339892630,
        "author_id": 2427,
        "sha": "4afd15bfa048450fa1e7c834d46103d5072751a6",
        "id": 352034,
        "committer_id": 2427,
        "comments": []
      },
      {
        "created_at": 1339638286,
        "author_id": 2427,
        "sha": "af991546949bb02f533886b71f76a6937fdf20df",
        "id": 352036,
        "committer_id": 2427,
        "comments": []
      },
      {
        "created_at": 1339703449,
        "author_id": 2427,
        "sha": "a0f592c23a7d291304b82ab30de3a58ea2654ddd",
        "id": 352037,
        "committer_id": 2427,
        "comments": []
      },
      {
        "created_at": 1339638871,
        "author_id": 2427,
        "sha": "286b8100c5678b2fcc241c7e1b177e9c0ae79a0e",
        "id": 352039,
        "committer_id": 2427,
        "comments": []
      },
      {
        "created_at": 1339528808,
        "author_id": 2427,
        "sha": "d7852c19e17d39a4954b5933d76eb3e22de0e41b",
        "id": 352040,
        "committer_id": 2427,
        "comments": []
      },
      {
        "created_at": 1339527710,
        "author_id": 2427,
        "sha": "6b9187b6c28cf8c013c06ba640c4c4cfec23450d",
        "id": 352041,
        "committer_id": 2427,
        "comments": []
      },
      {
        "created_at": 1339441053,
        "author_id": 2427,
        "sha": "8432cb7dfd08452cdf9c437adb95d4db99c43db8",
        "id": 352042,
        "committer_id": 2427,
        "comments": []
      },
      {
        "created_at": 1339439500,
        "author_id": 2427,
        "sha": "5c26d435bf06db7df1669077e08429aed0d60f67",
        "id": 352044,
        "committer_id": 2427,
        "comments": []
      },
      {
        "created_at": 1339439185,
        "author_id": 2427,
        "sha": "512a513ace0b303901a0a974e35fa4ca34ecbb4a",
        "id": 352045,
        "committer_id": 2427,
        "comments": []
      },
      {
        "created_at": 1339438740,
        "author_id": 2427,
        "sha": "20711964506560cfdd6433349e0779fb96b8e92a",
        "id": 352047,
        "committer_id": 2427,
        "comments": []
      },
      {
        "created_at": 1339264348,
        "author_id": 2427,
        "sha": "9b515d4ebebabba8852617d73f44cb2f43a381f9",
        "id": 352049,
        "committer_id": 2427,
        "comments": []
      },
      {
        "created_at": 1339199082,
        "author_id": 72580,
        "sha": "91d46140287887daef7fab2796a0735c45cb7d6f",
        "id": 352060,
        "committer_id": 72580,
        "comments": []
      },
      {
        "created_at": 1338867219,
        "author_id": 2427,
        "sha": "7620d3e3730ba40f0e38ad99ccff211966558ede",
        "id": 352063,
        "committer_id": 2427,
        "comments": []
      },
      {
        "created_at": 1338867186,
        "author_id": 2427,
        "sha": "dd0abd2e121aba4f9221d302f266f32f2c61b07d",
        "id": 352072,
        "committer_id": 2427,
        "comments": []
      },
      {
        "created_at": 1338583117,
        "author_id": 2427,
        "sha": "ca4d700a810e11e08c0cc2c8b34ef2cf5aeaf867",
        "id": 352074,
        "committer_id": 2427,
        "comments": []
      },
      {
        "created_at": 1338553030,
        "author_id": 72584,
        "sha": "88277451d4156c595ce4f18f525ca925e7b7040d",
        "id": 352077,
        "committer_id": 72584,
        "comments": []
      },
      {
        "created_at": 1341114165,
        "author_id": 534047,
        "sha": "d434de241f933279b4a20389b3c4acd5f16fb5d5",
        "id": 6393317,
        "committer_id": 534047,
        "comments": []
      },
      {
        "created_at": 1341113531,
        "author_id": 534047,
        "sha": "ced167f8670c788bd4599350aaf289ee483f57bd",
        "id": 6393328,
        "committer_id": 534047,
        "comments": []
      },
      {
        "created_at": 1339580799,
        "author_id": 534047,
        "sha": "d92462ef8cd2de0d9780e6979f382498dcf7cecb",
        "id": 6393346,
        "committer_id": 534047,
        "comments": []
      },
      {
        "created_at": 1339582435,
        "author_id": 534047,
        "sha": "7399eaa7cc294f14d26bc8a24f7866e30ad083a9",
        "id": 6393349,
        "committer_id": 534047,
        "comments": []
      },
      {
        "created_at": 1341112884,
        "author_id": 534047,
        "sha": "5e90a17c767fb75a675cab7735e0ac19a6dd7ab9",
        "id": 6393352,
        "committer_id": 534047,
        "comments": []
      }
    ]
  },
  "873292": {
    "authors": [
      180607
    ],
    "num_watchers": 8862,
    "id": 873292,
    "org_owned": true,
    "relevant_users": {
      "2427": {
        "country_code": "us",
        "is_project_member": {
          "created_at": 1352489170,
          "corrected_created_at": 1307211291,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": "Portland, OR",
        "company": "Heroku",
        "login": "mattt",
        "fake": 0,
        "state": "Oregon",
        "created_at": 1208409534,
        "id": 2427,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "Portland"
      },
      "180607": {
        "country_code": "il",
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": "Tel Aviv",
        "company": "Yallo Inc.",
        "login": "yosit",
        "fake": 0,
        "state": "מחוז תל אביב",
        "created_at": 1252250806,
        "id": 180607,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "תל אביב-יפו"
      }
    },
    "project": {
      "full_name": "AFNetworking/AFNetworking",
      "created_at": 1306884524,
      "description": "A delightful iOS and OS X networking framework",
      "html_url": "https://github.com/AFNetworking/AFNetworking",
      "num_forks": 500,
      "name": "AFNetworking",
      "id": 1828795,
      "language": "Objective-C",
      "mysql_id": 1273
    },
    "owner": 7315,
    "pull_request": {
      "created_at": 1340997758,
      "issue_id": 395,
      "html_url": "https://github.com/AFNetworking/AFNetworking/pull/395",
      "number": 395,
      "merged": false,
      "title": "Fix an issue where canceling a request would not do so because there is no internet connection",
      "id": 1685046,
      "opened_by": 180607,
      "body": "Causing the block to be called even though the you explicitly say you wanted to cancel the request.",
      "mysql_id": 873292
    },
    "issue_events": [
      {
        "created_at": 1340997759,
        "actor_id": 180607,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "18990868"
      },
      {
        "created_at": 1341015814,
        "actor_id": 2427,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "19015875"
      },
      {
        "created_at": 1341015814,
        "actor_id": 2427,
        "action": "closed",
        "action_specific": null,
        "event_id": "19015876"
      }
    ],
    "issue_comments": [
      {
        "created_at": 1341015814,
        "user_id": 2427,
        "comment_id": "6679709",
        "body": "I don't really understand what this accomplishes. \n\nThere is already a check for `isCancelled` in `AFJSONRequestOperation.m#106`. Is there a reason why the check should happen again after JSON has been parsed? (I'm of the opinion that once the network request part of everything is finished, it's too late to cancel, at least for the base operation classes).\n\nAlso, your pull request comments out the `isFinished` check in `AFURLConnectionOperation -cancel`, which is a huge red flag.\n\nAre you sure this actually fixes the problem you encountered?"
      },
      {
        "created_at": 1341045880,
        "user_id": 180607,
        "comment_id": "6683228",
        "body": "Hi Matt,\nSince the call to failure happens on a different queue/thread I encountered a situation where when there is no network at all the completion block starts to run and between the time the block check for cancel and the time the failure block runs we cancel the request and its too late to actually cancel.\n\nAlso when there is no network the state of the request is AFHTTPOperationFinishedState which denies the option of marking the request as canceled. I would expect the cancel message to ALWAYS mark the request as canceled regardless of the state of the request. This is a good a example why:\n1. the request completion block starts to run (it doesn't matter really why).\n2. the failure/success block is scheduled to run but didn't run.\n3. the request is being canceled.\n4. the failure/success block is being executed and a potential crash happens."
      },
      {
        "created_at": 1341046344,
        "user_id": 180607,
        "comment_id": "6683263",
        "body": "BTW, I would be happy to share my screen with you to show you this bug.\nI replaced the network layer for Three20 with AFNetworking and there is a specific scenario where this comes up."
      },
      {
        "created_at": 1341084927,
        "user_id": 2427,
        "comment_id": "6686935",
        "body": "Alright, that helps clear a few things up.\n\nIf you want to change the behavior based on internet reachability, I would strongly recommend that you take advantage of the reachability features of `AFHTTPClient`.\n\nUnfortunately, we can't make any assumptions about what network reachability means to the URL loading system, since the request could be in cache. \n\nRather than preventing the possibility of crashes, a better approach would be to handle any kind of bad data or exceptions that may come your way."
      },
      {
        "created_at": 1341085043,
        "user_id": 180607,
        "comment_id": "6686948",
        "body": "It was just an example, this can happen also in a situation where you create a request and cancel it right away.\nI do not assume that the network exists or doesn't exist at all.\n\nWould you like to get into skype so I can show you whats going on?"
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1340992411,
        "author_id": 180607,
        "sha": "ec07cfbe417e1c6c851b0bd7c71a628d77f3544f",
        "id": 6375698,
        "committer_id": 180607,
        "comments": []
      }
    ]
  },
  "873304": {
    "authors": [
      297194
    ],
    "num_watchers": 8862,
    "id": 873304,
    "org_owned": true,
    "relevant_users": {
      "2427": {
        "country_code": "us",
        "is_project_member": {
          "created_at": 1352489170,
          "corrected_created_at": 1307211291,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": "Portland, OR",
        "company": "Heroku",
        "login": "mattt",
        "fake": 0,
        "state": "Oregon",
        "created_at": 1208409534,
        "id": 2427,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "Portland"
      },
      "297194": {
        "country_code": "ph",
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": "Manila, Philippines",
        "company": "Kakao Corp.",
        "login": "minorblend",
        "fake": 0,
        "state": "Manila Fővárosi Régió",
        "created_at": 1296447749,
        "id": 297194,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "Manila"
      }
    },
    "project": {
      "full_name": "AFNetworking/AFNetworking",
      "created_at": 1306884524,
      "description": "A delightful iOS and OS X networking framework",
      "html_url": "https://github.com/AFNetworking/AFNetworking",
      "num_forks": 500,
      "name": "AFNetworking",
      "id": 1828795,
      "language": "Objective-C",
      "mysql_id": 1273
    },
    "owner": 7315,
    "pull_request": {
      "created_at": 1340905462,
      "issue_id": 391,
      "html_url": "https://github.com/AFNetworking/AFNetworking/pull/391",
      "number": 391,
      "merged": false,
      "title": "cancelAllHTTPOperations now can cancel all requests regardless of path if nil is passed as path.",
      "id": 1674348,
      "opened_by": 297194,
      "body": "by passing nil to path argument of cancelAllHTTPOperations, you can cancel all requests.",
      "mysql_id": 873304
    },
    "issue_events": [
      {
        "created_at": 1340905462,
        "actor_id": 297194,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "18856010"
      },
      {
        "created_at": 1340917058,
        "actor_id": 2427,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "18875100"
      },
      {
        "created_at": 1340917058,
        "actor_id": 2427,
        "action": "closed",
        "action_specific": null,
        "event_id": "18875101"
      }
    ],
    "issue_comments": [
      {
        "created_at": 1340917058,
        "user_id": 2427,
        "comment_id": "6638427",
        "body": "Thanks for sending in your pull request.\n\nYou can already cancel all requests by doing `[HTTPClient.operationQueue cancelAllOperations];`. I think having optional `nil`s for both parameters would be confusing; an optional `nil` for path alone to cancel all `GET` or `POST` requests doesn't seem like advisable behavior, either."
      },
      {
        "created_at": 1340933755,
        "user_id": 297194,
        "comment_id": "6644748",
        "body": "ah, I didn't know that. thanks =)"
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1340912393,
        "author_id": 297194,
        "sha": "3424eb107acc05228c725cba72f3b6dabb20d1f2",
        "id": 6352858,
        "committer_id": 297194,
        "comments": []
      }
    ]
  },
  "873323": {
    "authors": [
      72595
    ],
    "num_watchers": 8862,
    "id": 873323,
    "org_owned": true,
    "relevant_users": {
      "2427": {
        "country_code": "us",
        "is_project_member": {
          "created_at": 1352489170,
          "corrected_created_at": 1307211291,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": "Portland, OR",
        "company": "Heroku",
        "login": "mattt",
        "fake": 0,
        "state": "Oregon",
        "created_at": 1208409534,
        "id": 2427,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "Portland"
      },
      "72595": {
        "country_code": "us",
        "is_project_member": {
          "created_at": 1340734763,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": "Brooklyn NY",
        "company": null,
        "login": "tomwans",
        "fake": 0,
        "state": "New York",
        "created_at": 1260233142,
        "id": 72595,
        "num_prior_commits": 1,
        "is_owner_member": false,
        "city": "NYC"
      }
    },
    "project": {
      "full_name": "AFNetworking/AFNetworking",
      "created_at": 1306884524,
      "description": "A delightful iOS and OS X networking framework",
      "html_url": "https://github.com/AFNetworking/AFNetworking",
      "num_forks": 500,
      "name": "AFNetworking",
      "id": 1828795,
      "language": "Objective-C",
      "mysql_id": 1273
    },
    "owner": 7315,
    "pull_request": {
      "created_at": 1340683255,
      "issue_id": 386,
      "html_url": "https://github.com/AFNetworking/AFNetworking/pull/386",
      "number": 386,
      "merged": false,
      "title": "Set the AFHTTPClient's networkReachability after the reachability callback",
      "id": 1648272,
      "opened_by": 72595,
      "body": "This allows folks to check in their reachability callback what the reachability is changing *from* by accessing the `self.networkReachabilityStatus` property.",
      "mysql_id": 873323
    },
    "issue_events": [
      {
        "created_at": 1340683255,
        "actor_id": 72595,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "18583141"
      },
      {
        "created_at": 1340729581,
        "actor_id": 2427,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "18632929"
      },
      {
        "created_at": 1340734763,
        "actor_id": 72595,
        "action": "closed",
        "action_specific": null,
        "event_id": "18642998"
      }
    ],
    "issue_comments": [
      {
        "created_at": 1340729580,
        "user_id": 2427,
        "comment_id": "6577792",
        "body": "What's the use case of this? I think I'd find this confusing for the property to still have the old value when the callback is made.\n\nIf you are interested in comparing old and new values, you can simply use KVO, which has such provisions to get old and new values on change."
      },
      {
        "created_at": 1340734763,
        "user_id": 72595,
        "comment_id": "6580298",
        "body": "Word — KVO is better for this use case. This would make more sense if the callback was something like `networkReachabilityWillChangeBlock(newReachability)`"
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1340690165,
        "author_id": 72595,
        "sha": "0b8398f86fe5d2535e965b960b29a4ade18f5eb3",
        "id": 6294571,
        "committer_id": 72595,
        "comments": []
      }
    ]
  },
  "873326": {
    "authors": [
      126843
    ],
    "num_watchers": 8862,
    "id": 873326,
    "org_owned": false,
    "relevant_users": {
      "126843": {
        "country_code": null,
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": null,
        "company": null,
        "login": "RFYOHESB",
        "fake": 1,
        "state": null,
        "created_at": 1344132010,
        "id": 126843,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": null
      },
      "877146": {
        "country_code": "hn",
        "is_project_member": {
          "created_at": 1295653148,
          "ext_ref_id": "50cbdb7fedecb5152000107a"
        },
        "type": "USR",
        "deleted": 0,
        "location": "Tegucigalpa, Honduras",
        "company": "Revls",
        "login": "alejandro",
        "fake": 0,
        "state": "Francisco Morazán",
        "created_at": 1293770310,
        "id": 877146,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "Tegucigalpa"
      }
    },
    "project": {
      "full_name": "nodester/nodester",
      "created_at": 1295656748,
      "description": "Open Source Node.js Hosting Platform",
      "html_url": "https://github.com/nodester/nodester",
      "num_forks": 60,
      "name": "nodester",
      "id": 1279680,
      "language": "JavaScript",
      "mysql_id": 33605
    },
    "owner": 97869,
    "pull_request": {
      "created_at": 1344116355,
      "issue_id": 398,
      "html_url": "https://github.com/nodester/nodester/pull/398",
      "number": 398,
      "merged": false,
      "title": "Add a todo to the readme file",
      "id": 1974846,
      "opened_by": 126792,
      "body": "",
      "mysql_id": 873326
    },
    "issue_events": [
      {
        "created_at": 1344116355,
        "actor_id": 126792,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "22074135"
      },
      {
        "created_at": 1344121696,
        "actor_id": 877146,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "22076240"
      },
      {
        "created_at": 1344285405,
        "actor_id": 126792,
        "action": "closed",
        "action_specific": null,
        "event_id": "22183124"
      }
    ],
    "issue_comments": [
      {
        "created_at": 1344121696,
        "user_id": 877146,
        "comment_id": "7505487",
        "body": "Personally i think that adding native support for geddy is way out of our scope. I'm able to run a simple geddy app though. I create a demo app with geddy -> http://geddy.nodester.com  I just added the package.json and the runner (server.js) ->  \n\nWith this scripts: https://gist.github.com/3259935\n\nTell me if that works for you.\n\nHack the planet\n"
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1344123422,
        "author_id": 126843,
        "sha": "436b10e7cbe309aa7d3b9abbb3cfa364145b68a4",
        "id": 788796,
        "committer_id": 126843,
        "comments": [
          {
            "comment_id": 1671730,
            "id": 360307,
            "user_id": 877146,
            "body": "Crypto frameworks, like who?",
            "created_at": 1344121366,
            "position": 5,
            "line": 53
          }
        ]
      },
      {
        "created_at": 1344123274,
        "author_id": 126843,
        "sha": "42b2c388ff171dce5c9cd047e3cc41020ad104d3",
        "id": 788797,
        "committer_id": 126843,
        "comments": []
      }
    ]
  },
  "873336": {
    "authors": [
      297194
    ],
    "num_watchers": 8862,
    "id": 873336,
    "org_owned": true,
    "relevant_users": {
      "2427": {
        "country_code": "us",
        "is_project_member": {
          "created_at": 1352489170,
          "corrected_created_at": 1307211291,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": "Portland, OR",
        "company": "Heroku",
        "login": "mattt",
        "fake": 0,
        "state": "Oregon",
        "created_at": 1208409534,
        "id": 2427,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "Portland"
      },
      "297194": {
        "country_code": "ph",
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": "Manila, Philippines",
        "company": "Kakao Corp.",
        "login": "minorblend",
        "fake": 0,
        "state": "Manila Fővárosi Régió",
        "created_at": 1296447749,
        "id": 297194,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "Manila"
      }
    },
    "project": {
      "full_name": "AFNetworking/AFNetworking",
      "created_at": 1306884524,
      "description": "A delightful iOS and OS X networking framework",
      "html_url": "https://github.com/AFNetworking/AFNetworking",
      "num_forks": 500,
      "name": "AFNetworking",
      "id": 1828795,
      "language": "Objective-C",
      "mysql_id": 1273
    },
    "owner": 7315,
    "pull_request": {
      "created_at": 1340351968,
      "issue_id": 382,
      "html_url": "https://github.com/AFNetworking/AFNetworking/pull/382",
      "number": 382,
      "merged": false,
      "title": "added setImageWithURLRequest:placeholderImage:progress:success:failure:",
      "id": 1625556,
      "opened_by": 297194,
      "body": "added `setImageWithURLRequest:placeholderImage:progress:success:failure:` into UIImageView category, which set download progress callback to image request operation, and modified `setImageWithURLRequest:placeholderImage:success:failure:` to call `setImageWithURLRequest:placeholderImage:progress:success:failure:` with progress block of `nil`.",
      "mysql_id": 873336
    },
    "issue_events": [
      {
        "created_at": 1340351968,
        "actor_id": 297194,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "18345078"
      },
      {
        "created_at": 1340640540,
        "actor_id": 2427,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "18518144"
      },
      {
        "created_at": 1340640540,
        "actor_id": 2427,
        "action": "closed",
        "action_specific": null,
        "event_id": "18518145"
      },
      {
        "created_at": 1347342919,
        "actor_id": 2427,
        "action": "referenced",
        "action_specific": null,
        "event_id": "24345401"
      }
    ],
    "issue_comments": [
      {
        "created_at": 1340640540,
        "user_id": 2427,
        "comment_id": "6548168",
        "body": "This is a cool idea. \n\nI've actually been thinking about this on a larger scale, in which there's an extension on `UIProgressView` to add a `requestOperation` property whose download or upload completion determines the % complete automatically. In this case, the solution would be for the `UIImageView` category to expose its active `requestOperation` in a property, and link the two thusly.\n\nI'll be outlining this as a roadmap for 2.0 soon. Cheers!"
      },
      {
        "created_at": 1373517459,
        "user_id": 297194,
        "comment_id": "20786739",
        "body": "@mattt `UIProgressView` extension you've mentioned above will be included 2.0? just curiosity =)"
      },
      {
        "created_at": 1373517781,
        "user_id": 297194,
        "comment_id": "20786875",
        "body": "@mattt I've found this commit https://github.com/AFNetworking/AFNetworking/commit/5e59e8b088383f861b20f02a1aef57ea078e0284 =) I'm really looking forward to using 2.0!"
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1340358744,
        "author_id": 297194,
        "sha": "b53d67f8f92b0d8411c88504927a0ee23a4dedd3",
        "id": 4863763,
        "committer_id": 297194,
        "comments": []
      }
    ]
  },
  "873340": {
    "authors": [
      72578
    ],
    "num_watchers": 8862,
    "id": 873340,
    "org_owned": true,
    "relevant_users": {
      "2427": {
        "country_code": "us",
        "is_project_member": {
          "created_at": 1352489170,
          "corrected_created_at": 1307211291,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": "Portland, OR",
        "company": "Heroku",
        "login": "mattt",
        "fake": 0,
        "state": "Oregon",
        "created_at": 1208409534,
        "id": 2427,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "Portland"
      },
      "72578": {
        "country_code": "kr",
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": "Seoul, Korea",
        "company": "Wizet Corporation",
        "login": "dittos",
        "fake": 0,
        "state": "서울",
        "created_at": 1205050897,
        "id": 72578,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "서울"
      }
    },
    "project": {
      "full_name": "AFNetworking/AFNetworking",
      "created_at": 1306884524,
      "description": "A delightful iOS and OS X networking framework",
      "html_url": "https://github.com/AFNetworking/AFNetworking",
      "num_forks": 500,
      "name": "AFNetworking",
      "id": 1828795,
      "language": "Objective-C",
      "mysql_id": 1273
    },
    "owner": 7315,
    "pull_request": {
      "created_at": 1340291998,
      "issue_id": 381,
      "html_url": "https://github.com/AFNetworking/AFNetworking/pull/381",
      "number": 381,
      "merged": true,
      "title": "AFHTTPClient adds an unnecessary data when constructing a multipart request with nil parameters",
      "id": 1618096,
      "opened_by": 72578,
      "body": "If `nil` is passed to `parameters` argument, `multipartFormRequestWithMethod:path:parameters:constructingBodyWithBlock:` adds an unnessecary form data.\nIt is caused by `AFQueryStringComponentsFromKeyAndValue(nil, nil)` returning a NSArray containing one garbage AFQueryStringComponent object.",
      "mysql_id": 873340
    },
    "issue_events": [
      {
        "created_at": 1340291998,
        "actor_id": 72578,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "18270715"
      },
      {
        "created_at": 1340310076,
        "actor_id": 2427,
        "action": "referenced",
        "action_specific": "af406e41038eb465ab2f79980b15a0529dd7a473",
        "event_id": "18303895"
      },
      {
        "created_at": 1340310076,
        "actor_id": 2427,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "18303896"
      },
      {
        "created_at": 1340310076,
        "actor_id": 2427,
        "action": "merged",
        "action_specific": "af406e41038eb465ab2f79980b15a0529dd7a473",
        "event_id": "18303897"
      },
      {
        "created_at": 1340310076,
        "actor_id": 2427,
        "action": "closed",
        "action_specific": null,
        "event_id": "18303899"
      },
      {
        "created_at": 1344876119,
        "actor_id": 422620,
        "action": "referenced",
        "action_specific": "58509e9a14453ac035a19aa18b0f4c5cf228b7d1",
        "event_id": "22579585"
      }
    ],
    "issue_comments": [
      {
        "created_at": 1340310095,
        "user_id": 2427,
        "comment_id": "6490418",
        "body": "Good call. Thanks for the patch—I really appreciate it."
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1340298784,
        "author_id": 72578,
        "sha": "61047bac769b12fcb1444689c8c6e8ca2a4f6433",
        "id": 352015,
        "committer_id": 72578,
        "comments": []
      }
    ]
  },
  "873349": {
    "authors": [
      135985
    ],
    "num_watchers": 8862,
    "id": 873349,
    "org_owned": false,
    "relevant_users": {
      "135985": {
        "country_code": "py",
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": "Paraguay",
        "company": null,
        "login": "roskoff",
        "fake": 0,
        "state": null,
        "created_at": 1221869813,
        "id": 135985,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": null
      },
      "877146": {
        "country_code": "hn",
        "is_project_member": {
          "created_at": 1295653148,
          "ext_ref_id": "50cbdb7fedecb5152000107a"
        },
        "type": "USR",
        "deleted": 0,
        "location": "Tegucigalpa, Honduras",
        "company": "Revls",
        "login": "alejandro",
        "fake": 0,
        "state": "Francisco Morazán",
        "created_at": 1293770310,
        "id": 877146,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "Tegucigalpa"
      }
    },
    "project": {
      "full_name": "nodester/nodester",
      "created_at": 1295656748,
      "description": "Open Source Node.js Hosting Platform",
      "html_url": "https://github.com/nodester/nodester",
      "num_forks": 60,
      "name": "nodester",
      "id": 1279680,
      "language": "JavaScript",
      "mysql_id": 33605
    },
    "owner": 97869,
    "pull_request": {
      "created_at": 1339105550,
      "issue_id": 387,
      "html_url": "https://github.com/nodester/nodester/pull/387",
      "number": 387,
      "merged": true,
      "title": "Typo on default secretkey for git clone",
      "id": 1516722,
      "opened_by": 135985,
      "body": "Just a little typo fixed to prevent clone errors if default key is not updated when installing.",
      "mysql_id": 873349
    },
    "issue_events": [
      {
        "created_at": 1339105550,
        "actor_id": 135985,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "17203442"
      },
      {
        "created_at": 1339108310,
        "actor_id": 877146,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "17207910"
      },
      {
        "created_at": 1339108313,
        "actor_id": 877146,
        "action": "closed",
        "action_specific": null,
        "event_id": "17207919"
      },
      {
        "created_at": 1339108317,
        "actor_id": 877146,
        "action": "reopened",
        "action_specific": null,
        "event_id": "17207922"
      },
      {
        "created_at": 1339108333,
        "actor_id": 877146,
        "action": "referenced",
        "action_specific": "d0498324991b8987cebc6eaf657c737777e5d15b",
        "event_id": "17207940"
      },
      {
        "created_at": 1339108333,
        "actor_id": 877146,
        "action": "merged",
        "action_specific": "d0498324991b8987cebc6eaf657c737777e5d15b",
        "event_id": "17207941"
      },
      {
        "created_at": 1339108333,
        "actor_id": 877146,
        "action": "closed",
        "action_specific": null,
        "event_id": "17207942"
      }
    ],
    "issue_comments": [
      {
        "created_at": 1339108310,
        "user_id": 877146,
        "comment_id": "6187158",
        "body": "Good catch! Merging"
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1339112566,
        "author_id": 135985,
        "sha": "df3a27e04cc219037ae03d23ed5caed7a6b01941",
        "id": 890559,
        "committer_id": 135985,
        "comments": []
      }
    ]
  },
  "873360": {
    "authors": [
      2427
    ],
    "num_watchers": 8862,
    "id": 873360,
    "org_owned": true,
    "relevant_users": {
      "2427": {
        "country_code": "us",
        "is_project_member": {
          "created_at": 1352489170,
          "corrected_created_at": 1307211291,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": "Portland, OR",
        "company": "Heroku",
        "login": "mattt",
        "fake": 0,
        "state": "Oregon",
        "created_at": 1208409534,
        "id": 2427,
        "num_prior_commits": 185,
        "is_owner_member": false,
        "city": "Portland"
      },
      "27349": {
        "country_code": "us",
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": "New York",
        "company": null,
        "login": "pierrevalade",
        "fake": 0,
        "state": "New York",
        "created_at": 1211463626,
        "id": 27349,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "NYC"
      }
    },
    "project": {
      "full_name": "AFNetworking/AFNetworking",
      "created_at": 1306884524,
      "description": "A delightful iOS and OS X networking framework",
      "html_url": "https://github.com/AFNetworking/AFNetworking",
      "num_forks": 500,
      "name": "AFNetworking",
      "id": 1828795,
      "language": "Objective-C",
      "mysql_id": 1273
    },
    "owner": 7315,
    "pull_request": {
      "created_at": 1339631349,
      "issue_id": 376,
      "html_url": "https://github.com/AFNetworking/AFNetworking/pull/376",
      "number": 376,
      "merged": true,
      "title": "Automatically use HTTP pipelining for GET and HEAD requests in AFHTTPClient",
      "id": 1560163,
      "opened_by": 2427,
      "body": "Based on the suggestions in a WWDC session about networking, I'm starting to reconsider my original position on HTTP pipelining. There are some servers that don't support it, but for those that do, the performance benefit has been reported up to 3x speed improvement.\n\nHTTP pipelining is already enabled by default on image requests, and we've yet to have any reports about that causing a problem.\n\nThis patch enables pipelining by default for requests using the almost-definitely-always-idempotent methods GET and HEAD.\n\nDoes this sound reasonable? Is there any strong reason why this shouldn't be done?",
      "mysql_id": 873360
    },
    "issue_events": [
      {
        "created_at": 1339631349,
        "actor_id": 2427,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "17654331"
      },
      {
        "created_at": 1340136525,
        "actor_id": 2427,
        "action": "referenced",
        "action_specific": "d1e993f1fd72c172f27be8270d9b90f557d1b9ef",
        "event_id": "18089145"
      },
      {
        "created_at": 1340136525,
        "actor_id": 2427,
        "action": "merged",
        "action_specific": "d1e993f1fd72c172f27be8270d9b90f557d1b9ef",
        "event_id": "18089147"
      },
      {
        "created_at": 1340136525,
        "actor_id": 2427,
        "action": "closed",
        "action_specific": null,
        "event_id": "18089148"
      },
      {
        "created_at": 1344876119,
        "actor_id": 422620,
        "action": "referenced",
        "action_specific": "816feed5ce9e243b0497ba3413e9aac011636547",
        "event_id": "22579584"
      },
      {
        "created_at": 1348015472,
        "actor_id": 108861,
        "action": "referenced",
        "action_specific": "db6937f5397c0023ce301d6c56d01b2b39526fb1",
        "event_id": "24907815"
      }
    ],
    "issue_comments": [
      {
        "created_at": 1340136520,
        "user_id": 2427,
        "comment_id": "6432914",
        "body": "No objections? Alright, merging this in."
      },
      {
        "created_at": 1355773243,
        "user_id": 27349,
        "comment_id": "11446509",
        "body": "As of #528, HTTP pipelining is now OFF by default."
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1339638286,
        "author_id": 2427,
        "sha": "af991546949bb02f533886b71f76a6937fdf20df",
        "id": 352036,
        "committer_id": 2427,
        "comments": []
      }
    ]
  },
  "873367": {
    "authors": [
      13851,
      81556
    ],
    "num_watchers": 8862,
    "id": 873367,
    "org_owned": true,
    "relevant_users": {
      "2427": {
        "country_code": "us",
        "is_project_member": {
          "created_at": 1352489170,
          "corrected_created_at": 1307211291,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": "Portland, OR",
        "company": "Heroku",
        "login": "mattt",
        "fake": 0,
        "state": "Oregon",
        "created_at": 1208409534,
        "id": 2427,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "Portland"
      },
      "7059": {
        "country_code": "at",
        "is_project_member": {
          "created_at": 1338326439,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": "Vienna, Austria",
        "company": "I make iOS apps that are lickable. Love to rant on startups. Speaker. Developer of http://pspdfkit.com.",
        "login": "steipete",
        "fake": 0,
        "state": "Wien",
        "created_at": 1235738062,
        "id": 7059,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "Wien"
      },
      "13851": {
        "country_code": "us",
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": "San Francisco",
        "company": "Velos Mobile",
        "login": "asmallteapot",
        "fake": 0,
        "state": "California",
        "created_at": 1231787738,
        "id": 13851,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "SF"
      },
      "35991": {
        "country_code": null,
        "is_project_member": {
          "created_at": 1343075576,
          "corrected_created_at": 1335395320,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": null,
        "company": null,
        "login": "tewha",
        "fake": 0,
        "state": null,
        "created_at": 1248391412,
        "id": 35991,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": null
      },
      "81556": {
        "country_code": "us",
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": "Philadelphia, PA",
        "company": null,
        "login": "abrahamvegh",
        "fake": 0,
        "state": "penna",
        "created_at": 1234234876,
        "id": 81556,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "Philadelphia"
      }
    },
    "project": {
      "full_name": "AFNetworking/AFNetworking",
      "created_at": 1306884524,
      "description": "A delightful iOS and OS X networking framework",
      "html_url": "https://github.com/AFNetworking/AFNetworking",
      "num_forks": 500,
      "name": "AFNetworking",
      "id": 1828795,
      "language": "Objective-C",
      "mysql_id": 1273
    },
    "owner": 7315,
    "pull_request": {
      "created_at": 1339620589,
      "issue_id": 375,
      "html_url": "https://github.com/AFNetworking/AFNetworking/pull/375",
      "number": 375,
      "merged": false,
      "title": "Restore support for non-GCC compilers in AFNetworkActivityIndicatorManager.",
      "id": 1558337,
      "opened_by": 13851,
      "body": "Does what it says on the tin. Fixes issue #364.",
      "mysql_id": 873367
    },
    "issue_events": [
      {
        "created_at": 1339620589,
        "actor_id": 13851,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "17636778"
      },
      {
        "created_at": 1339621156,
        "actor_id": 7059,
        "action": "mentioned",
        "action_specific": null,
        "event_id": "17637699"
      },
      {
        "created_at": 1339621156,
        "actor_id": 7059,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "17637700"
      },
      {
        "created_at": 1339621156,
        "actor_id": 2427,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "17637701"
      },
      {
        "created_at": 1339631208,
        "actor_id": 81556,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "17653980"
      },
      {
        "created_at": 1339631772,
        "actor_id": 7059,
        "action": "mentioned",
        "action_specific": null,
        "event_id": "17654926"
      },
      {
        "created_at": 1339647056,
        "actor_id": 148973,
        "action": "mentioned",
        "action_specific": null,
        "event_id": "17669177"
      },
      {
        "created_at": 1339647056,
        "actor_id": 148973,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "17669178"
      },
      {
        "created_at": 1339696262,
        "actor_id": 2427,
        "action": "referenced",
        "action_specific": "a0f592c23a7d291304b82ab30de3a58ea2654ddd",
        "event_id": "17721198"
      },
      {
        "created_at": 1339696338,
        "actor_id": 2427,
        "action": "closed",
        "action_specific": null,
        "event_id": "17721334"
      },
      {
        "created_at": 1339737118,
        "actor_id": 35991,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "17775331"
      },
      {
        "created_at": 1340606454,
        "actor_id": 168594,
        "action": "referenced",
        "action_specific": "210e119d14d1ef8f8310289467bc343eb176ec1c",
        "event_id": "18485535"
      },
      {
        "created_at": 1340606454,
        "actor_id": 168594,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "18485536"
      },
      {
        "created_at": 1344876119,
        "actor_id": 422620,
        "action": "referenced",
        "action_specific": "0b837e07e1a989ac51a70203e9cfbd88c4126083",
        "event_id": "22579583"
      },
      {
        "created_at": 1348015472,
        "actor_id": 108861,
        "action": "referenced",
        "action_specific": "6f400484ca51e7ab4c65273ee2a56e964019cc03",
        "event_id": "24907814"
      }
    ],
    "issue_comments": [
      {
        "created_at": 1339621156,
        "user_id": 2427,
        "comment_id": "6310168",
        "body": "Wow, is that seriously what it takes to do an atomic integer swap these days? Thanks for sending this patch. Thoughts, @steipete, et al?"
      },
      {
        "created_at": 1339621291,
        "user_id": 13851,
        "comment_id": "6310228",
        "body": "We could technically do without the fallback for non-GCC compilers, but I figure it’s best to just cover everything. Rewriting it as a macro might make a bit more sense."
      },
      {
        "created_at": 1339631208,
        "user_id": 81556,
        "comment_id": "6314617",
        "body": "Aside from the missing semicolon, this is golden in Xcode 3’s GCC."
      },
      {
        "created_at": 1339631772,
        "user_id": 13851,
        "comment_id": "6314861",
        "body": "Good catch. Thanks, Abraham.\n\n@steipete, I think we should definitely be using that instead of my naïve fallback implementation; but it would be nice to use compiler optimizations if they're available. Do you think it would make sense to make this entire block a macro, and use it in both places?"
      },
      {
        "created_at": 1339632911,
        "user_id": 7059,
        "comment_id": "6315317",
        "body": "Yes, I'm all for the more modern calls. Let's do a macro on this, sounds like a good idea!"
      },
      {
        "created_at": 1339647056,
        "user_id": 13851,
        "comment_id": "6318883",
        "body": "Rewrote methods that touch `activityCount` to do regular assignments inside `@synchronized(self)` blocks, per @calebmdavenport’s advice. The iOS example is still working, but if someone who’s actually used it before could take a look, that’d be great."
      },
      {
        "created_at": 1339696338,
        "user_id": 2427,
        "comment_id": "6332561",
        "body": "Awesome. I totally forgot `@synchronized` was a thing :p\n\nI squashed and merged everything in a0f592c23a7d291304b82ab30de3a58ea2654ddd. Thanks!"
      },
      {
        "created_at": 1339737118,
        "user_id": 35991,
        "comment_id": "6348646",
        "body": "Ha. I assumed you were avoiding @sycnrhonized for some reason. Next time I'll speak up sooner."
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1339654014,
        "author_id": 13851,
        "sha": "bd2b8f85967d2404db21550eb6faf6d482541b08",
        "id": 6074273,
        "committer_id": 13851,
        "comments": []
      },
      {
        "created_at": 1339653833,
        "author_id": 13851,
        "sha": "db2f7e592d9c6d4fbcb746596e633195e41c16e3",
        "id": 6074287,
        "committer_id": 13851,
        "comments": []
      },
      {
        "created_at": 1339638665,
        "author_id": 13851,
        "sha": "1a8b41207a16dd08a57d04129f4f032c5ae0727c",
        "id": 6074291,
        "committer_id": 13851,
        "comments": []
      },
      {
        "created_at": 1339627599,
        "author_id": 13851,
        "sha": "3c7df44fb9176a8f5f9dbc3a6405290f1165e484",
        "id": 6074299,
        "committer_id": 13851,
        "comments": []
      },
      {
        "created_at": 1339638503,
        "author_id": 81556,
        "sha": "e1a347bf8b150a8b75a924615b1b3436d838ea94",
        "id": 6074314,
        "committer_id": 81556,
        "comments": []
      }
    ]
  },
  "873385": {
    "authors": [
      5920
    ],
    "num_watchers": 8862,
    "id": 873385,
    "org_owned": false,
    "relevant_users": {
      "5920": {
        "country_code": "de",
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": "Hamburg, DE",
        "company": "NETEYE",
        "login": "fgnass",
        "fake": 0,
        "state": "Hamburg",
        "created_at": 1243504718,
        "id": 5920,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "Hamburg"
      },
      "877146": {
        "country_code": "hn",
        "is_project_member": {
          "created_at": 1295653148,
          "ext_ref_id": "50cbdb7fedecb5152000107a"
        },
        "type": "USR",
        "deleted": 0,
        "location": "Tegucigalpa, Honduras",
        "company": "Revls",
        "login": "alejandro",
        "fake": 0,
        "state": "Francisco Morazán",
        "created_at": 1293770310,
        "id": 877146,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "Tegucigalpa"
      }
    },
    "project": {
      "full_name": "nodester/nodester",
      "created_at": 1295656748,
      "description": "Open Source Node.js Hosting Platform",
      "html_url": "https://github.com/nodester/nodester",
      "num_forks": 60,
      "name": "nodester",
      "id": 1279680,
      "language": "JavaScript",
      "mysql_id": 33605
    },
    "owner": 97869,
    "pull_request": {
      "created_at": 1336687585,
      "issue_id": 372,
      "html_url": "https://github.com/nodester/nodester/pull/372",
      "number": 372,
      "merged": true,
      "title": "run `npm install` upon push",
      "id": 1328896,
      "opened_by": 5920,
      "body": "",
      "mysql_id": 873385
    },
    "issue_events": [
      {
        "created_at": 1336687585,
        "actor_id": 5920,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "15213567"
      },
      {
        "created_at": 1336707212,
        "actor_id": 877146,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "15234906"
      },
      {
        "created_at": 1336804566,
        "actor_id": 877146,
        "action": "referenced",
        "action_specific": "74d2e24a1e04e58903f6fd24222652a527a1efed",
        "event_id": "15321825"
      },
      {
        "created_at": 1336804566,
        "actor_id": 877146,
        "action": "merged",
        "action_specific": "74d2e24a1e04e58903f6fd24222652a527a1efed",
        "event_id": "15321826"
      },
      {
        "created_at": 1336804566,
        "actor_id": 877146,
        "action": "closed",
        "action_specific": null,
        "event_id": "15321827"
      }
    ],
    "issue_comments": [
      {
        "created_at": 1336707212,
        "user_id": 877146,
        "comment_id": "5641061",
        "body": "This is cool! The only thing that make me thing is about permissions, because the processes belong to other user after the post-receive hook, so any other future action via API will end with problems.\r\n\r\nBy default all the modules are installed in a [different directory](https://github.com/nodester/nodester/blob/master/lib/npm.js#L81), so when you update packages via `nodester npm`  the updates are going to be to that directory. What we can do is to make another `cURL`  call to the api. But let me run some tests and maybe this can work :)"
      },
      {
        "created_at": 1336734056,
        "user_id": 5920,
        "comment_id": "5646601",
        "body": "Okay, so we have:\r\n\r\n__app_user_home__ aka `<repo-id>_rw` owned by _nodester:nodester_\r\nand __app_user_npm_home__ aka `<repo-id>` (without any suffix) owned by _git:git_\r\n\r\nThe post-receive hook puts the modules in the latter one, whereas the API-managed modules end up in the `<repo-id>_rw` directory, right?\r\n\r\n... unless `force` is true -- then the nodester app will also use the   __app_user_npm_home__ dir.\r\n\r\nOkay, color me confused ;)\r\n\r\nI thought the `_rw` directory was for application data (that persists across deployments), while the other one was for the versioned code. Hence putting the node_modules alongside git-managed code sounds quite reasonable to me.\r\n\r\nJust to get the big picture, what was the intention behind exposing npm via the API in the first place? Is there a use case where one wants to manually manage the dependencies, possibly diverging from the ones listed in package.json?\r\n"
      },
      {
        "created_at": 1336804515,
        "user_id": 877146,
        "comment_id": "5665234",
        "body": "> I thought the _rw directory was for application data (that persists across deployments), while the other one was for the versioned code. \n\nYou got me there. That's true. I'll merge this, and we are going to eliminate the \"force\" param, since now it's doesn't have any use. What I am thinking now is what about those modules who are patched by the user. The `npm install` will override those changes? I think it will. Let's see how this go :)\n\nThanks again."
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1336694629,
        "author_id": 5920,
        "sha": "05b912fa22c89fd8b512422f023943f3008e3770",
        "id": 890581,
        "committer_id": 5920,
        "comments": []
      }
    ]
  },
  "873387": {
    "authors": [
      72580
    ],
    "num_watchers": 8862,
    "id": 873387,
    "org_owned": true,
    "relevant_users": {
      "2427": {
        "country_code": "us",
        "is_project_member": {
          "created_at": 1352489170,
          "corrected_created_at": 1307211291,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": "Portland, OR",
        "company": "Heroku",
        "login": "mattt",
        "fake": 0,
        "state": "Oregon",
        "created_at": 1208409534,
        "id": 2427,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "Portland"
      },
      "72580": {
        "country_code": null,
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": null,
        "company": null,
        "login": "AMETCFUR",
        "fake": 1,
        "state": null,
        "created_at": 1344050033,
        "id": 72580,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": null
      }
    },
    "project": {
      "full_name": "AFNetworking/AFNetworking",
      "created_at": 1306884524,
      "description": "A delightful iOS and OS X networking framework",
      "html_url": "https://github.com/AFNetworking/AFNetworking",
      "num_forks": 500,
      "name": "AFNetworking",
      "id": 1828795,
      "language": "Objective-C",
      "mysql_id": 1273
    },
    "owner": 7315,
    "pull_request": {
      "created_at": 1339192199,
      "issue_id": 369,
      "html_url": "https://github.com/AFNetworking/AFNetworking/pull/369",
      "number": 369,
      "merged": true,
      "title": "Possible bugfix",
      "id": 1526059,
      "opened_by": 53316,
      "body": "I've found that image downloading may contain some kind of bug. There is a possibility to provide image post-processing block which is called to modify image after downloading. After applying this block, success block is called in main queue and it's hardcoded. However, there is a possibility to set a separate queue for success block calling and I think it definitely should be taken into account while calling success block after image post processing is done.\nWhat do you think?",
      "mysql_id": 873387
    },
    "issue_events": [
      {
        "created_at": 1339192199,
        "actor_id": 53316,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "17295768"
      },
      {
        "created_at": 1339257157,
        "actor_id": 2427,
        "action": "merged",
        "action_specific": "91d46140287887daef7fab2796a0735c45cb7d6f",
        "event_id": "17328050"
      },
      {
        "created_at": 1339257157,
        "actor_id": 2427,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "17328051"
      },
      {
        "created_at": 1339257158,
        "actor_id": 2427,
        "action": "closed",
        "action_specific": null,
        "event_id": "17328052"
      }
    ],
    "issue_comments": [
      {
        "created_at": 1339257225,
        "user_id": 2427,
        "comment_id": "6219929",
        "body": "Not exactly a bug fix, per se, but certainly a welcome change that is consistent with how it should have worked. I merged in your change along with the corresponding fix for UIImage callback. Thanks!"
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1339199082,
        "author_id": 72580,
        "sha": "91d46140287887daef7fab2796a0735c45cb7d6f",
        "id": 352060,
        "committer_id": 72580,
        "comments": []
      }
    ]
  },
  "873396": {
    "authors": [
      2427
    ],
    "num_watchers": 8862,
    "id": 873396,
    "org_owned": true,
    "relevant_users": {
      "2427": {
        "country_code": "us",
        "is_project_member": {
          "created_at": 1352489170,
          "corrected_created_at": 1307211291,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": "Portland, OR",
        "company": "Heroku",
        "login": "mattt",
        "fake": 0,
        "state": "Oregon",
        "created_at": 1208409534,
        "id": 2427,
        "num_prior_commits": 176,
        "is_owner_member": false,
        "city": "Portland"
      },
      "73457": {
        "country_code": null,
        "is_project_member": {
          "created_at": 1350321589,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": null,
        "company": "HAKORE",
        "login": "krzak",
        "fake": 0,
        "state": null,
        "created_at": 1304042197,
        "id": 73457,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": null
      },
      "429313": {
        "country_code": "us",
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": "Stanford, CA, USA",
        "company": "Instagram",
        "login": "alexkarpenko",
        "fake": 0,
        "state": "California",
        "created_at": 1311465652,
        "id": 429313,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": null
      },
      "534047": {
        "country_code": "us",
        "is_project_member": {
          "created_at": 1342769533,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": "Los Angeles",
        "company": null,
        "login": "lansing",
        "fake": 0,
        "state": "California",
        "created_at": 1206996992,
        "id": 534047,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "LA"
      },
      "885033": {
        "country_code": "us",
        "is_project_member": {
          "created_at": 1316480948,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": "San Francisco",
        "company": "Two Tap",
        "login": "sradu",
        "fake": 0,
        "state": "California",
        "created_at": 1241740738,
        "id": 885033,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "SF"
      },
      "1100111": {
        "country_code": null,
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": null,
        "company": null,
        "login": "qiulang",
        "fake": 0,
        "state": null,
        "created_at": 1291914913,
        "id": 1100111,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": null
      }
    },
    "project": {
      "full_name": "AFNetworking/AFNetworking",
      "created_at": 1306884524,
      "description": "A delightful iOS and OS X networking framework",
      "html_url": "https://github.com/AFNetworking/AFNetworking",
      "num_forks": 500,
      "name": "AFNetworking",
      "id": 1828795,
      "language": "Objective-C",
      "mysql_id": 1273
    },
    "owner": 7315,
    "pull_request": {
      "created_at": 1338920096,
      "issue_id": 368,
      "html_url": "https://github.com/AFNetworking/AFNetworking/pull/368",
      "number": 368,
      "merged": true,
      "title": "Multipart Upload Streaming",
      "id": 1495709,
      "opened_by": 2427,
      "body": "This was something I tried (unsuccessfully) to implement back in #177, and seem to finally have gotten working this time around. \n\nI successfully tested this on the Mac, but I'd like some more testing and feedback—especially on the iPhone, which benefits the most from this approach.\n\n## Why is this cool? \n\nNormally, when `AFHTTPClient -multipartFormRequestWithMethod:path:parameters:constructingBodyWithBlock:` is called, the URL request is built up in memory. If you're trying to upload anything significant (even a several-megabyte image), this can have a serious performance impact, to the point of crashing the app. \n\nBy writing the form request to a temp file on disk, we not only avoid the memory overhead, but get HTTP body streaming as well. Perhaps the best part is that this implementation doesn't change the public API at all.\n\nI haven't noticed this myself, but the only way this could negatively affect performance compared to the current approach would be for small multipart requests that could be stored in-memory. I don't think this will be as much of an issue, and is worth the tradeoff for massively-improved performance on large requests.\n\n## What Can I Do To Help?\n\nAgain, I'd love to get confirmation that this approach is stable on iOS apps. Any feedback on the implementation would be appreciated as well.",
      "mysql_id": 873396
    },
    "issue_events": [
      {
        "created_at": 1338920096,
        "actor_id": 2427,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "16992200"
      },
      {
        "created_at": 1338920147,
        "actor_id": 885033,
        "action": "mentioned",
        "action_specific": null,
        "event_id": "16992268"
      },
      {
        "created_at": 1338920147,
        "actor_id": 885033,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "16992269"
      },
      {
        "created_at": 1338920147,
        "actor_id": 7059,
        "action": "mentioned",
        "action_specific": null,
        "event_id": "16992270"
      },
      {
        "created_at": 1338920147,
        "actor_id": 7059,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "16992271"
      },
      {
        "created_at": 1338920147,
        "actor_id": 215625,
        "action": "mentioned",
        "action_specific": null,
        "event_id": "16992272"
      },
      {
        "created_at": 1338920147,
        "actor_id": 215625,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "16992273"
      },
      {
        "created_at": 1338926040,
        "actor_id": 2427,
        "action": "mentioned",
        "action_specific": null,
        "event_id": "17001345"
      },
      {
        "created_at": 1339431540,
        "actor_id": 2427,
        "action": "referenced",
        "action_specific": "20711964506560cfdd6433349e0779fb96b8e92a",
        "event_id": "17409357"
      },
      {
        "created_at": 1339431540,
        "actor_id": 2427,
        "action": "merged",
        "action_specific": "20711964506560cfdd6433349e0779fb96b8e92a",
        "event_id": "17409362"
      },
      {
        "created_at": 1339431541,
        "actor_id": 2427,
        "action": "closed",
        "action_specific": null,
        "event_id": "17409367"
      },
      {
        "created_at": 1339431745,
        "actor_id": 2427,
        "action": "referenced",
        "action_specific": null,
        "event_id": "17409744"
      },
      {
        "created_at": 1339504820,
        "actor_id": 1100111,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "17489984"
      },
      {
        "created_at": 1339521652,
        "actor_id": 885033,
        "action": "mentioned",
        "action_specific": null,
        "event_id": "17512283"
      },
      {
        "created_at": 1339572848,
        "actor_id": 885033,
        "action": "mentioned",
        "action_specific": null,
        "event_id": "17575149"
      },
      {
        "created_at": 1339572848,
        "actor_id": 534047,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "17575150"
      },
      {
        "created_at": 1339574295,
        "actor_id": 885033,
        "action": "mentioned",
        "action_specific": null,
        "event_id": "17575935"
      },
      {
        "created_at": 1339631678,
        "actor_id": 2427,
        "action": "referenced",
        "action_specific": "286b8100c5678b2fcc241c7e1b177e9c0ae79a0e",
        "event_id": "17654802"
      },
      {
        "created_at": 1339631819,
        "actor_id": 885033,
        "action": "mentioned",
        "action_specific": null,
        "event_id": "17654992"
      },
      {
        "created_at": 1339631819,
        "actor_id": 534047,
        "action": "mentioned",
        "action_specific": null,
        "event_id": "17654993"
      },
      {
        "created_at": 1339632458,
        "actor_id": 2427,
        "action": "mentioned",
        "action_specific": null,
        "event_id": "17656092"
      },
      {
        "created_at": 1339633516,
        "actor_id": 2427,
        "action": "mentioned",
        "action_specific": null,
        "event_id": "17657531"
      },
      {
        "created_at": 1339747884,
        "actor_id": 429313,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "17780515"
      },
      {
        "created_at": 1340606454,
        "actor_id": 168594,
        "action": "referenced",
        "action_specific": "f20ef307aea742faf7a5a3aaa10ba3fe96c1c6de",
        "event_id": "18485533"
      },
      {
        "created_at": 1340606454,
        "actor_id": 168594,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "18485534"
      },
      {
        "created_at": 1344876119,
        "actor_id": 422620,
        "action": "referenced",
        "action_specific": "2f8bd35d67b351c0aa2b9f191e3cad815bf06ed6",
        "event_id": "22579581"
      },
      {
        "created_at": 1344876119,
        "actor_id": 422620,
        "action": "referenced",
        "action_specific": "1f7e9a15e51e6882f5c494da34c1fe51da7f01fc",
        "event_id": "22579582"
      },
      {
        "created_at": 1348015472,
        "actor_id": 108861,
        "action": "referenced",
        "action_specific": "47581b9642fb95df2887d05a58203a3b5b41c301",
        "event_id": "24907812"
      },
      {
        "created_at": 1348015472,
        "actor_id": 108861,
        "action": "referenced",
        "action_specific": "f505fa70afd0bd3e755860df99d322a6f269d5ac",
        "event_id": "24907813"
      }
    ],
    "issue_comments": [
      {
        "created_at": 1338920147,
        "user_id": 2427,
        "comment_id": "6129155",
        "body": "/cc @sradu @steipete @kcharwood"
      },
      {
        "created_at": 1338926040,
        "user_id": 885033,
        "comment_id": "6131669",
        "body": "I'll give it a try tomorrow. Thanks @mattt."
      },
      {
        "created_at": 1339387599,
        "user_id": 2427,
        "comment_id": "6234077",
        "body": "Initial reports give this a :+1:. I'll merge this in tomorrow unless there are any objections."
      },
      {
        "created_at": 1339504820,
        "user_id": 1100111,
        "comment_id": "6267472",
        "body": "I did some test on iphone 4 & iphone 4S. It works well. When my iphone  has only about 20~30M memory I tried to upload some file around 150M big and it worked very well (I tested it about 10 times). So after upload finished I checked memory again and found no big difference was caused. I even tested the case when my iphone has only 15M and I tried to upload a file about 120M and it worked well too.\n\nThe only \"problem\" I found so far is that when my iphone had more than 100M memory and I tried to upload files bigger than 100M, it will first eat up most of memory. Of course after that when I tried to upload another big file it all worked fine. \n\nSo it seems to me that upload streaming only kicked in when I have low memory case.  I test this scenario about 10 times, all the same."
      },
      {
        "created_at": 1339505977,
        "user_id": 885033,
        "comment_id": "6267689",
        "body": "I might have stumbled upon an error. If I create a request with multipartFormRequestWithMethod and don't append any data (basically I have an if (avatar) append formData) it creates a bad request.\n\nIn Rails I get:\n\n ERROR EOFError: bad content body\n\t/usr/local/lib/ruby/gems/1.8/gems/rack-1.3.6/lib/rack/multipart/parser.rb:118:in `get_current_head_and_filename_and_content_type_and_name_and_body'\n"
      },
      {
        "created_at": 1339520148,
        "user_id": 2427,
        "comment_id": "6272608",
        "body": "Ah yes, that would do it. That should check for zero-length body before adding that final boundary."
      },
      {
        "created_at": 1339521652,
        "user_id": 2427,
        "comment_id": "6273343",
        "body": "@sradu 6b9187b6c28cf8c013c06ba640c4c4cfec23450d should prevent bad requests from happening."
      },
      {
        "created_at": 1339521721,
        "user_id": 885033,
        "comment_id": "6273377",
        "body": "Thanks, that was really fast! I'll give it a try in a couple of hours."
      },
      {
        "created_at": 1339527534,
        "user_id": 885033,
        "comment_id": "6276121",
        "body": "Still not working. Same error:\n\n[2012-06-12 19:51:14] ERROR EOFError: bad content body\n\t/usr/local/lib/ruby/gems/1.8/gems/rack-1.3.6/lib/rack/multipart/parser.rb:118:in `get_current_head_and_filename_and_content_type_and_name_and_body'\n\n\n\n  NSMutableURLRequest *request = [[AFKinotopicAPIClient instance] multipartFormRequestWithMethod:@\"POST\" path:postPath parameters:params constructingBodyWithBlock: ^(id <AFMultipartFormData>formData) {\n    \n    if (avatarData) {\n      [formData appendPartWithFileData:avatarData name:@\"user[avatar]\" fileName:@\"avatar.jpg\" mimeType:@\"image/jpeg\"];\n    }\n  }];\n\nI've pasted a tcpflow dump here: https://gist.github.com/5bba887edf4942f4b1f8.\n\nIt seems not to add everything, the params objects contains other elements. And this stops at first_name."
      },
      {
        "created_at": 1339572848,
        "user_id": 534047,
        "comment_id": "6293299",
        "body": "@sradu Any chance your params dictionary contains values that are empty strings or would otherwise be converted to zero-length NSData objects when serialized for the form? \n\nI found that if -appendData: is called with a zero-length NSData, the [self.outputStream write] call in that method will close the output stream, causing future appendData: calls to fail silently.\n\nI fixed this in a patch I'm working on that also implements building multipart form data from an NSURL file source, using streams on the read side too. Any interest from the maintainers on a pull request for this?"
      },
      {
        "created_at": 1339574295,
        "user_id": 534047,
        "comment_id": "6293523",
        "body": "@sradu If it sounds like I'm on the right track for your issue, try using my changes to the appendData: method (bottom of the diff):\n\nhttps://github.com/lansing/AFNetworking/commit/d92462ef8cd2de0d9780e6979f382498dcf7cecb"
      },
      {
        "created_at": 1339631819,
        "user_id": 2427,
        "comment_id": "6314884",
        "body": "@sradu Per @lansing's suggestion, I've added the check for non-zero data length in 286b810.\n\n@lansing I don't think I understand what the use case would be for `appendPartWithStreamingURL:name:mimeType:`. Would you care to explain?"
      },
      {
        "created_at": 1339632458,
        "user_id": 534047,
        "comment_id": "6315135",
        "body": "@mattt Suppose you have a very large file on disk that you want to upload. The appendPartWithFileURL:name:error: implementation reads it into an NSData object before writing it back to the stream. My implementation reads the file in chunks so you never have the entire file in memory.\n\nBefore I wrote the code I checked the NSURLConnection docs to see if the [NSURLConnection sendSynchronousRequest:] call (where the file is read) would produce a mapped NSData object but I didn't see any mention of this. Please correct me if I'm wrong."
      },
      {
        "created_at": 1339633516,
        "user_id": 2427,
        "comment_id": "6315509",
        "body": "Ah, gotcha. Yeah, that's a good idea!\r\n\r\nIf that's always preferable to stream large files (as is the point of this pull request), then this should just replace the existing implementation of attaching a file.\r\n\r\nI just pushed a new implementation using this method to [this experimental branch](https://github.com/afnetworking/afnetworking/tree/experimental-stream-file-from-url). Let me know what you think! \r\n\r\nOn 2012/06/13, at 15:07, Max Lansing wrote:\r\n\r\n> @mattt Suppose you have a very large file on disk that you want to upload. The appendPartWithFileURL:name:error: implementation reads it into an NSData object before writing it back to the stream. My implementation reads the file in chunks so you never have the entire file in memory.\r\n> \r\n> Before I wrote the code I checked the NSURLConnection docs to see if the [NSURLConnection sendSynchronousRequest:] call (where the file is read) would produce a mapped NSData object but I didn't see any mention of this. Please correct me if I'm wrong.\r\n> \r\n> ---\r\n> Reply to this email directly or view it on GitHub:\r\n> https://github.com/AFNetworking/AFNetworking/pull/368#issuecomment-6315135"
      },
      {
        "created_at": 1339747884,
        "user_id": 429313,
        "comment_id": "6350068",
        "body": "It might be better to set HTTPBodyStream of NSURLRequest with a stream that is composed of NSInputStream attachements. That way you could attach multiple files (as NSInputStreams) and stream each one in turn. This would not require writing to a temporary file."
      },
      {
        "created_at": 1345637891,
        "user_id": 73457,
        "comment_id": "7930087",
        "body": "so... what sould be done to upload 3mb file? I still getting error about memory on 3g."
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1338926236,
        "author_id": 2427,
        "sha": "959ce14e4638d66997a3552589635bce7c638467",
        "id": 352050,
        "committer_id": 2427,
        "comments": []
      },
      {
        "created_at": 1338926187,
        "author_id": 2427,
        "sha": "90db2543d790d36f9842b37f602bac19d843eff7",
        "id": 352065,
        "committer_id": 2427,
        "comments": []
      }
    ]
  },
  "873416": {
    "authors": [
      72584
    ],
    "num_watchers": 8862,
    "id": 873416,
    "org_owned": true,
    "relevant_users": {
      "2427": {
        "country_code": "us",
        "is_project_member": {
          "created_at": 1352489170,
          "corrected_created_at": 1307211291,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": "Portland, OR",
        "company": "Heroku",
        "login": "mattt",
        "fake": 0,
        "state": "Oregon",
        "created_at": 1208409534,
        "id": 2427,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "Portland"
      },
      "72584": {
        "country_code": "se",
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": "Göteborg, Sweden",
        "company": "Acando",
        "login": "pal",
        "fake": 0,
        "state": "Västra Götalands län",
        "created_at": 1222639937,
        "id": 72584,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "Gbg"
      }
    },
    "project": {
      "full_name": "AFNetworking/AFNetworking",
      "created_at": 1306884524,
      "description": "A delightful iOS and OS X networking framework",
      "html_url": "https://github.com/AFNetworking/AFNetworking",
      "num_forks": 500,
      "name": "AFNetworking",
      "id": 1828795,
      "language": "Objective-C",
      "mysql_id": 1273
    },
    "owner": 7315,
    "pull_request": {
      "created_at": 1338545926,
      "issue_id": 359,
      "html_url": "https://github.com/AFNetworking/AFNetworking/pull/359",
      "number": 359,
      "merged": true,
      "title": "README: Set `-fno-objc-arc` for all files at once",
      "id": 1471845,
      "opened_by": 72584,
      "body": "This should make it a tad simpler to get started with AFNetworking.\n\nShort and sweet! :)",
      "mysql_id": 873416
    },
    "issue_events": [
      {
        "created_at": 1338545926,
        "actor_id": 72584,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "16727580"
      },
      {
        "created_at": 1338575915,
        "actor_id": 2427,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "16763540"
      },
      {
        "created_at": 1338575917,
        "actor_id": 2427,
        "action": "referenced",
        "action_specific": "ca4d700a810e11e08c0cc2c8b34ef2cf5aeaf867",
        "event_id": "16763542"
      },
      {
        "created_at": 1338575917,
        "actor_id": 2427,
        "action": "merged",
        "action_specific": "ca4d700a810e11e08c0cc2c8b34ef2cf5aeaf867",
        "event_id": "16763544"
      },
      {
        "created_at": 1338575917,
        "actor_id": 2427,
        "action": "closed",
        "action_specific": null,
        "event_id": "16763545"
      },
      {
        "created_at": 1344876119,
        "actor_id": 422620,
        "action": "referenced",
        "action_specific": "fbcf24805484f64ac3060fac685b468adde99f40",
        "event_id": "22579579"
      }
    ],
    "issue_comments": [
      {
        "created_at": 1338575915,
        "user_id": 2427,
        "comment_id": "6064741",
        "body": "Nice trick! Thanks for sharing!"
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1338553030,
        "author_id": 72584,
        "sha": "88277451d4156c595ce4f18f525ca925e7b7040d",
        "id": 352077,
        "committer_id": 72584,
        "comments": []
      }
    ]
  },
  "1282376": {
    "authors": [
      2576
    ],
    "num_watchers": 8862,
    "id": 1282376,
    "org_owned": true,
    "relevant_users": {
      "2576": {
        "country_code": "us",
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": "Portland, OR",
        "company": "Engine Yard",
        "login": "brixen",
        "fake": 0,
        "state": "Oregon",
        "created_at": 1201639675,
        "id": 2576,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "Portland"
      },
      "2723": {
        "country_code": "de",
        "is_project_member": {
          "created_at": 1331655506,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": "Berlin",
        "company": "Travis CI",
        "login": "rkh",
        "fake": 0,
        "state": "Berlin",
        "created_at": 1224708963,
        "id": 2723,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "Berlin"
      },
      "17068": {
        "country_code": null,
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": null,
        "company": null,
        "login": "ayosec",
        "fake": 0,
        "state": null,
        "created_at": 1228139192,
        "id": 17068,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": null
      },
      "69717": {
        "country_code": "gb",
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": "London, UK",
        "company": "notonthehighstreet.com",
        "login": "knaveofdiamonds",
        "fake": 0,
        "state": "England",
        "created_at": 1211564148,
        "id": 69717,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "London"
      },
      "78808": {
        "country_code": "de",
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": "Germany / Cologne",
        "company": "innoQ Deutschland GmbH",
        "login": "moonglum",
        "fake": 0,
        "state": "Nordrhein-Westfalen",
        "created_at": 1245140465,
        "id": 78808,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "Köln"
      },
      "93373": {
        "country_code": null,
        "is_project_member": false,
        "type": "USR",
        "deleted": 1,
        "location": "Amsterdam",
        "company": "Fitmo B.V",
        "login": "guusen",
        "fake": 0,
        "state": null,
        "created_at": 1317901126,
        "id": 93373,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": null
      }
    },
    "project": {
      "full_name": "euruko2012/call-for-proposals",
      "created_at": 1330538566,
      "description": "Want to submit a talk proposal for EuRuKo 2012? This is the place to be!",
      "html_url": "https://github.com/euruko2012/call-for-proposals",
      "num_forks": 83,
      "name": "call-for-proposals",
      "id": 3581682,
      "language": null,
      "mysql_id": 133757
    },
    "owner": 355586,
    "pull_request": {
      "created_at": 1330840372,
      "issue_id": 23,
      "html_url": "https://github.com/euruko2012/call-for-proposals/pull/23",
      "number": 23,
      "merged": false,
      "title": "Code Insight: Rubinius 2.0 and Nikita",
      "id": 924441,
      "opened_by": 2576,
      "body": "",
      "mysql_id": 1282376
    },
    "issue_events": [
      {
        "created_at": 1330840372,
        "actor_id": 2576,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "10688510"
      },
      {
        "created_at": 1330979733,
        "actor_id": 2723,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "10753563"
      },
      {
        "created_at": 1331607417,
        "actor_id": 93373,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "11244248"
      },
      {
        "created_at": 1332336850,
        "actor_id": 78808,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "11776646"
      },
      {
        "created_at": 1332360703,
        "actor_id": 17068,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "11804568"
      },
      {
        "created_at": 1333019136,
        "actor_id": 69717,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "12335659"
      }
    ],
    "issue_comments": [
      {
        "created_at": 1330979733,
        "user_id": 2723,
        "comment_id": "4326177",
        "body": ":+1:"
      },
      {
        "created_at": 1331607417,
        "user_id": 93373,
        "comment_id": "4464623",
        "body": ":+1:"
      },
      {
        "created_at": 1332336850,
        "user_id": 78808,
        "comment_id": "4614749",
        "body": ":+1: Yes, please!"
      },
      {
        "created_at": 1332360703,
        "user_id": 17068,
        "comment_id": "4622107",
        "body": "+1"
      },
      {
        "created_at": 1333019136,
        "user_id": 69717,
        "comment_id": "4800224",
        "body": "+1"
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1330840323,
        "author_id": 2576,
        "sha": "f1e0827307206b2d7e4a068e9de0fa2af3033f2c",
        "id": 25756059,
        "committer_id": 2576,
        "comments": []
      },
      {
        "created_at": 1330839839,
        "author_id": 2576,
        "sha": "203b007f9adf70dd3dd6c1885e7bc6ff995c6553",
        "id": 25756060,
        "committer_id": 2576,
        "comments": []
      }
    ]
  },
  "1397327": {
    "authors": [
      1441445
    ],
    "num_watchers": 8862,
    "id": 1397327,
    "org_owned": true,
    "relevant_users": {
      "66248": {
        "country_code": "us",
        "is_project_member": {
          "created_at": 1352362416,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": "Seattle, WA",
        "company": "Amazon Web Services",
        "login": "jeremeamia",
        "fake": 0,
        "state": "Washington",
        "created_at": 1248338502,
        "id": 66248,
        "num_prior_commits": 0,
        "is_owner_member": true,
        "city": "Seattle"
      },
      "1441445": {
        "country_code": null,
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": null,
        "company": null,
        "login": "WhiteSpace-Strippers",
        "fake": 0,
        "state": null,
        "created_at": 1358909586,
        "id": 1441445,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": null
      }
    },
    "project": {
      "full_name": "aws/aws-sdk-php",
      "created_at": 1350523712,
      "description": "Official repository of the AWS SDK for PHP. For more information on the AWS SDK for PHP, see our web site:",
      "html_url": "https://github.com/aws/aws-sdk-php",
      "num_forks": 66,
      "name": "aws-sdk-php",
      "id": 6269013,
      "language": "PHP",
      "mysql_id": 1350219
    },
    "owner": 931361,
    "pull_request": {
      "created_at": 1359353346,
      "issue_id": 36,
      "html_url": "https://github.com/aws/aws-sdk-php/pull/36",
      "number": 36,
      "merged": false,
      "title": "AUTOMATED: WhiteSpace Removal",
      "id": 3859547,
      "opened_by": 1441445,
      "body": "This is an automated request to remove excessive whitespace from source code. You can find more about this project and opt-out at [whitespacestrippers.com](http://whitespacestrippers.com/)",
      "mysql_id": 1397327
    },
    "issue_events": [
      {
        "created_at": 1359356464,
        "actor_id": 59449,
        "action": "closed",
        "action_specific": null,
        "event_id": "35764215"
      }
    ],
    "issue_comments": [
      {
        "created_at": 1359361012,
        "user_id": 66248,
        "comment_id": "12768155",
        "body": "Hmmm... interesting project, but no thanks."
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1359353340,
        "author_id": 1441445,
        "sha": "6d038fa4cc8f5c4e8809b1adf3b6f1d5f6ff72d5",
        "id": 26842737,
        "committer_id": 1441445,
        "comments": []
      }
    ]
  },
  "1397334": {
    "authors": [
      567178
    ],
    "num_watchers": 8862,
    "id": 1397334,
    "org_owned": false,
    "relevant_users": {
      "14945": {
        "country_code": null,
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": null,
        "company": null,
        "login": "lenzcom",
        "fake": 0,
        "state": null,
        "created_at": 1283346254,
        "id": 14945,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": null
      },
      "547251": {
        "country_code": "au",
        "is_project_member": {
          "created_at": 1358917066,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": "Sydney, Australia",
        "company": "TAQTIQA LLC",
        "login": "taqtiqa-mark",
        "fake": 0,
        "state": "New South Wales",
        "created_at": 1330073695,
        "id": 547251,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "Sydney"
      },
      "567178": {
        "country_code": null,
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": null,
        "company": null,
        "login": "HQJNXSVJ",
        "fake": 1,
        "state": null,
        "created_at": 1345614597,
        "id": 567178,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": null
      }
    },
    "project": {
      "full_name": "fesplugas/rbenv-installer",
      "created_at": 1415052070,
      "description": "Install rbenv and friends and update all of them when you want to ...",
      "html_url": "https://github.com/fesplugas/rbenv-installer",
      "num_forks": 17,
      "name": "rbenv-installer",
      "id": 2581356,
      "language": "Shell",
      "mysql_id": 20243
    },
    "owner": 66858,
    "pull_request": {
      "created_at": 1341934888,
      "issue_id": 6,
      "html_url": "https://github.com/fesplugas/rbenv-installer/pull/6",
      "number": 6,
      "merged": false,
      "title": "rbenv-sudo plugin added",
      "id": 1756283,
      "opened_by": 14945,
      "body": "just a small finetune",
      "mysql_id": 1397334
    },
    "issue_events": [
      {
        "created_at": 1341934888,
        "actor_id": 14945,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "19747709"
      },
      {
        "created_at": 1359722240,
        "actor_id": 66858,
        "action": "closed",
        "action_specific": null,
        "event_id": "36371151"
      }
    ],
    "issue_comments": [
      {
        "created_at": 1359361109,
        "user_id": 547251,
        "comment_id": "12768175",
        "body": "Hmm, not sure what happened then but this change is sitting as a pull request that is still open:\r\n\r\nhttps://github.com/fesplugas/rbenv-installer/pull/6"
      },
      {
        "created_at": 1359721611,
        "user_id": 14945,
        "comment_id": "12984936",
        "body": "ups... sorry for this, but that wasn't my intention. please close it."
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1340990243,
        "author_id": 567178,
        "sha": "199c194be89b203e035d03ea66d6a5d7304ff214",
        "id": 6592989,
        "committer_id": 567178,
        "comments": [
          {
            "comment_id": 2508272,
            "id": 438486,
            "user_id": 14945,
            "body": "thanks, nice hint",
            "created_at": 1359326549,
            "position": null,
            "line": null
          }
        ]
      }
    ]
  },
  "1397335": {
    "authors": [
      1441445
    ],
    "num_watchers": 8862,
    "id": 1397335,
    "org_owned": false,
    "relevant_users": {
      "2223": {
        "country_code": "de",
        "is_project_member": {
          "created_at": 1261674983,
          "ext_ref_id": "50c89b9bedecb535dd001ac7"
        },
        "type": "USR",
        "deleted": 0,
        "location": "Siegburg, Germany",
        "company": "thePHP.cc",
        "login": "sebastianbergmann",
        "fake": 0,
        "state": "Nordrhein-Westfalen",
        "created_at": 1221766206,
        "id": 2223,
        "num_prior_commits": 0,
        "is_owner_member": true,
        "city": "Siegburg"
      },
      "5619": {
        "country_code": "us",
        "is_project_member": {
          "created_at": 1361355990,
          "corrected_created_at": 1308160622,
          "ext_ref_id": "5126ab25bd3543f4a70002bd"
        },
        "type": "USR",
        "deleted": 0,
        "location": "Atlanta, GA",
        "company": "CoffeeCup Software, Inc.",
        "login": "whatthejeff",
        "fake": 0,
        "state": "Georgia",
        "created_at": 1276680675,
        "id": 5619,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "Atlanta"
      },
      "27651": {
        "country_code": "gb",
        "is_project_member": {
          "created_at": 1316727795,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": "London, England",
        "company": "Derick Rethans Ltd",
        "login": "derickr",
        "fake": 0,
        "state": "England",
        "created_at": 1266810320,
        "id": 27651,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "London"
      },
      "1441445": {
        "country_code": null,
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": null,
        "company": null,
        "login": "WhiteSpace-Strippers",
        "fake": 0,
        "state": null,
        "created_at": 1358909586,
        "id": 1441445,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": null
      }
    },
    "project": {
      "full_name": "sebastianbergmann/phpunit",
      "created_at": 1261678583,
      "description": "The PHP Unit Testing framework.",
      "html_url": "https://github.com/sebastianbergmann/phpunit",
      "num_forks": 1089,
      "name": "phpunit",
      "id": 448045,
      "language": "PHP",
      "mysql_id": 2696
    },
    "owner": 2223,
    "pull_request": {
      "created_at": 1359352913,
      "issue_id": 793,
      "html_url": "https://github.com/sebastianbergmann/phpunit/pull/793",
      "number": 793,
      "merged": false,
      "title": "AUTOMATED: WhiteSpace Removal",
      "id": 3859494,
      "opened_by": 1441445,
      "body": "This is an automated request to remove excessive whitespace from source code. You can find more about this project and opt-out at [whitespacestrippers.com](http://whitespacestrippers.com/)",
      "mysql_id": 1397335
    },
    "issue_events": [
      {
        "created_at": 1359370557,
        "actor_id": 2223,
        "action": "closed",
        "action_specific": null,
        "event_id": "35773268"
      }
    ],
    "issue_comments": [
      {
        "created_at": 1359361039,
        "user_id": 5619,
        "comment_id": "12768162",
        "body": "1. 4 spaces is [a standard](https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-2-coding-style-guide.md#24-indenting) followed by most PHP projects.\r\n2. Tools like `git-blame` won't be very useful after this.\r\n3. Blindly replacing spaces with tabs can break whitespace-dependent code. I hope you ran the test suites ;)\r\n\r\nBut seriously, a bot that needlessly performs a massive search/replace on arbitrary open-source projects without regard for existing standards or tests is a dubious way to promote energy efficiency. Save us all some energy and engineer a confirmed opt-in system.\r\n"
      },
      {
        "created_at": 1359401746,
        "user_id": 27651,
        "comment_id": "12787244",
        "body": "Please report those people to github - we've gotten two of those stupid PRs already as well."
      },
      {
        "created_at": 1359401840,
        "user_id": 2223,
        "comment_id": "12787322",
        "body": "I reported them for abuse yesterday."
      },
      {
        "created_at": 1359402103,
        "user_id": 5619,
        "comment_id": "12787578",
        "body": "Me too. Looks like the account has already been deleted."
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1359352897,
        "author_id": 1441445,
        "sha": "059204a20d52cc7021da303155364ec18d4ea088",
        "id": 26958302,
        "committer_id": 1441445,
        "comments": []
      }
    ]
  },
  "1397336": {
    "authors": [
      13417,
      8036
    ],
    "num_watchers": 8862,
    "id": 1397336,
    "org_owned": false,
    "relevant_users": {
      "8036": {
        "country_code": null,
        "is_project_member": {
          "created_at": 1338745606,
          "corrected_created_at": 1338605545,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": "SEA / SFO / NYC / BOS",
        "company": "The Thingdom",
        "login": "aseemk",
        "fake": 0,
        "state": null,
        "created_at": 1293471625,
        "id": 8036,
        "num_prior_commits": 90,
        "is_owner_member": true,
        "city": null
      },
      "13417": {
        "country_code": "ca",
        "is_project_member": {
          "created_at": 1380833537,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": "Vancouver, Canada",
        "company": "VMware",
        "login": "aeisenberg",
        "fake": 0,
        "state": "British Columbia",
        "created_at": 1281720882,
        "id": 13417,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "Vancouver"
      }
    },
    "project": {
      "full_name": "aseemk/json5",
      "created_at": 1338154654,
      "description": "JSON for the ES5 era. (Not an official successor to JSON.)",
      "html_url": "https://github.com/aseemk/json5",
      "num_forks": 8,
      "name": "json5",
      "id": 4463453,
      "language": "JavaScript",
      "mysql_id": 18601
    },
    "owner": 8036,
    "pull_request": {
      "created_at": 1355818958,
      "issue_id": 35,
      "html_url": "https://github.com/aseemk/json5/pull/35",
      "number": 35,
      "merged": true,
      "title": "Initial work on the JSON5.stringify method",
      "id": 3405228,
      "opened_by": 13417,
      "body": "Here is my work on the stringify method.  Basic work is complete and tested.  The space argument (3rd) is partially implemented, but disabled until I can fully test.  The replacer argument (2nd) is not implemented.  I don't plan to implement this one since it seems a bit esoteric to me.\r\n\r\nI probably have a few more hours worth of work before I can tidy up the space argument support.  But, feedback is welcome up until this point.  Thanks.",
      "mysql_id": 1397336
    },
    "issue_events": [
      {
        "created_at": 1356738708,
        "actor_id": 13417,
        "action": "referenced",
        "action_specific": null,
        "event_id": "33053636"
      },
      {
        "created_at": 1359361097,
        "actor_id": 13417,
        "action": "mentioned",
        "action_specific": null,
        "event_id": "35766914"
      },
      {
        "created_at": 1359361097,
        "actor_id": 13417,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "35766915"
      }
    ],
    "issue_comments": [
      {
        "created_at": 1359361097,
        "user_id": 8036,
        "comment_id": "12768173",
        "body": "Hey @aeisenberg, sorry for the delay, but I'm finally getting to the backlog of JSON5 issues. I'll look at this really soon now, promise. =) Thanks again for submitting."
      },
      {
        "created_at": 1359403765,
        "user_id": 13417,
        "comment_id": "12789087",
        "body": "Thanks.  Let me know if there's anything you need."
      },
      {
        "created_at": 1379112210,
        "user_id": 13417,
        "comment_id": "24423196",
        "body": "Hi, wondering if you can get a chance to look at this PR.  I'm using json5 in another project now and it would be nice to use a released version. Thanks."
      },
      {
        "created_at": 1379187922,
        "user_id": 8036,
        "comment_id": "24451828",
        "body": "Oh man, I'm sorry @aeisenberg.\r\n\r\nI'm clearly not able to be an effective maintainer right now, so I'd like to try something that I read about (<del>but can't find the source for at the moment</del> **edit:** [link](http://felixge.de/2013/03/11/the-pull-request-hack.html); article by @felixge, shown to me by @gasi; thanks guys!): I'd like to give you and other folks who've submitted meaningful pull requests contributor rights to JSON5, so you won't be hindered by me anymore.\r\n\r\n(cc @MaxNanasy)\r\n\r\nI'd love for JSON5 to remain a cohesive project, which often means minimal and simple, so I do ask that you please still leave \"editorial oversight\" to me, e.g. let's discuss new features before you implement them. =)\r\n\r\nIn this particular case, if you want to introduce this, there's a few more things that should happen here:\r\n\r\n- [ ] We should update the readme.\r\n\r\n- [ ] We should update the changelog.\r\n\r\n- [ ] If you want to release an update with this, we should bump the version number also, to 0.3.0.\r\n\r\n- [ ] And don't forget to list yourself as a contributor in the package.json5. =)\r\n\r\nWhat do you think?"
      },
      {
        "created_at": 1379188244,
        "user_id": 8036,
        "comment_id": "24451932",
        "body": "Forgot to mention: nice work on implementing this, and thanks for adding all the tests!"
      },
      {
        "created_at": 1379188765,
        "user_id": 8036,
        "comment_id": "24452082",
        "body": "Also, to finally address your original comments:\r\n\r\n> Basic work is complete and tested.\r\n\r\nNo problem. I think it's fine to have an incomplete implementation, as long as it's clearly documented. (E.g. this JSON5 implementation itself doesn't support Unicode characters in key names yet.)\r\n\r\nSo let's keep that in mind and document both the readme and changelog appropriately.\r\n\r\n> The replacer argument (2nd) is not implemented. I don't plan to implement this one since it seems a bit esoteric to me.\r\n\r\nIt has some utility, and I've seen it used in a few places. E.g. https://gist.github.com/mikeal/2504336\r\n\r\nLike the above, that doesn't have to be implemented today, but we should still plan on it I think. The good news is it shouldn't be too hard to (eventually) implement: it's ultimately just calling a function on every key-value pair. =)\r\n\r\n> But, feedback is welcome up until this point.\r\n\r\nThe community would be the best source of feedback. Unfortunately at the moment we don't have a channel to easily reach the community. I had started a Google Group way back when, but never shared the link:\r\n\r\nhttps://groups.google.com/group/json5\r\n\r\nFor now, I'll at least add a comment to the issue requesting this feature, where several people +1'ed, but let's look to make the Google Group a thing going forward. I'll add it to the readme!\r\n\r\nNice work again. =)"
      },
      {
        "created_at": 1379189788,
        "user_id": 8036,
        "comment_id": "24452452",
        "body": "Sorry for the multiple-comment spam; another thing:\r\n\r\nI haven't looked deeply at your implementation, and it looks simple/elegant enough to me, but FYI it might help to look at Douglas Crockford's original implementation as well (if you haven't already) for a reference check:\r\n\r\nhttps://github.com/douglascrockford/JSON-js/blob/master/json2.js#L228\r\n\r\n(Not that Doug's original implementation is the best model implementation =D, but JSON5's parse implementation is based directly on his, FWIW. Though there's been [talk](https://github.com/bestiejs/json3/commit/19c7cfed1d2bfe1a3c7563c05e8ffce4afd859b0#comments) of changing that…)"
      },
      {
        "created_at": 1379225458,
        "user_id": 13417,
        "comment_id": "24464082",
        "body": "Thanks for the commit rights. As you mention, there's still some work to do here.  I think the guthub hack might actually work in this case. :)  I'll address the documentation and other issues over the next few days."
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1338750315,
        "author_id": 8036,
        "sha": "296eac57522978ccf32dc55708427accbefed988",
        "id": 21348048,
        "committer_id": 8036,
        "comments": []
      },
      {
        "created_at": 1355818574,
        "author_id": 13417,
        "sha": "7bbae9900eea4896af8accc1ba687460ddb4116d",
        "id": 23810682,
        "committer_id": 13417,
        "comments": []
      },
      {
        "created_at": 1355818574,
        "author_id": 13417,
        "sha": "bd022b63307ddddde25481472ad25873428eb5aa",
        "id": 58558329,
        "committer_id": 13417,
        "comments": []
      },
      {
        "created_at": 1379377521,
        "author_id": 13417,
        "sha": "f95164aa38b3a159f727cb6c522280676502a1c0",
        "id": 58558332,
        "committer_id": 13417,
        "comments": []
      },
      {
        "created_at": 1379466473,
        "author_id": 13417,
        "sha": "61a31ec1912eab0fc73c20d3d92169690e7d0350",
        "id": 58558333,
        "committer_id": 13417,
        "comments": []
      },
      {
        "created_at": 1379466796,
        "author_id": 13417,
        "sha": "7543524fd270ea7a08371da9388d21417934c3c9",
        "id": 58558334,
        "committer_id": 13417,
        "comments": []
      }
    ]
  },
  "1397346": {
    "authors": [
      55662
    ],
    "num_watchers": 8862,
    "id": 1397346,
    "org_owned": false,
    "relevant_users": {
      "21936": {
        "country_code": null,
        "is_project_member": {
          "created_at": 1323493829,
          "ext_ref_id": "5019b392edecb512ce005d16"
        },
        "type": "USR",
        "deleted": 0,
        "location": null,
        "company": "Freelance Developer",
        "login": "shichuan",
        "fake": 0,
        "state": null,
        "created_at": 1258299785,
        "id": 21936,
        "num_prior_commits": 0,
        "is_owner_member": true,
        "city": null
      },
      "55662": {
        "country_code": null,
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": null,
        "company": null,
        "login": "josher19",
        "fake": 0,
        "state": null,
        "created_at": 1262393941,
        "id": 55662,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": null
      }
    },
    "project": {
      "full_name": "shichuan/javascript-patterns",
      "created_at": 1323497429,
      "description": "JavaScript Patterns",
      "html_url": "https://github.com/shichuan/javascript-patterns",
      "num_forks": 1343,
      "name": "javascript-patterns",
      "id": 2951379,
      "language": "JavaScript",
      "mysql_id": 4718
    },
    "owner": 21936,
    "pull_request": {
      "created_at": 1355914418,
      "issue_id": 65,
      "html_url": "https://github.com/shichuan/javascript-patterns/pull/65",
      "number": 65,
      "merged": true,
      "title": "Added removeEventListener",
      "id": 3423413,
      "opened_by": 55662,
      "body": "",
      "mysql_id": 1397346
    },
    "issue_events": [
      {
        "created_at": 1359361184,
        "actor_id": 21936,
        "action": "referenced",
        "action_specific": "d2905dfcbec1f147b0f18e72937d5d6837118342",
        "event_id": "35766967"
      },
      {
        "created_at": 1359361184,
        "actor_id": 21936,
        "action": "merged",
        "action_specific": "d2905dfcbec1f147b0f18e72937d5d6837118342",
        "event_id": "35766968"
      },
      {
        "created_at": 1359361184,
        "actor_id": 21936,
        "action": "closed",
        "action_specific": null,
        "event_id": "35766969"
      }
    ],
    "issue_comments": [
      {
        "created_at": 1359361199,
        "user_id": 21936,
        "comment_id": "12768198",
        "body": "thanx!"
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1355914209,
        "author_id": 55662,
        "sha": "e8cdc83b6a8b602ae43e7ddb2625fc7d5797f2aa",
        "id": 26730299,
        "committer_id": 55662,
        "comments": []
      }
    ]
  },
  "1397387": {
    "authors": [
      300572
    ],
    "num_watchers": 8862,
    "id": 1397387,
    "org_owned": true,
    "relevant_users": {
      "300572": {
        "country_code": "cn",
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": "Beijing",
        "company": "Tsinghua University",
        "login": "Skylersun",
        "fake": 0,
        "state": "北京市",
        "created_at": 1323275773,
        "id": 300572,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "北京市"
      },
      "1304600": {
        "country_code": null,
        "is_project_member": {
          "created_at": 1465812305,
          "corrected_created_at": 1465811956,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": null,
        "company": null,
        "login": "GavinHuttley",
        "fake": 0,
        "state": null,
        "created_at": 1356166229,
        "id": 1304600,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": null
      }
    },
    "project": {
      "full_name": "pycogent/pycogent",
      "created_at": 1355961302,
      "description": "PyCogent: Official repository for software and unit tests",
      "html_url": "https://github.com/pycogent/pycogent",
      "num_forks": 4,
      "name": "pycogent",
      "id": 7245628,
      "language": "Python",
      "mysql_id": 1953158
    },
    "owner": 1274175,
    "pull_request": {
      "created_at": 1359020454,
      "issue_id": 12,
      "html_url": "https://github.com/pycogent/pycogent/pull/12",
      "number": 12,
      "merged": true,
      "title": "Bug Fixed: name.py might parse wrong when the species name has more than 2 words",
      "id": 3814995,
      "opened_by": 300572,
      "body": "**Bug Fixed**: name.py might parse wrong when the species name has more than 2 words.\r\n\r\ne.g. Mustela putorius furo core 70\r\nexpected parsing:  prefix=`mustela_putorius_furo`, type=`core`\r\nprevious wrong parsing: prefix=`mustela_putorius`, type=`furo_core`\r\n\r\nThis would cause an error: No CoreDB found ",
      "mysql_id": 1397387
    },
    "issue_events": [
      {
        "created_at": 1359040095,
        "actor_id": 1304600,
        "action": "assigned",
        "action_specific": null,
        "event_id": "35444492"
      },
      {
        "created_at": 1359164902,
        "actor_id": 1304600,
        "action": "mentioned",
        "action_specific": null,
        "event_id": "35656345"
      },
      {
        "created_at": 1359164902,
        "actor_id": 1304600,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "35656346"
      },
      {
        "created_at": 1359361733,
        "actor_id": 1304600,
        "action": "referenced",
        "action_specific": "7538177d9e8b73168711b8a7c6f8b9e74060c0ed",
        "event_id": "35767273"
      },
      {
        "created_at": 1359361734,
        "actor_id": 1304600,
        "action": "merged",
        "action_specific": "7538177d9e8b73168711b8a7c6f8b9e74060c0ed",
        "event_id": "35767274"
      },
      {
        "created_at": 1359361734,
        "actor_id": 1304600,
        "action": "closed",
        "action_specific": null,
        "event_id": "35767275"
      },
      {
        "created_at": 1359403016,
        "actor_id": 1304600,
        "action": "mentioned",
        "action_specific": null,
        "event_id": "35823612"
      },
      {
        "created_at": 1359403016,
        "actor_id": 1304600,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "35823613"
      }
    ],
    "issue_comments": [
      {
        "created_at": 1359040274,
        "user_id": 1304600,
        "comment_id": "12646709",
        "body": "Thanks for catching this!\r\nBefore this can be accepted can you please indicate whether you checked that the ensembl test suite passes? Also, bug fixes need to be accompanied by tests that would fail with the old code. Please add a test method to the TestEnsemblDbName class in test_host.py and be sure it passes."
      },
      {
        "created_at": 1359164902,
        "user_id": 300572,
        "comment_id": "12722484",
        "body": "Hi @GavinHuttley ,\r\n\r\n1. I have double checked that my repo passes all the test in the ensembl test suite except the `test_genome.py`. The previous repo cound not pass it here either. They would both throw:`(OperationalError) (2006, 'MySQL server has gone away') None None` at a few tests. Could you please help me to check this?\r\n2. I have wrote a test located as you requested that the old repo could not pass and my repo passes.  \r\n\r\nLet me know if any question:-) "
      },
      {
        "created_at": 1359361746,
        "user_id": 1304600,
        "comment_id": "12768301",
        "body": "Have confirmed the tests all pass. Many thanks Skylersun for this contribution!"
      },
      {
        "created_at": 1359403016,
        "user_id": 300572,
        "comment_id": "12788356",
        "body": "@GavinHuttley I'm happy:-) Thanks for your help too."
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1359019700,
        "author_id": 300572,
        "sha": "d75f91faf61852e80a036c879eff1bf0e8b01528",
        "id": 26816276,
        "committer_id": 300572,
        "comments": []
      },
      {
        "created_at": 1359164489,
        "author_id": 300572,
        "sha": "0d81581f2df813c3816961902c7e499241284b1e",
        "id": 26816277,
        "committer_id": 300572,
        "comments": []
      }
    ]
  },
  "1397402": {
    "authors": [
      379824
    ],
    "num_watchers": 8862,
    "id": 1397402,
    "org_owned": false,
    "relevant_users": {
      "37345": {
        "country_code": null,
        "is_project_member": {
          "created_at": 1330883566,
          "ext_ref_id": "50b48dffedecb567be0000a0"
        },
        "type": "USR",
        "deleted": 0,
        "location": "Višnjan, Istra, Croatia",
        "company": null,
        "login": "tkrajina",
        "fake": 0,
        "state": null,
        "created_at": 1283032540,
        "id": 37345,
        "num_prior_commits": 0,
        "is_owner_member": true,
        "city": null
      },
      "379824": {
        "country_code": null,
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": null,
        "company": null,
        "login": "Vidreven",
        "fake": 0,
        "state": null,
        "created_at": 1316114243,
        "id": 379824,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": null
      }
    },
    "project": {
      "full_name": "tkrajina/uvod-u-git",
      "created_at": 1330887166,
      "description": "Git introduction: A book about git in Croatian. Uvod u git: Sve što ste ikad htjeli znati o gitu, a niste se usudili pitati.",
      "html_url": "https://github.com/tkrajina/uvod-u-git",
      "num_forks": 25,
      "name": "uvod-u-git",
      "id": 3618427,
      "language": "TeX",
      "mysql_id": 54400
    },
    "owner": 37345,
    "pull_request": {
      "created_at": 1359328476,
      "issue_id": 6,
      "html_url": "https://github.com/tkrajina/uvod-u-git/pull/6",
      "number": 6,
      "merged": true,
      "title": "Gramatika u git-gc",
      "id": 3857823,
      "opened_by": 379824,
      "body": "Ispravio sam neke sitnice u git-gc.tex.",
      "mysql_id": 1397402
    },
    "issue_events": [
      {
        "created_at": 1359361875,
        "actor_id": 37345,
        "action": "referenced",
        "action_specific": "2926824a3245141b0d8760f274af1da1db048aed",
        "event_id": "35767358"
      },
      {
        "created_at": 1359361875,
        "actor_id": 37345,
        "action": "merged",
        "action_specific": "2926824a3245141b0d8760f274af1da1db048aed",
        "event_id": "35767359"
      },
      {
        "created_at": 1359361875,
        "actor_id": 37345,
        "action": "closed",
        "action_specific": null,
        "event_id": "35767360"
      }
    ],
    "issue_comments": [
      {
        "created_at": 1359361884,
        "user_id": 37345,
        "comment_id": "12768336",
        "body": "Zahvaljujem!"
      },
      {
        "created_at": 1359506734,
        "user_id": 379824,
        "comment_id": "12856897",
        "body": "Nema problema. Ovih dana sam u gužvi pa ne stignem puno prčkati."
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1359328324,
        "author_id": 379824,
        "sha": "e89dc9255657d26e04b75df51b98d00b7f42786b",
        "id": 26840134,
        "committer_id": 379824,
        "comments": []
      }
    ]
  },
  "1397409": {
    "authors": [
      1207583
    ],
    "num_watchers": 8862,
    "id": 1397409,
    "org_owned": false,
    "relevant_users": {
      "19111": {
        "country_code": null,
        "is_project_member": {
          "created_at": 1341269124,
          "ext_ref_id": "50b02e29edecb53f8f00007b"
        },
        "type": "USR",
        "deleted": 0,
        "location": null,
        "company": null,
        "login": "JorgeAparicio",
        "fake": 0,
        "state": null,
        "created_at": 1336771295,
        "id": 19111,
        "num_prior_commits": 0,
        "is_owner_member": true,
        "city": null
      },
      "1207583": {
        "country_code": null,
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": null,
        "company": null,
        "login": "at-2500",
        "fake": 0,
        "state": null,
        "created_at": 1354840715,
        "id": 1207583,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": null
      }
    },
    "project": {
      "full_name": "JorgeAparicio/libstm32pp",
      "created_at": 1341276324,
      "description": "A template peripheral library for the STM32 microcontrollers, written in C++.",
      "html_url": "https://github.com/JorgeAparicio/libstm32pp",
      "num_forks": 0,
      "name": "libstm32pp",
      "id": 4864662,
      "language": "C++",
      "mysql_id": 4301
    },
    "owner": 19111,
    "pull_request": {
      "created_at": 1357926579,
      "issue_id": 2,
      "html_url": "https://github.com/JorgeAparicio/libstm32pp/pull/2",
      "number": 2,
      "merged": false,
      "title": "hey",
      "id": 3639174,
      "opened_by": 1207583,
      "body": "Hello Jorge,\r\nmy name is Jan and I am currently playing around with your library.\r\nI got it working with Keil uVision / gcc after some time, because the openocd-stlink support is not there yet :( I use a STM32F4Discovery (together with the open407-d expansion set) and a Silica Xynergy board, which is a development board for the stm + a spartan FPGA.\r\nSo, while playing I figured I cant access the GPIOI & H that the F2 has.\r\nAlso I took some time to add the fsmc registers, I hope I didnt do it wrong.\r\nAre you still working on the library?\r\nGreetings\r\nJan",
      "mysql_id": 1397409
    },
    "issue_events": [
      {
        "created_at": 1359361922,
        "actor_id": 19111,
        "action": "closed",
        "action_specific": null,
        "event_id": "35767383"
      }
    ],
    "issue_comments": [
      {
        "created_at": 1359361922,
        "user_id": 19111,
        "comment_id": "12768346",
        "body": "Hi Jan,\r\n\r\nSorry for the late reply. Unfortunately, I've already moved to other projects and I will no longer be able to maintain/continue this repository. I've some colleagues at my university that are working on robotics using this library, but for their applications the Servo, UART and I2C modules are enough, so I don't think they'll be contributing to this project either.\r\n\r\nPlease feel free to continue a fork of this project if you wish. I won't be able to accept your contribution (sorry) as I'll be freezing this repository.\r\n\r\nRegards,\r\n\r\nJorge"
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1357924092,
        "author_id": 1207583,
        "sha": "d8c56f04851898ce45d7cbc2843341eeb284b05e",
        "id": 25507306,
        "committer_id": 1207583,
        "comments": []
      },
      {
        "created_at": 1357852667,
        "author_id": 1207583,
        "sha": "b68ef7cf44b7baa8f889e55de3236ed5c149e29b",
        "id": 25507309,
        "committer_id": 1207583,
        "comments": []
      },
      {
        "created_at": 1357852604,
        "author_id": 1207583,
        "sha": "f35dee6e2bbd3d845c356b252d09cd61d7ba6351",
        "id": 25507314,
        "committer_id": 1207583,
        "comments": []
      }
    ]
  },
  "1397436": {
    "authors": [
      34078
    ],
    "num_watchers": 8862,
    "id": 1397436,
    "org_owned": false,
    "relevant_users": {
      "33290": {
        "country_code": null,
        "is_project_member": {
          "created_at": 1352686312,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": null,
        "company": null,
        "login": "ioerror",
        "fake": 0,
        "state": null,
        "created_at": 1256649632,
        "id": 33290,
        "num_prior_commits": 0,
        "is_owner_member": true,
        "city": null
      },
      "34078": {
        "country_code": "au",
        "is_project_member": {
          "created_at": 1446902699,
          "ext_ref_id": "0"
        },
        "type": "USR",
        "deleted": 0,
        "location": "Sydney",
        "company": "",
        "login": "d1b",
        "fake": 0,
        "state": "New South Wales",
        "created_at": 1254395618,
        "id": 34078,
        "num_prior_commits": 22,
        "is_owner_member": false,
        "city": "Sydney"
      }
    },
    "project": {
      "full_name": "ioerror/blockfinder",
      "created_at": 1261793493,
      "description": "Blockfinder enumerates network information for countries",
      "html_url": "https://github.com/ioerror/blockfinder",
      "num_forks": 12,
      "name": "blockfinder",
      "id": 449123,
      "language": "Python",
      "mysql_id": 446210
    },
    "owner": 33290,
    "pull_request": {
      "created_at": 1359350577,
      "issue_id": 57,
      "html_url": "https://github.com/ioerror/blockfinder/pull/57",
      "number": 57,
      "merged": true,
      "title": "Include a embedded copy of ipaddr. The license for ipaddr is found insid...",
      "id": 3859340,
      "opened_by": 34078,
      "body": "...e\r\n\r\nthe embedded_ipaddr directory.The embedded copy of ipaddr is only used\r\nif the ipaddr module is not already available.\r\nThe embedded copy of ipaddr has been pulled from the ipaddr google code\r\ngit repository located at https://code.google.com/p/ipaddr-py/\r\nat commit 8d1eeed6e9f61939fee65b78748248f17ce919e4 (commit date Jun 29, 2012).\r\n\r\nSigned-off-by: David <db@d1b.org>",
      "mysql_id": 1397436
    },
    "issue_events": [
      {
        "created_at": 1359367392,
        "actor_id": 33290,
        "action": "mentioned",
        "action_specific": null,
        "event_id": "35770843"
      },
      {
        "created_at": 1359367392,
        "actor_id": 33290,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "35770844"
      }
    ],
    "issue_comments": [
      {
        "created_at": 1359362003,
        "user_id": 33290,
        "comment_id": "12768377",
        "body": "Could you please add a commit on top of this that declares version to be something other than trunk?"
      },
      {
        "created_at": 1359367392,
        "user_id": 34078,
        "comment_id": "12769650",
        "body": "@ioerror that git commit hash points to an unreleased version though. It would be a version after ipaddr 2.1.10, but ipaddr has not released a new version since Feb 2012. Instead it looks like development moved on to https://code.google.com/p/ipaddress-py/ which ended up in python 3.3 (as ipaddress.py - covered by pep 3144[0]).\r\n\r\n[0] http://www.python.org/dev/peps/pep-3144/"
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1359350242,
        "author_id": 34078,
        "sha": "a2ef99ac35231bfb1ab68f7dd2dedc72c7b82b6f",
        "id": 26958503,
        "committer_id": 34078,
        "comments": []
      }
    ]
  },
  "1397444": {
    "authors": [
      785214
    ],
    "num_watchers": 8862,
    "id": 1397444,
    "org_owned": false,
    "relevant_users": {
      "126865": {
        "country_code": "us",
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": "Fremont",
        "company": null,
        "login": "riking",
        "fake": 0,
        "state": "California",
        "created_at": 1298190380,
        "id": 126865,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "Fremont"
      },
      "785214": {
        "country_code": null,
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": null,
        "company": null,
        "login": "laz2727",
        "fake": 0,
        "state": null,
        "created_at": 1347975834,
        "id": 785214,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": null
      },
      "948775": {
        "country_code": "us",
        "is_project_member": {
          "created_at": 1353542665,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": "New Jersey",
        "company": null,
        "login": "50Wliu",
        "fake": 0,
        "state": "New Jersey",
        "created_at": 1352567437,
        "id": 948775,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": null
      },
      "1146876": {
        "country_code": "fi",
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": "Vantaa, Finland",
        "company": null,
        "login": "PizzAna",
        "fake": 0,
        "state": "Etelä-Suomi",
        "created_at": 1354891834,
        "id": 1146876,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "Vantaa"
      }
    },
    "project": {
      "full_name": "pahimar/Equivalent-Exchange-3",
      "created_at": 1335306733,
      "description": "",
      "html_url": "https://github.com/pahimar/Equivalent-Exchange-3",
      "num_forks": 0,
      "name": "Equivalent-Exchange-3",
      "id": 4128173,
      "language": "Java",
      "mysql_id": 38128
    },
    "owner": 47723,
    "pull_request": {
      "created_at": 1359284444,
      "issue_id": 203,
      "html_url": "https://github.com/pahimar/Equivalent-Exchange-3/pull/203",
      "number": 203,
      "merged": true,
      "title": "JAFU",
      "id": 3855972,
      "opened_by": 785214,
      "body": "",
      "mysql_id": 1397444
    },
    "issue_events": [
      {
        "created_at": 1359699273,
        "actor_id": 47723,
        "action": "referenced",
        "action_specific": "11d8fd14f240ce47ee4d128c3b14e529221a8f71",
        "event_id": "36348941"
      },
      {
        "created_at": 1359699273,
        "actor_id": 47723,
        "action": "merged",
        "action_specific": "11d8fd14f240ce47ee4d128c3b14e529221a8f71",
        "event_id": "36348942"
      },
      {
        "created_at": 1359699274,
        "actor_id": 47723,
        "action": "closed",
        "action_specific": null,
        "event_id": "36348943"
      }
    ],
    "issue_comments": [
      {
        "created_at": 1359336075,
        "user_id": 126865,
        "comment_id": "12761858",
        "body": "Can you re-submit this so that there aren't line break/tab/whatever differences? Keep the diffs down"
      },
      {
        "created_at": 1359362163,
        "user_id": 785214,
        "comment_id": "12768417",
        "body": "It's just GitHub."
      },
      {
        "created_at": 1359370840,
        "user_id": 1146876,
        "comment_id": "12770588",
        "body": "In language files, use GitHub's own editor and it doesn't do this"
      },
      {
        "created_at": 1359435127,
        "user_id": 126865,
        "comment_id": "12814619",
        "body": "No, it's not just GitHub, the line breaks were changed. This was caused by either not setting up your Git environment properly or using an editor that saved the file in the other format, whatever that is."
      },
      {
        "created_at": 1359438027,
        "user_id": 948775,
        "comment_id": "12816131",
        "body": "I can think of two things that could have caused this:\r\n1) He copied the file over instead of editing it.\r\n2) He changed the file format from, say, UTF-8 to UTF-8 w/ BOM."
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1359284389,
        "author_id": 785214,
        "sha": "fc8fb6dc71d2cbfe372bd9e9ac3112a204e30e4f",
        "id": 26911065,
        "committer_id": 785214,
        "comments": []
      }
    ]
  },
  "1397465": {
    "authors": [
      23588
    ],
    "num_watchers": 8862,
    "id": 1397465,
    "org_owned": false,
    "relevant_users": {
      "1779": {
        "country_code": "us",
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": "Palo Alto",
        "company": "Google Chrome, HTML5 Boilerplate, Modernizr, jQuery, CSS3 Please, HTML5 Please, ♥z",
        "login": "paulirish",
        "fake": 0,
        "state": "California",
        "created_at": 1228797563,
        "id": 1779,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "Palo Alto"
      },
      "23588": {
        "country_code": "us",
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": "San Francisco, CA",
        "company": "Disqus",
        "login": "benvinegar",
        "fake": 0,
        "state": "California",
        "created_at": 1204664640,
        "id": 23588,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "SF"
      },
      "36154": {
        "country_code": null,
        "is_project_member": {
          "created_at": 1327224641,
          "ext_ref_id": "53bbe4f2bd354379d6000114"
        },
        "type": "USR",
        "deleted": 0,
        "location": null,
        "company": null,
        "login": "Fyrd",
        "fake": 0,
        "state": null,
        "created_at": 1286547963,
        "id": 36154,
        "num_prior_commits": 0,
        "is_owner_member": true,
        "city": null
      },
      "68412": {
        "country_code": "de",
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": "Munich, Germany",
        "company": "Google",
        "login": "mikewest",
        "fake": 0,
        "state": "Bayern",
        "created_at": 1204202875,
        "id": 68412,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "München"
      }
    },
    "project": {
      "full_name": "Fyrd/caniuse",
      "created_at": 1327228241,
      "description": "Raw browser/feature support data from caniuse.com",
      "html_url": "https://github.com/Fyrd/caniuse",
      "num_forks": 25,
      "name": "caniuse",
      "id": 3238243,
      "language": "JavaScript",
      "mysql_id": 9314
    },
    "owner": 36154,
    "pull_request": {
      "created_at": 1358907193,
      "issue_id": 113,
      "html_url": "https://github.com/Fyrd/caniuse/pull/113",
      "number": 113,
      "merged": false,
      "title": "Update Content-Security Policy table; supports Safari 5.1",
      "id": 3789902,
      "opened_by": 23588,
      "body": "Safari 5.1.17 implements Content-Security Policy. However, it's been observed to be buggy:\r\n\r\nhttp://stackoverflow.com/questions/13663302/why-does-my-content-security-policy-work-everywhere-but-safari\r\nhttp://blog.futtta.be/2012/08/23/content-security-policy-great-or-wait/#comment-31052\r\n\r\nI think it's worth mentioning in the table, though. How should we address?",
      "mysql_id": 1397465
    },
    "issue_events": [
      {
        "created_at": 1359362228,
        "actor_id": 36154,
        "action": "closed",
        "action_specific": null,
        "event_id": "35767627"
      },
      {
        "created_at": 1359362747,
        "actor_id": 68412,
        "action": "mentioned",
        "action_specific": null,
        "event_id": "35767924"
      },
      {
        "created_at": 1359362747,
        "actor_id": 68412,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "35767925"
      },
      {
        "created_at": 1359410651,
        "actor_id": 68412,
        "action": "mentioned",
        "action_specific": null,
        "event_id": "35842075"
      },
      {
        "created_at": 1359410651,
        "actor_id": 68412,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "35842076"
      }
    ],
    "issue_comments": [
      {
        "created_at": 1359362227,
        "user_id": 36154,
        "comment_id": "12768426",
        "body": "Thanks for sharing this, have manually addressed it a little differently (setting to partial support). "
      },
      {
        "created_at": 1359362747,
        "user_id": 1779,
        "comment_id": "12768541",
        "body": "cc @mikewest "
      },
      {
        "created_at": 1359390898,
        "user_id": 68412,
        "comment_id": "12779802",
        "body": "Right. The CSP implementation in Safar 5.x is buggy enough that I left it out of the initial data set; I agree that it should be noted in the chart, however. Thanks for fixing that!\r\n\r\nWould you mind adjusting the \"Known Issues\" section to refer specifically to Safari 5.x? The \"X-WebKit-CSP\" implementation in Safari 6 is solid enough to build upon."
      },
      {
        "created_at": 1359410651,
        "user_id": 23588,
        "comment_id": "12794908",
        "body": "@mikewest – so here's a personal anecdote on why it should be listed (not that you're arguing otherwise).\r\n\r\nThis table actually caused me grief, because two weeks ago we deployed a version of Disqus with the X-WebKit-CSP header enabled. Very quickly, we began receiving bug reports from people using Safari 5.1 – the headers we had tested with 6 didn't work with 5.1. We never bothered to test 5.1, because caniuse.com reported that it didn't implement CSP at all.\r\n\r\nWe've since gone back and fixed our X-WebKit-CSP headers such that they work with both browsers. So while 5.1's implementation certainly doesn't match 6's, it's possible to ship a working set of CSP headers for it.\r\n\r\n(Aside: I'm sure there's a lesson here in using non-standardized browser features.)"
      },
      {
        "created_at": 1359429084,
        "user_id": 68412,
        "comment_id": "12811033",
        "body": "For clarity, I agree completely. Safari 5.X should be listed as supporting the prefixed version, it was my mistake for not including it in the first place. :)"
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1358904938,
        "author_id": 23588,
        "sha": "d1423d078594b842c52607385b7d61965adc103b",
        "id": 26958554,
        "committer_id": 23588,
        "comments": []
      }
    ]
  },
  "1397467": {
    "authors": [
      190180
    ],
    "num_watchers": 8862,
    "id": 1397467,
    "org_owned": true,
    "relevant_users": {
      "3871": {
        "country_code": null,
        "is_project_member": {
          "created_at": 1359523504,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": "✈",
        "company": null,
        "login": "sindresorhus",
        "fake": 0,
        "state": null,
        "created_at": 1261364222,
        "id": 3871,
        "num_prior_commits": 0,
        "is_owner_member": true,
        "city": null
      },
      "20165": {
        "country_code": "us",
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": "Arlington, VT",
        "company": "Sleekcode, LLC",
        "login": "tkellen",
        "fake": 0,
        "state": "Vermont",
        "created_at": 1260391311,
        "id": 20165,
        "num_prior_commits": 0,
        "is_owner_member": true,
        "city": null
      },
      "62810": {
        "country_code": "fr",
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": "Toulouse, France",
        "company": null,
        "login": "MoOx",
        "fake": 0,
        "state": "Midi-Pyrénées",
        "created_at": 1259081098,
        "id": 62810,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "Toulouse"
      },
      "190180": {
        "country_code": "fr",
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": "Mouans-Sartoux, France",
        "company": null,
        "login": "sleeper",
        "fake": 0,
        "state": "Provence-Alpes-Côte d'Azur",
        "created_at": 1224852690,
        "id": 190180,
        "num_prior_commits": 1,
        "is_owner_member": false,
        "city": "Mouans-Sartoux"
      }
    },
    "project": {
      "full_name": "gruntjs/grunt-contrib-livereload",
      "created_at": 1351535457,
      "description": "Reload assets live in the browser.",
      "html_url": "https://github.com/gruntjs/grunt-contrib-livereload",
      "num_forks": 15,
      "name": "grunt-contrib-livereload",
      "id": 6441879,
      "language": "JavaScript",
      "mysql_id": 1450969
    },
    "owner": 60798,
    "pull_request": {
      "created_at": 1359260322,
      "issue_id": 3,
      "html_url": "https://github.com/gruntjs/grunt-contrib-livereload/pull/3",
      "number": 3,
      "merged": false,
      "title": "Grunt 0.4 compatible implementation",
      "id": 3855013,
      "opened_by": 190180,
      "body": "Hi there,\r\n\r\nA Grunt 0.4 compatible implementation based on [mklabs/tiny-lr](https://github.com/mklabs/tiny-lr).",
      "mysql_id": 1397467
    },
    "issue_events": [
      {
        "created_at": 1359362381,
        "actor_id": 3871,
        "action": "mentioned",
        "action_specific": null,
        "event_id": "35767733"
      },
      {
        "created_at": 1359362381,
        "actor_id": 3871,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "35767734"
      },
      {
        "created_at": 1359376945,
        "actor_id": 20165,
        "action": "mentioned",
        "action_specific": null,
        "event_id": "35779006"
      },
      {
        "created_at": 1359376945,
        "actor_id": 20165,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "35779007"
      },
      {
        "created_at": 1359386391,
        "actor_id": 62810,
        "action": "mentioned",
        "action_specific": null,
        "event_id": "35793138"
      },
      {
        "created_at": 1359386391,
        "actor_id": 62810,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "35793139"
      },
      {
        "created_at": 1359387087,
        "actor_id": 190180,
        "action": "mentioned",
        "action_specific": null,
        "event_id": "35794359"
      },
      {
        "created_at": 1359387087,
        "actor_id": 190180,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "35794360"
      },
      {
        "created_at": 1359387733,
        "actor_id": 190180,
        "action": "mentioned",
        "action_specific": null,
        "event_id": "35795183"
      },
      {
        "created_at": 1359387733,
        "actor_id": 190180,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "35795184"
      },
      {
        "created_at": 1359387848,
        "actor_id": 62810,
        "action": "mentioned",
        "action_specific": null,
        "event_id": "35795334"
      },
      {
        "created_at": 1359387848,
        "actor_id": 62810,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "35795335"
      },
      {
        "created_at": 1359387848,
        "actor_id": 20165,
        "action": "mentioned",
        "action_specific": null,
        "event_id": "35795336"
      },
      {
        "created_at": 1359387848,
        "actor_id": 20165,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "35795337"
      },
      {
        "created_at": 1359389268,
        "actor_id": 3871,
        "action": "mentioned",
        "action_specific": null,
        "event_id": "35797463"
      },
      {
        "created_at": 1359389268,
        "actor_id": 3871,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "35797464"
      },
      {
        "created_at": 1359397668,
        "actor_id": 3871,
        "action": "mentioned",
        "action_specific": null,
        "event_id": "35811150"
      },
      {
        "created_at": 1359397668,
        "actor_id": 3871,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "35811151"
      },
      {
        "created_at": 1359409756,
        "actor_id": 20165,
        "action": "mentioned",
        "action_specific": null,
        "event_id": "35840057"
      },
      {
        "created_at": 1359409756,
        "actor_id": 20165,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "35840058"
      },
      {
        "created_at": 1359409756,
        "actor_id": 190180,
        "action": "mentioned",
        "action_specific": null,
        "event_id": "35840059"
      },
      {
        "created_at": 1359409756,
        "actor_id": 190180,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "35840060"
      },
      {
        "created_at": 1359523504,
        "actor_id": 3871,
        "action": "closed",
        "action_specific": "b5cbe652435aad3c2f9d543ec06ee38591203057",
        "event_id": "36049621"
      },
      {
        "created_at": 1359523525,
        "actor_id": 190180,
        "action": "mentioned",
        "action_specific": null,
        "event_id": "36049672"
      },
      {
        "created_at": 1359523525,
        "actor_id": 190180,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "36049673"
      },
      {
        "created_at": 1359536776,
        "actor_id": 190180,
        "action": "head_ref_deleted",
        "action_specific": null,
        "event_id": "36063598"
      }
    ],
    "issue_comments": [
      {
        "created_at": 1359362381,
        "user_id": 20165,
        "comment_id": "12768471",
        "body": "@sindresorhus Are you still maintaining this repo?"
      },
      {
        "created_at": 1359376945,
        "user_id": 3871,
        "comment_id": "12772556",
        "body": "@tkellen Frederick stepped in an did this. We could never get anywhere with the Livereload author.\r\n\r\nThis looks good too me. Could you review and merge?"
      },
      {
        "created_at": 1359385850,
        "user_id": 62810,
        "comment_id": "12777292",
        "body": "There are some issues with this branch, be careful if you want to merge (+doc seems out of date)"
      },
      {
        "created_at": 1359386391,
        "user_id": 3871,
        "comment_id": "12777549",
        "body": "@MoOx care to elaborate?"
      },
      {
        "created_at": 1359387087,
        "user_id": 62810,
        "comment_id": "12777924",
        "body": "I just cannot make this work. livereload-start task tell me the server is started, but the livereload command (trigger) tell me to start the server. Tried with latest version of grunt (grunt-cli v0.1.6 & grunt v0.4.0rc5) & latest version of grunt-contrib-watch.\r\nThe doc mentions a [grunt-regarde](https://github.com/sleeper/grunt-regarde) package (grunt-contrib-watch replacement, but it seems deleted by @sleeper)"
      },
      {
        "created_at": 1359387848,
        "user_id": 3871,
        "comment_id": "12778272",
        "body": "@MoOx You can find the regarde task here: https://github.com/yeoman/grunt-regarde\r\n\r\nThe regarde task was created because of shortcomings in the watch task which doesn't give access to changed files because it spawns tasks in subprocesses.\r\n\r\n@tkellen I've tested this with latest grunt and it works ok."
      },
      {
        "created_at": 1359389268,
        "user_id": 62810,
        "comment_id": "12778992",
        "body": "@sindresorhus Ok great. Thanks for the notice. I'll try that right now."
      },
      {
        "created_at": 1359397668,
        "user_id": 20165,
        "comment_id": "12783839",
        "body": "@sindresorhus Sorry, I don't use LR, and I can't add any other plugins to my project load at the moment.  If there are any contrib projects you don't feel you have the time to maintain, we should discuss finding another team member to steward them.  Hit me up on IRC any time!"
      },
      {
        "created_at": 1359408363,
        "user_id": 190180,
        "comment_id": "12793019",
        "body": "Hi Guys,\r\n\r\nSorry to step in so late in the discussion, but I was stuck in meetings.\r\nI'll have a look at that tonight or tomorrow morning early.\r\nSorry for the inconvenience.\r\n"
      },
      {
        "created_at": 1359409756,
        "user_id": 3871,
        "comment_id": "12794191",
        "body": "@tkellen Didn't imply you should. I'd be happy to maintain this if @sleeper isn't interested (@sleeper are you?).\r\n"
      },
      {
        "created_at": 1359417280,
        "user_id": 190180,
        "comment_id": "12800820",
        "body": "Yeah, I'm interested ;)"
      },
      {
        "created_at": 1359433428,
        "user_id": 190180,
        "comment_id": "12813696",
        "body": "OK: I've updated the README (and took into account the fact that it's generated), supposedly fix the fact that travis was failing testing it, and rebased & squashed the commit on master "
      },
      {
        "created_at": 1359469252,
        "user_id": 62810,
        "comment_id": "12828373",
        "body": "This work for me now. But is there anything to do for CSS live reload (without entire page reload) ? It reloads entire page for me (I use compass) ?"
      },
      {
        "created_at": 1359469495,
        "user_id": 62810,
        "comment_id": "12828503",
        "body": "Ok it's simple. Just use a different watch(regarde) on scss (task: compass) and css (task: livereload).\r\nSo this PR fully work for me ! Thanks you guys."
      },
      {
        "created_at": 1359523524,
        "user_id": 3871,
        "comment_id": "12869012",
        "body": "Landed. Thanks @sleeper :)"
      },
      {
        "created_at": 1359536763,
        "user_id": 190180,
        "comment_id": "12874517",
        "body": "Yes !!! Many thanks !! :)"
      }
    ],
    "pr_comments": [
      {
        "created_at": 1359387733,
        "commit_id": 26903891,
        "comment_id": "2791031",
        "user_id": 3871,
        "position": 15,
        "pull_request_id": 937666,
        "body": "@sleeper Mention that the user must use the `regarde` task instead of `watch`. (with link)"
      },
      {
        "created_at": 1359417200,
        "commit_id": 26903891,
        "comment_id": "2798361",
        "user_id": 190180,
        "position": 15,
        "pull_request_id": 937666,
        "body": "Ok, done."
      },
      {
        "created_at": 1359474539,
        "commit_id": 26868185,
        "comment_id": "2807394",
        "user_id": 3871,
        "position": 5,
        "pull_request_id": 937666,
        "body": "Why are you including grunt-simple-mocha and then using mocha directly?"
      },
      {
        "created_at": 1359479966,
        "commit_id": 26868185,
        "comment_id": "2808319",
        "user_id": 190180,
        "position": 5,
        "pull_request_id": 937666,
        "body": "It was before I installed grunt-simple-mocha ... Now `grunt test` is working correctly with mocha .. I'll revert properly ;)"
      }
    ],
    "commits": [
      {
        "created_at": 1359497786,
        "author_id": 190180,
        "sha": "7197c553f4a57aa517938a59bb70af1da6b2374d",
        "id": 26868154,
        "committer_id": 190180,
        "comments": []
      },
      {
        "created_at": 1355307192,
        "author_id": 190180,
        "sha": "fcfad30a643aa8b96e32be2db4ed3c3de57f939b",
        "id": 26868185,
        "committer_id": 190180,
        "comments": []
      }
    ]
  },
  "1397498": {
    "authors": [
      1271681
    ],
    "num_watchers": 8862,
    "id": 1397498,
    "org_owned": true,
    "relevant_users": {
      "41933": {
        "country_code": "ca",
        "is_project_member": {
          "created_at": 1307905490,
          "ext_ref_id": "50d2b8eaedecb5638f0016f8"
        },
        "type": "USR",
        "deleted": 0,
        "location": "Montreal, Canada",
        "company": null,
        "login": "josef-pkt",
        "fake": 0,
        "state": "Québec",
        "created_at": 1287154378,
        "id": 41933,
        "num_prior_commits": 0,
        "is_owner_member": true,
        "city": "Montréal"
      },
      "1271681": {
        "country_code": null,
        "is_project_member": {
          "created_at": 1364957915,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": null,
        "company": null,
        "login": "TomAugspurger",
        "fake": 0,
        "state": null,
        "created_at": 1326015959,
        "id": 1271681,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": null
      }
    },
    "project": {
      "full_name": "statsmodels/statsmodels",
      "created_at": 1307912690,
      "description": "Statsmodels: statistical modeling and econometrics in Python",
      "html_url": "https://github.com/statsmodels/statsmodels",
      "num_forks": 524,
      "name": "statsmodels",
      "id": 1885237,
      "language": "Python",
      "mysql_id": 1386
    },
    "owner": 8306,
    "pull_request": {
      "created_at": 1359361097,
      "issue_id": 634,
      "html_url": "https://github.com/statsmodels/statsmodels/pull/634",
      "number": 634,
      "merged": true,
      "title": "VAR DOC typo",
      "id": 3860144,
      "opened_by": 1271681,
      "body": "Fixing a typo on the VAR documentation.  The docs had ``model.plot()`` and ``model.plot_acorr()``, where it should be ``results.plot()`` and ``results.plot_acorr()``.\r\n\r\nLink to the page: http://statsmodels.sourceforge.net/stable/vector_ar.html#model-fitting",
      "mysql_id": 1397498
    },
    "issue_events": [
      {
        "created_at": 1359362769,
        "actor_id": 41933,
        "action": "referenced",
        "action_specific": "91811ad871aeacbc6982dd0fcc9a93ab0b9ca4be",
        "event_id": "35767947"
      },
      {
        "created_at": 1359362769,
        "actor_id": 41933,
        "action": "merged",
        "action_specific": "91811ad871aeacbc6982dd0fcc9a93ab0b9ca4be",
        "event_id": "35767948"
      },
      {
        "created_at": 1359362769,
        "actor_id": 41933,
        "action": "closed",
        "action_specific": null,
        "event_id": "35767949"
      }
    ],
    "issue_comments": [
      {
        "created_at": 1359362738,
        "user_id": 41933,
        "comment_id": "12768539",
        "body": "Thank you Tom, might still go into tonights devel doc update\r\nhttp://statsmodels.sourceforge.net/devel/vector_ar.html#model-fitting"
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1359360452,
        "author_id": 1271681,
        "sha": "4933d63da12fe740cc93eb6d37dd0a7c61ab38a9",
        "id": 26843262,
        "committer_id": 1271681,
        "comments": []
      }
    ]
  },
  "1397504": {
    "authors": [
      1346649
    ],
    "num_watchers": 8862,
    "id": 1397504,
    "org_owned": true,
    "relevant_users": {
      "11848": {
        "country_code": "ca",
        "is_project_member": {
          "created_at": 1318555742,
          "ext_ref_id": "50cbee24edecb514e6000eab"
        },
        "type": "USR",
        "deleted": 0,
        "location": "Toronto, Canada",
        "company": "Research In Motion",
        "login": "seanpaultaylor",
        "fake": 0,
        "state": "Ontario",
        "created_at": 1318555742,
        "id": 11848,
        "num_prior_commits": 0,
        "is_owner_member": true,
        "city": "Toronto"
      },
      "1346649": {
        "country_code": null,
        "is_project_member": {
          "created_at": 1318492001,
          "ext_ref_id": "52f61394bd35433fd8008154"
        },
        "type": "USR",
        "deleted": 0,
        "location": null,
        "company": null,
        "login": "germinator",
        "fake": 0,
        "state": null,
        "created_at": 1349657064,
        "id": 1346649,
        "num_prior_commits": 1,
        "is_owner_member": false,
        "city": null
      }
    },
    "project": {
      "full_name": "blackberry/GamePlay",
      "created_at": 1318492001,
      "description": "An open-source, cross-platform 3D native C++ game framework making it easy to learn and write mobile and desktop games.",
      "html_url": "https://github.com/blackberry/GamePlay",
      "num_forks": 44,
      "name": "GamePlay",
      "id": 2567475,
      "language": "C++",
      "mysql_id": 2497
    },
    "owner": 6492,
    "pull_request": {
      "created_at": 1359356947,
      "issue_id": 809,
      "html_url": "https://github.com/blackberry/GamePlay/pull/809",
      "number": 809,
      "merged": false,
      "title": "Repeat count on default clip, default clip cloning.",
      "id": 3859840,
      "opened_by": 1346649,
      "body": "Allow repeatCount on default clip in animation files.  Example:\r\n\r\nanimation pulse\r\n{\r\n\tproperty = ANIMATE_SCALE\r\n\tkeyCount = 3\r\n\tkeyTimes = 0 500 1000\r\n\tkeyValues = 1.0 1.0 1.0 1.5 1.5 1.5 1.0 1.0 1.0\r\n\tcurve = LINEAR\r\n\trepeatCount = INDEFINITE\r\n}\r\n\r\nAlso, clone default clip when an animation is cloned.  (This is actually a seperate issue, sorry.)",
      "mysql_id": 1397504
    },
    "issue_events": [],
    "issue_comments": [
      {
        "created_at": 1359362842,
        "user_id": 11848,
        "comment_id": "12768555",
        "body": "I need  your contributors form to accept source changes."
      }
    ],
    "pr_comments": [
      {
        "created_at": 1359363687,
        "commit_id": 26843608,
        "comment_id": "2788583",
        "user_id": 11848,
        "position": 4,
        "pull_request_id": 930991,
        "body": "It doesn't make sense to publicly expose these definitions when all the other ones are still parsed directly in the code\r\nin AnimationTarget are done as literals in the method.\r\n"
      }
    ],
    "commits": [
      {
        "created_at": 1359359938,
        "author_id": 1346649,
        "sha": "c25c330acfbffce0096170b18fe7638b611a07ec",
        "id": 26843608,
        "committer_id": 1346649,
        "comments": []
      },
      {
        "created_at": 1359356744,
        "author_id": 1346649,
        "sha": "46244a2bb541a4f8e31346e11553114f0befcb28",
        "id": 26843612,
        "committer_id": 1346649,
        "comments": []
      }
    ]
  },
  "1397508": {
    "authors": [
      444635
    ],
    "num_watchers": 8862,
    "id": 1397508,
    "org_owned": true,
    "relevant_users": {
      "1554": {
        "country_code": "ca",
        "is_project_member": {
          "created_at": 1336750280,
          "ext_ref_id": "50cd4db9edecb53841002098"
        },
        "type": "USR",
        "deleted": 0,
        "location": "Ottawa, Ontario, Canada",
        "company": "Treasury Board Secretariat of Canada",
        "login": "LaurentGoderre",
        "fake": 0,
        "state": "Ontario",
        "created_at": 1317331561,
        "id": 1554,
        "num_prior_commits": 0,
        "is_owner_member": true,
        "city": "Ottawa"
      },
      "444635": {
        "country_code": null,
        "is_project_member": {
          "created_at": 1337882869,
          "ext_ref_id": "50cd4dbaedecb538410020a7"
        },
        "type": "USR",
        "deleted": 0,
        "location": null,
        "company": null,
        "login": "cfarquharson",
        "fake": 0,
        "state": null,
        "created_at": 1337882869,
        "id": 444635,
        "num_prior_commits": 11,
        "is_owner_member": true,
        "city": null
      }
    },
    "project": {
      "full_name": "wet-boew/wet-boew",
      "created_at": 1336757480,
      "description": "Web Experience Toolkit (WET): Open source code library for building innovative websites that are accessible, usable, interoperable, mobile-friendly and multilingual. This collaborative open source project is led by the Government of Canada.",
      "html_url": "https://github.com/wet-boew/wet-boew",
      "num_forks": 459,
      "name": "wet-boew",
      "id": 4297273,
      "language": "HTML",
      "mysql_id": 157
    },
    "owner": 1503,
    "pull_request": {
      "created_at": 1359339651,
      "issue_id": 1073,
      "html_url": "https://github.com/wet-boew/wet-boew/pull/1073",
      "number": 1073,
      "merged": true,
      "title": "More updated content for Design guide",
      "id": 3858623,
      "opened_by": 444635,
      "body": "",
      "mysql_id": 1397508
    },
    "issue_events": [
      {
        "created_at": 1359362923,
        "actor_id": 1554,
        "action": "referenced",
        "action_specific": "700791a1bf5d46de4e8cc07943bd811a4587c200",
        "event_id": "35768026"
      },
      {
        "created_at": 1359362923,
        "actor_id": 1554,
        "action": "merged",
        "action_specific": "700791a1bf5d46de4e8cc07943bd811a4587c200",
        "event_id": "35768027"
      },
      {
        "created_at": 1359362923,
        "actor_id": 1554,
        "action": "closed",
        "action_specific": null,
        "event_id": "35768028"
      }
    ],
    "issue_comments": [
      {
        "created_at": 1359362889,
        "user_id": 1554,
        "comment_id": "12768564",
        "body": "This is probably an issue between github and travis but the build did work and it passed. GitHub is just not showing it for some reason"
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1359339302,
        "author_id": 444635,
        "sha": "880ea9c32362f8075f0e7ba6dfbae8f8ce169608",
        "id": 26848150,
        "committer_id": 444635,
        "comments": []
      }
    ]
  },
  "1397529": {
    "authors": [
      1199
    ],
    "num_watchers": 8862,
    "id": 1397529,
    "org_owned": false,
    "relevant_users": {
      "1199": {
        "country_code": "us",
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": "Oakland, California, USA",
        "company": "browserling.com",
        "login": "substack",
        "fake": 0,
        "state": "California",
        "created_at": 1212629624,
        "id": 1199,
        "num_prior_commits": 8,
        "is_owner_member": false,
        "city": "Oakland"
      },
      "10058": {
        "country_code": "us",
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": "Portland, OR",
        "company": "750 Group",
        "login": "shama",
        "fake": 0,
        "state": "Oregon",
        "created_at": 1246167260,
        "id": 10058,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "Portland"
      }
    },
    "project": {
      "full_name": "maxogden/voxel-engine",
      "created_at": 1357281923,
      "description": "3d voxel engine using three.js (webgl). work in progress",
      "html_url": "https://github.com/maxogden/voxel-engine",
      "num_forks": 16,
      "name": "voxel-engine",
      "id": 7433588,
      "language": "JavaScript",
      "mysql_id": 2248399
    },
    "owner": 10488,
    "pull_request": {
      "created_at": 1359361261,
      "issue_id": 24,
      "html_url": "https://github.com/maxogden/voxel-engine/pull/24",
      "number": 24,
      "merged": true,
      "title": "chunk matrices",
      "id": 3860152,
      "opened_by": 1199,
      "body": "This patch adds first-class support for chunk matrices so that we can have detached yet editable geometries like this servo demo: http://substack.net/projects/voxel-servo/\r\n\r\nThe chunk handling logic has mostly been spun out into [voxel-chunks](https://github.com/substack/voxel-chunks). The neat thing about this patch is that user code largely won't need to change in order to take advantage of chunk matrices since an extra chunkMatrix parameter has been added to the intersectAllMeshes return value that gets threaded through to the `'mousedown'` and `'mouseup'` events. When the user calls `createBlock(pos, 1)` or `setBlock(pos, 1)` with the `pos` from the event, `setBlock()` and `createBlock()` know to delegate to the relevant chunk matrix so users mostly won't need to worry about special cases in the coordinate systems used when writing voxel-engine games that use chunk matrices. Hooray!\r\n\r\nChunk matrices will let us build robots and spaceships made of voxel chunks. Some of the next steps include:\r\n* integrating chunk matrix blocks with the collision detection\r\n* being moved along with the chunk matrix under your feet\r\n* collision detection among chunk matrix groups",
      "mysql_id": 1397529
    },
    "issue_events": [
      {
        "created_at": 1359361789,
        "actor_id": 10488,
        "action": "referenced",
        "action_specific": "7000badab5023ca0052355cf3ab609d4d6071a1a",
        "event_id": "35767310"
      },
      {
        "created_at": 1359361789,
        "actor_id": 10488,
        "action": "merged",
        "action_specific": "7000badab5023ca0052355cf3ab609d4d6071a1a",
        "event_id": "35767312"
      },
      {
        "created_at": 1359361789,
        "actor_id": 10488,
        "action": "closed",
        "action_specific": null,
        "event_id": "35767313"
      }
    ],
    "issue_comments": [
      {
        "created_at": 1359363002,
        "user_id": 10058,
        "comment_id": "12768594",
        "body": "Woohoo this will make it much easier to build [voxel-life](http://en.wikipedia.org/wiki/Conway's_Game_of_Life). :D"
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1359360702,
        "author_id": 1199,
        "sha": "33888dee5c4accc4d9c1ab546b4a09cade6a73dc",
        "id": 26843272,
        "committer_id": 1199,
        "comments": []
      },
      {
        "created_at": 1359360621,
        "author_id": 1199,
        "sha": "c5876eddfdfd7ea30fd402cedb825bdcd2902572",
        "id": 26843278,
        "committer_id": 1199,
        "comments": []
      },
      {
        "created_at": 1359282151,
        "author_id": 1199,
        "sha": "00e31fa9e0903da892df1a0ee232ce8f23ad875b",
        "id": 26843284,
        "committer_id": 1199,
        "comments": []
      },
      {
        "created_at": 1359358889,
        "author_id": 1199,
        "sha": "0feda20f0aff8cdffffe5ae96a68fa98a204ea81",
        "id": 26843288,
        "committer_id": 1199,
        "comments": []
      }
    ]
  },
  "1397540": {
    "authors": [
      240943
    ],
    "num_watchers": 8862,
    "id": 1397540,
    "org_owned": true,
    "relevant_users": {
      "40011": {
        "country_code": null,
        "is_project_member": {
          "created_at": 1347206912,
          "ext_ref_id": "505bde74edecb50c9a000e55"
        },
        "type": "USR",
        "deleted": 0,
        "location": null,
        "company": "",
        "login": "titanous",
        "fake": 0,
        "state": null,
        "created_at": 1212975514,
        "id": 40011,
        "num_prior_commits": 0,
        "is_owner_member": true,
        "city": null
      },
      "240943": {
        "country_code": "us",
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": "Seattle",
        "company": null,
        "login": "adamloving",
        "fake": 0,
        "state": "Washington",
        "created_at": 1282698069,
        "id": 240943,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "Seattle"
      }
    },
    "project": {
      "full_name": "tent/tent-status",
      "created_at": 1347214112,
      "description": "Microblogging powered by Tent",
      "html_url": "https://github.com/tent/tent-status",
      "num_forks": 18,
      "name": "tent-status",
      "id": 5738065,
      "language": "CoffeeScript",
      "mysql_id": 903313
    },
    "owner": 551504,
    "pull_request": {
      "created_at": 1359362596,
      "issue_id": 43,
      "html_url": "https://github.com/tent/tent-status/pull/43",
      "number": 43,
      "merged": true,
      "title": "Updating the readme",
      "id": 3860248,
      "opened_by": 240943,
      "body": "When installing postgres for the first time on my mac, I had to run two\r\nadditional commands.",
      "mysql_id": 1397540
    },
    "issue_events": [
      {
        "created_at": 1359362975,
        "actor_id": 40011,
        "action": "referenced",
        "action_specific": "077dee615b2444b1f91b97129d9d55ae02df8e46",
        "event_id": "35768052"
      },
      {
        "created_at": 1359362975,
        "actor_id": 40011,
        "action": "merged",
        "action_specific": "077dee615b2444b1f91b97129d9d55ae02df8e46",
        "event_id": "35768053"
      },
      {
        "created_at": 1359362975,
        "actor_id": 40011,
        "action": "closed",
        "action_specific": null,
        "event_id": "35768054"
      }
    ],
    "issue_comments": [
      {
        "created_at": 1359362984,
        "user_id": 40011,
        "comment_id": "12768588",
        "body": "Thanks!"
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1359362500,
        "author_id": 240943,
        "sha": "6da969c5f918c807d06e844c881bccdf32481596",
        "id": 26958671,
        "committer_id": 240943,
        "comments": []
      }
    ]
  },
  "1397544": {
    "authors": [
      19454
    ],
    "num_watchers": 8862,
    "id": 1397544,
    "org_owned": true,
    "relevant_users": {
      "19454": {
        "country_code": "us",
        "is_project_member": {
          "created_at": 1335033790,
          "ext_ref_id": "52b1fc91bd354378f7010465"
        },
        "type": "USR",
        "deleted": 0,
        "location": "Raleigh, NC",
        "company": "Red Hat",
        "login": "danmcp",
        "fake": 0,
        "state": "North Carolina",
        "created_at": 1290509970,
        "id": 19454,
        "num_prior_commits": 79,
        "is_owner_member": true,
        "city": "Raleigh"
      },
      "301823": {
        "country_code": "us",
        "is_project_member": {
          "created_at": 1335033790,
          "ext_ref_id": "52b1fc91bd354378f70104a5"
        },
        "type": "USR",
        "deleted": 0,
        "location": "Raleigh, NC",
        "company": "Red Hat",
        "login": "openshift-bot",
        "fake": 0,
        "state": "North Carolina",
        "created_at": 1337984511,
        "id": 301823,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "Raleigh"
      }
    },
    "project": {
      "full_name": "openshift/origin-server",
      "created_at": 1335040990,
      "description": "Public open source repository for the OpenShift Origin server components",
      "html_url": "https://github.com/openshift/origin-server",
      "num_forks": 113,
      "name": "origin-server",
      "id": 4097634,
      "language": "Ruby",
      "mysql_id": 1347553
    },
    "owner": 1722,
    "pull_request": {
      "created_at": 1359363154,
      "issue_id": 1225,
      "html_url": "https://github.com/openshift/origin-server/pull/1225",
      "number": 1225,
      "merged": true,
      "title": "Bug 902672",
      "id": 3860282,
      "opened_by": 19454,
      "body": "",
      "mysql_id": 1397544
    },
    "issue_events": [
      {
        "created_at": 1359363161,
        "actor_id": 19454,
        "action": "referenced",
        "action_specific": null,
        "event_id": "35768129"
      },
      {
        "created_at": 1359366580,
        "actor_id": 301823,
        "action": "referenced",
        "action_specific": "fd749c5b43c07b7b4576db8eb1c9de3ebe315177",
        "event_id": "35770272"
      },
      {
        "created_at": 1359366580,
        "actor_id": 301823,
        "action": "merged",
        "action_specific": "fd749c5b43c07b7b4576db8eb1c9de3ebe315177",
        "event_id": "35770273"
      },
      {
        "created_at": 1359366580,
        "actor_id": 301823,
        "action": "closed",
        "action_specific": null,
        "event_id": "35770274"
      }
    ],
    "issue_comments": [
      {
        "created_at": 1359363208,
        "user_id": 301823,
        "comment_id": "12768648",
        "body": "Merge Test Results: SUCCESS (https://ci.dev.openshift.redhat.com/jenkins/job/merge_pull_requests/1555/) (Image: devenv_2736)"
      },
      {
        "created_at": 1359363208,
        "user_id": 301823,
        "comment_id": "12768649",
        "body": "Evaluated up to b35d4160bb3d8c2b5d6c0326abab00d2f62c1794"
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1359363095,
        "author_id": 19454,
        "sha": "b35d4160bb3d8c2b5d6c0326abab00d2f62c1794",
        "id": 26843369,
        "committer_id": 19454,
        "comments": []
      }
    ]
  },
  "1397562": {
    "authors": [
      54609
    ],
    "num_watchers": 8862,
    "id": 1397562,
    "org_owned": true,
    "relevant_users": {
      "21290": {
        "country_code": null,
        "is_project_member": {
          "created_at": 1352282132,
          "corrected_created_at": 1310087820,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": null,
        "company": null,
        "login": "Mottie",
        "fake": 0,
        "state": null,
        "created_at": 1255034387,
        "id": 21290,
        "num_prior_commits": 0,
        "is_owner_member": true,
        "city": null
      },
      "54609": {
        "country_code": "us",
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": "Boulder, CO",
        "company": "USF Health",
        "login": "mlms13",
        "fake": 0,
        "state": "Colorado",
        "created_at": 1317844479,
        "id": 54609,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": null
      }
    },
    "project": {
      "full_name": "CSS-Tricks/AnythingSlider",
      "created_at": 1279851435,
      "description": "A jQuery Slider plugin for anything.",
      "html_url": "https://github.com/CSS-Tricks/AnythingSlider",
      "num_forks": 100,
      "name": "AnythingSlider",
      "id": 792115,
      "language": "CSS",
      "mysql_id": 272689
    },
    "owner": 133526,
    "pull_request": {
      "created_at": 1359140406,
      "issue_id": 485,
      "html_url": "https://github.com/CSS-Tricks/AnythingSlider/pull/485",
      "number": 485,
      "merged": true,
      "title": "Prevent embedded Youtube videos from breaking in iOS",
      "id": 3840730,
      "opened_by": 54609,
      "body": "When using Youtube's older embed code to add a video to my slideshow, the video plugin broke the video in iOS (tested on an iPhone and an iPad Mini). I fixed this by adding a quick check to make sure that the browser has support for at least FlashPlayer version 1 (iOS reports \"0\"). The plugin then only uses swfobject to embed content if Flash is supported by the browser.\r\n\r\nI also removed the `? true : false` ternary operator, because the expression should already evaluate to either `true` or `false`. Let me know if I'm missing something.\r\n\r\nI re-minified the plugin using the YUI Compressor. Let me know if you'd prefer to have it minified some other way.",
      "mysql_id": 1397562
    },
    "issue_events": [
      {
        "created_at": 1359363234,
        "actor_id": 21290,
        "action": "referenced",
        "action_specific": "321d39d7f7e395a9e4cf1e0c092f85cce49cd18b",
        "event_id": "35768179"
      },
      {
        "created_at": 1359363234,
        "actor_id": 21290,
        "action": "merged",
        "action_specific": "321d39d7f7e395a9e4cf1e0c092f85cce49cd18b",
        "event_id": "35768180"
      },
      {
        "created_at": 1359363235,
        "actor_id": 21290,
        "action": "closed",
        "action_specific": null,
        "event_id": "35768181"
      }
    ],
    "issue_comments": [
      {
        "created_at": 1359363237,
        "user_id": 21290,
        "comment_id": "12768657",
        "body": "Thanks, that looks like a good addition!"
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1359139935,
        "author_id": 54609,
        "sha": "3c2b0a4090537616cdeafe391c6ca4a95128deb9",
        "id": 26958699,
        "committer_id": 54609,
        "comments": []
      }
    ]
  },
  "1397568": {
    "authors": [
      64060
    ],
    "num_watchers": 8862,
    "id": 1397568,
    "org_owned": false,
    "relevant_users": {
      "64060": {
        "country_code": null,
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": null,
        "company": null,
        "login": "ihameed",
        "fake": 0,
        "state": null,
        "created_at": 1308780094,
        "id": 64060,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": null
      },
      "103965": {
        "country_code": "de",
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": "Germany",
        "company": null,
        "login": "nh2",
        "fake": 0,
        "state": null,
        "created_at": 1284512390,
        "id": 103965,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": null
      }
    },
    "project": {
      "full_name": "kazu-yamamoto/ghc-mod",
      "created_at": 1268208150,
      "description": "Happy Haskell programming on Emacs/Vim",
      "html_url": "https://github.com/kazu-yamamoto/ghc-mod",
      "num_forks": 25,
      "name": "ghc-mod",
      "id": 555313,
      "language": "Haskell",
      "mysql_id": 59934
    },
    "owner": 15485,
    "pull_request": {
      "created_at": 1358056013,
      "issue_id": 97,
      "html_url": "https://github.com/kazu-yamamoto/ghc-mod/pull/97",
      "number": 97,
      "merged": false,
      "title": "filter self-references from the cabal dependency list ",
      "id": 3654053,
      "opened_by": 64060,
      "body": "Here's my commit message:\r\n\r\n> ghc-mod marks each dependency as an ExposedPackage; this makes GHC fail\r\n> while processing a combined library/executable project where the\r\n> executable depends on the library (see snoyberg/keter as an example)",
      "mysql_id": 1397568
    },
    "issue_events": [],
    "issue_comments": [
      {
        "created_at": 1359363296,
        "user_id": 103965,
        "comment_id": "12768673",
        "body": "Yes please!"
      },
      {
        "created_at": 1362281513,
        "user_id": 64060,
        "comment_id": "14338280",
        "body": "This problem was fixed in a05e4e817d1f28a07e649677d12281250c5eb8d4."
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1358056468,
        "author_id": 64060,
        "sha": "0f93154115ea7f532db89201f5d0e9d8b0c7c6ef",
        "id": 26958718,
        "committer_id": 64060,
        "comments": []
      },
      {
        "created_at": 1358055511,
        "author_id": 64060,
        "sha": "cc51a5d5956e6349a06a86c06424702fc84f2b74",
        "id": 26958720,
        "committer_id": 64060,
        "comments": []
      }
    ]
  },
  "1397572": {
    "authors": [
      447748
    ],
    "num_watchers": 8862,
    "id": 1397572,
    "org_owned": false,
    "relevant_users": {
      "8717": {
        "country_code": "nz",
        "is_project_member": {
          "created_at": 1376626916,
          "corrected_created_at": 1376626834,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": "Wellington, New Zealand",
        "company": "SilverStripe",
        "login": "hafriedlander",
        "fake": 0,
        "state": "Wellington",
        "created_at": 1250128128,
        "id": 8717,
        "num_prior_commits": 0,
        "is_owner_member": true,
        "city": "Wellington"
      },
      "26665": {
        "country_code": null,
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": null,
        "company": null,
        "login": "Zauberfisch",
        "fake": 0,
        "state": null,
        "created_at": 1264005522,
        "id": 26665,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": null
      },
      "447748": {
        "country_code": null,
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": null,
        "company": null,
        "login": "venkatd",
        "fake": 0,
        "state": null,
        "created_at": 1268337996,
        "id": 447748,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": null
      }
    },
    "project": {
      "full_name": "hafriedlander/jquery.entwine",
      "created_at": 1250152629,
      "description": "Concrete UI programming library for jQuery",
      "html_url": "https://github.com/hafriedlander/jquery.entwine",
      "num_forks": 9,
      "name": "jquery.entwine",
      "id": 276698,
      "language": "JavaScript",
      "mysql_id": 1563
    },
    "owner": 8717,
    "pull_request": {
      "created_at": 1359363224,
      "issue_id": 20,
      "html_url": "https://github.com/hafriedlander/jquery.entwine/pull/20",
      "number": 20,
      "merged": false,
      "title": "Replaced the user of $.browser with feature detection for focusin focuso...",
      "id": 3860287,
      "opened_by": 447748,
      "body": "$.browser.msie is currently used to detect if a browser supports focusin. This $.browser has been removed to encourage feature detection instead of browser detection.\r\n\r\nThe change basically calls focus on a test element and checks to see if focusin is triggered. Code was taken from StackOverflow and some tweaks were made.\r\n",
      "mysql_id": 1397572
    },
    "issue_events": [
      {
        "created_at": 1359421622,
        "actor_id": 8717,
        "action": "closed",
        "action_specific": null,
        "event_id": "35868520"
      },
      {
        "created_at": 1359535701,
        "actor_id": 8717,
        "action": "mentioned",
        "action_specific": null,
        "event_id": "36062776"
      },
      {
        "created_at": 1359535701,
        "actor_id": 8717,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "36062777"
      }
    ],
    "issue_comments": [
      {
        "created_at": 1359363437,
        "user_id": 26665,
        "comment_id": "12768698",
        "body": "looks good\r\n\r\nthis pull request fixes #19 "
      },
      {
        "created_at": 1359419332,
        "user_id": 8717,
        "comment_id": "12802646",
        "body": "Hi Venkatd,\r\n\r\nThanks for catching this & having a look at fixing it. I'm just testing this now. At first glance there looks to be an issue in terms of script inclusion order. focusInOut references document.body, but that will be null if entwine is included in the head of the document.\r\n\r\nCan you give me a link to the original StackOverflow question the code came from? Thanks."
      },
      {
        "created_at": 1359419502,
        "user_id": 447748,
        "comment_id": "12802819",
        "body": "The code I used is below:\r\nhttp://stackoverflow.com/questions/7337670/how-to-detect-focusin-support"
      },
      {
        "created_at": 1359419650,
        "user_id": 447748,
        "comment_id": "12802959",
        "body": "I just stumbled into an interesting article on detecting events. Haven't tested the code in the article:\r\nhttp://perfectionkills.com/detecting-event-support-without-browser-sniffing/"
      },
      {
        "created_at": 1359421622,
        "user_id": 8717,
        "comment_id": "12804754",
        "body": "Fixed a different way (by leveraging jQuery's existing focusin detection code) at https://github.com/hafriedlander/jquery.entwine/commit/90457184b1c3e0e251ddaf5341518fc6ea9b4946\r\n"
      },
      {
        "created_at": 1359423416,
        "user_id": 8717,
        "comment_id": "12806259",
        "body": "Stupid typo. Fixed at https://github.com/hafriedlander/jquery.entwine/commit/729e58e77eeaf93caf8d7f1cdac407ac9879a2b2"
      },
      {
        "created_at": 1359535701,
        "user_id": 26665,
        "comment_id": "12874162",
        "body": "nice work fixing it so fast, thanks @hafriedlander "
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1359363092,
        "author_id": 447748,
        "sha": "ede9723b4e61c1643de96716a7424437ebdf3007",
        "id": 26852792,
        "committer_id": 447748,
        "comments": []
      }
    ]
  },
  "1397593": {
    "authors": [
      1319913,
      24038
    ],
    "num_watchers": 8862,
    "id": 1397593,
    "org_owned": false,
    "relevant_users": {
      "24038": {
        "country_code": null,
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": null,
        "company": "Bendyworks",
        "login": "mathias",
        "fake": 0,
        "state": null,
        "created_at": 1205826622,
        "id": 24038,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": null
      },
      "1319913": {
        "country_code": "us",
        "is_project_member": {
          "created_at": 1361832927,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": "Madison, WI",
        "company": "adorable.io",
        "login": "rylnd",
        "fake": 0,
        "state": "Wisconsin",
        "created_at": 1299586981,
        "id": 1319913,
        "num_prior_commits": 10,
        "is_owner_member": true,
        "city": "Madison"
      }
    },
    "project": {
      "full_name": "rylnd/dotfiles",
      "created_at": 1334597855,
      "description": "A collection of scripts and commands that I use every day.",
      "html_url": "https://github.com/rylnd/dotfiles",
      "num_forks": 3,
      "name": "dotfiles",
      "id": 4041146,
      "language": "Shell",
      "mysql_id": 2359500
    },
    "owner": 1319913,
    "pull_request": {
      "created_at": 1358028080,
      "issue_id": 6,
      "html_url": "https://github.com/rylnd/dotfiles/pull/6",
      "number": 6,
      "merged": false,
      "title": "Hybrid mode",
      "id": 3652482,
      "opened_by": 24038,
      "body": "Intended to replace online mode and the regular script by merging their functionality.\r\n\r\nCould be cleaned up as far as the output it echoes, as well as possibly adding some instructions to the README. Just let me know what should change and I can change it.\r\n\r\nAlso note that the instructions will probably have to be updated after the merge, since this brings the online-mode instructions back into master.",
      "mysql_id": 1397593
    },
    "issue_events": [
      {
        "created_at": 1359363701,
        "actor_id": 24038,
        "action": "mentioned",
        "action_specific": null,
        "event_id": "35768467"
      },
      {
        "created_at": 1359363701,
        "actor_id": 24038,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "35768468"
      }
    ],
    "issue_comments": [
      {
        "created_at": 1358056339,
        "user_id": 1319913,
        "comment_id": "12188272",
        "body": "I think this is a great idea. The `online_mode` branch, while useful, is annoying to maintain. However, I think I'd prefer if it tried to find the author locally before asking GitHub.\r\n\r\nOther thoughts:\r\n* I'd like tests for the different cases (finding locally, finding on GitHub, finding nowhere, etc.)\r\n* While I like the idea of a separate file solely for listing authors, I already feel bad about putting _two_ files in $HOME, so three is unacceptable. Maybe we could make it a separate function (inside .pair) that acts like a dictionary?\r\n* 9c159ab is unnecessary and should be removed\r\n* Documentation and messages will need to be changed, but I can help with that.\r\n\r\nOne last thing: be wary of zsh compatibility. You can test this by changing the shebang in pair_test to zsh and running it in zsh.\r\n\r\nThanks again for the help!"
      },
      {
        "created_at": 1358294897,
        "user_id": 24038,
        "comment_id": "12286485",
        "body": "Found a bug in my hybrid mode:\r\nIf Github API doesn't find user and local pairs file doesn't have user, it still puts in an 'and' but doesn't throw an error. See output below:\r\n\r\n```\r\n$ pair mathias sarandi\r\nCouldn't find author name for Github username: sarandi.\r\nAre you online, and does their Github profile have a name?\r\nLoading from /Users/mathiasx/.pairs instead\r\nuser.name  = Matt Gauger and \r\nuser.email = dev+mathias+sarandi@bendyworks.com\r\n```"
      },
      {
        "created_at": 1358298804,
        "user_id": 1319913,
        "comment_id": "12289546",
        "body": "Yep. I think it should:\r\n\r\n1. Check whether the variable exists locally\r\n2. Check whether GitHub knows about it.\r\n3. Exit with a 1 otherwise.\r\n\r\nLet me know if you agree/disagree with my previous comment about behavior, and if you need anything else."
      },
      {
        "created_at": 1359363701,
        "user_id": 1319913,
        "comment_id": "12768752",
        "body": "@mathias I think this should be addressed with a5f8c510. Adding a separate file for the local username/author cache is still outstanding, so maybe we can close this and open another issue for that?"
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1358028002,
        "author_id": 243381,
        "sha": "8f4908655e38a31de041d51b57be6e5b22707d8c",
        "id": 26776146,
        "committer_id": 24038,
        "comments": []
      },
      {
        "created_at": 1355451857,
        "author_id": 1319913,
        "sha": "aa7a1673211d69f651c28bff6ecbe3b87a925f0c",
        "id": 26776147,
        "committer_id": 1319913,
        "comments": []
      },
      {
        "created_at": 1334966347,
        "author_id": 1319913,
        "sha": "6697ec5b9f323e99113298affd8e393145bdcb90",
        "id": 26776155,
        "committer_id": 1319913,
        "comments": []
      },
      {
        "created_at": 1340313330,
        "author_id": 1319913,
        "sha": "ee2b2f28446f5c634cd527fa80de5b156dc4b4ef",
        "id": 26776158,
        "committer_id": 1319913,
        "comments": []
      },
      {
        "created_at": 1348014357,
        "author_id": 1319913,
        "sha": "9c159ab1db7a5af42f19c95a1c10d40514b7b530",
        "id": 26776159,
        "committer_id": 1319913,
        "comments": []
      },
      {
        "created_at": 1348167889,
        "author_id": 1319913,
        "sha": "2ba4d006decd35c5406f9d0a14f2cfdcc4b33b9b",
        "id": 26776161,
        "committer_id": 1319913,
        "comments": []
      },
      {
        "created_at": 1354934876,
        "author_id": 1319913,
        "sha": "573b26cc965f1f85baacc04498a4668ed3d85409",
        "id": 26776162,
        "committer_id": 1319913,
        "comments": []
      }
    ]
  },
  "1397594": {
    "authors": [
      98678
    ],
    "num_watchers": 8862,
    "id": 1397594,
    "org_owned": false,
    "relevant_users": {
      "98678": {
        "country_code": "de",
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": "Bremen",
        "company": null,
        "login": "jceb",
        "fake": 0,
        "state": "Bremen",
        "created_at": 1246700952,
        "id": 98678,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "Bremen"
      },
      "110685": {
        "country_code": "us",
        "is_project_member": {
          "created_at": 1357636885,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": "Philadelphia, PA",
        "company": null,
        "login": "godlygeek",
        "fake": 0,
        "state": "penna",
        "created_at": 1224224405,
        "id": 110685,
        "num_prior_commits": 0,
        "is_owner_member": true,
        "city": "Philadelphia"
      }
    },
    "project": {
      "full_name": "godlygeek/tabular",
      "created_at": 1236079156,
      "description": "Vim script for text filtering and alignment",
      "html_url": "https://github.com/godlygeek/tabular",
      "num_forks": 23,
      "name": "tabular",
      "id": 141752,
      "language": "VimL",
      "mysql_id": 39025
    },
    "owner": 110685,
    "pull_request": {
      "created_at": 1357941409,
      "issue_id": 19,
      "html_url": "https://github.com/godlygeek/tabular/pull/19",
      "number": 19,
      "merged": false,
      "title": "use vim's search pattern in Tabularize",
      "id": 3643351,
      "opened_by": 98678,
      "body": "- also set vim's search pattern when a pattern was provided to Tabularize\r\n- this makes :Tabularize behave more like a tightly integrated vim feature, e.g. :g",
      "mysql_id": 1397594
    },
    "issue_events": [],
    "issue_comments": [
      {
        "created_at": 1359363598,
        "user_id": 110685,
        "comment_id": "12768729",
        "body": "I'm considering this.  I'm not sure if this is the right place to put this change - `s:ParsePattern()` is called from 2 places, `AddTabularPattern()` and `Tabularize()`.  This logic might make sense for `:Tabularize`, but I'm not sure about `:AddTabularPattern` - in particular, whether `:AddTabularPattern foo /bar/` should change `@/`.\r\n\r\nThis would be a pretty big behavior change - people may have existing maps, etc that don't change affect their search pattern today but would if we made this change.  The other concern is that there's a (maybe undocumented?) feature of `:Tabular` - if you run `:Tab foo`, the 'foo' is remembered, so the next time you run `:Tab` with no arguments, 'foo' gets reused.  This would break that feature, at least for tabular pipelines.\r\n\r\nThat said there are definitely some strong arguments to be made for integrating tabular with `@/` - I'll need to think about this a bit more."
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1357941189,
        "author_id": 98678,
        "sha": "72d919793218d39e49660cc5a767711db2ac10c6",
        "id": 25606155,
        "committer_id": 98678,
        "comments": []
      }
    ]
  },
  "1397599": {
    "authors": [
      33359
    ],
    "num_watchers": 8862,
    "id": 1397599,
    "org_owned": true,
    "relevant_users": {
      "3871": {
        "country_code": null,
        "is_project_member": {
          "created_at": 1403556042,
          "corrected_created_at": 1403552347,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": "✈",
        "company": null,
        "login": "sindresorhus",
        "fake": 0,
        "state": null,
        "created_at": 1261364222,
        "id": 3871,
        "num_prior_commits": 0,
        "is_owner_member": true,
        "city": null
      },
      "33359": {
        "country_code": "de",
        "is_project_member": {
          "created_at": 1362010307,
          "corrected_created_at": 1361413715,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": "Berlin",
        "company": "tweek.tv",
        "login": "eskimoblood",
        "fake": 0,
        "state": "Berlin",
        "created_at": 1239272665,
        "id": 33359,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "Berlin"
      },
      "190180": {
        "country_code": "fr",
        "is_project_member": {
          "created_at": 1355054219,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": "Mouans-Sartoux, France",
        "company": null,
        "login": "sleeper",
        "fake": 0,
        "state": "Provence-Alpes-Côte d'Azur",
        "created_at": 1224852690,
        "id": 190180,
        "num_prior_commits": 0,
        "is_owner_member": true,
        "city": "Mouans-Sartoux"
      }
    },
    "project": {
      "full_name": "yeoman/grunt-usemin",
      "created_at": 1354729918,
      "description": "Replaces references to non-optimized scripts or stylesheets into a set of HTML files (or any templates/views)",
      "html_url": "https://github.com/yeoman/grunt-usemin",
      "num_forks": 314,
      "name": "grunt-usemin",
      "id": 7017359,
      "language": "JavaScript",
      "mysql_id": 1852391
    },
    "owner": 41881,
    "pull_request": {
      "created_at": 1358215757,
      "issue_id": 19,
      "html_url": "https://github.com/yeoman/grunt-usemin/pull/19",
      "number": 19,
      "merged": true,
      "title": "made usemin work with the multitask version of requirejs",
      "id": 3672188,
      "opened_by": 33359,
      "body": "should fix #15 ",
      "mysql_id": 1397599
    },
    "issue_events": [
      {
        "created_at": 1358216747,
        "actor_id": 33359,
        "action": "mentioned",
        "action_specific": null,
        "event_id": "34356344"
      },
      {
        "created_at": 1358216747,
        "actor_id": 33359,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "34356345"
      },
      {
        "created_at": 1358217170,
        "actor_id": 3871,
        "action": "mentioned",
        "action_specific": null,
        "event_id": "34357274"
      },
      {
        "created_at": 1358217170,
        "actor_id": 3871,
        "action": "subscribed",
        "action_specific": null,
        "event_id": "34357275"
      },
      {
        "created_at": 1359363762,
        "actor_id": 190180,
        "action": "referenced",
        "action_specific": "51958eab750a9ca2b481001fd21c085aca21baff",
        "event_id": "35768516"
      },
      {
        "created_at": 1359363762,
        "actor_id": 190180,
        "action": "merged",
        "action_specific": "51958eab750a9ca2b481001fd21c085aca21baff",
        "event_id": "35768517"
      },
      {
        "created_at": 1359363762,
        "actor_id": 190180,
        "action": "closed",
        "action_specific": null,
        "event_id": "35768519"
      }
    ],
    "issue_comments": [
      {
        "created_at": 1358216747,
        "user_id": 3871,
        "comment_id": "12243378",
        "body": "@eskimoblood Can you fix the merge conflict?"
      },
      {
        "created_at": 1358216949,
        "user_id": 190180,
        "comment_id": "12243528",
        "body": "Hi, \r\nFirst of all: thanks ;)\r\nThen .. would you mind rebasing on master ... Sorry for that I was just fixing #16, and introduced the baseUrl ;)\r\nAdditionally have you signed the [CLA](https://github.com/yeoman/yeoman/blob/master/contributing.md#contributor-license-agreement) ?"
      },
      {
        "created_at": 1358217170,
        "user_id": 33359,
        "comment_id": "12243738",
        "body": "@sindresorhus Sure."
      },
      {
        "created_at": 1359363780,
        "user_id": 190180,
        "comment_id": "12768770",
        "body": "Sorry for the delay in merging !\r\nThanks for your help on this."
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1358208683,
        "author_id": 33359,
        "sha": "020b5c6e32fa01ac3e683976d21eef2babe13102",
        "id": 26790714,
        "committer_id": 33359,
        "comments": []
      }
    ]
  },
  "1397614": {
    "authors": [
      1435084
    ],
    "num_watchers": 8862,
    "id": 1397614,
    "org_owned": true,
    "relevant_users": {
      "51297": {
        "country_code": "us",
        "is_project_member": {
          "created_at": 1364502027,
          "corrected_created_at": 1364471202,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": "San Francisco, CA",
        "company": "Treasure Data, Inc.",
        "login": "kzk",
        "fake": 0,
        "state": "California",
        "created_at": 1248556801,
        "id": 51297,
        "num_prior_commits": 0,
        "is_owner_member": true,
        "city": "SF"
      },
      "1435084": {
        "country_code": null,
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": null,
        "company": null,
        "login": "CFWKBMIX",
        "fake": 1,
        "state": null,
        "created_at": 1359137038,
        "id": 1435084,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": null
      }
    },
    "project": {
      "full_name": "treasure-data/td-agent",
      "created_at": 1312065195,
      "description": "Packaging Scripts for Treasure Agent (td-agent or Fluentd)",
      "html_url": "https://github.com/treasure-data/td-agent",
      "num_forks": 49,
      "name": "td-agent",
      "id": 2129699,
      "language": "Shell",
      "mysql_id": 259019
    },
    "owner": 131197,
    "pull_request": {
      "created_at": 1359362765,
      "issue_id": 13,
      "html_url": "https://github.com/treasure-data/td-agent/pull/13",
      "number": 13,
      "merged": true,
      "title": "\"/etc/init.d/td-agent stop\" fails stoping the daemon",
      "id": 3860260,
      "opened_by": 16244,
      "body": "I'm using td-agent 1.1.11-1 on Ubuntu Server 10.04.\r\n\r\n\"/etc/init.d/td-agent stop\" often fails after a long time:\r\n\r\n```\r\n$ time sudo /etc/init.d/td-agent stop\r\n * Stopping td-agent td-agent                                       [fail]\r\n\r\nreal\t0m35.053s\r\nuser\t0m0.320s\r\nsys\t0m0.140s\r\n```\r\n\r\nThis patch fixes the issue because the process name of td-agent is actually \"ruby\", not \"td-agent\".\r\n\r\n> −n, −−name process-name\r\n> Check for processes with the name process-name (according to /proc/pid/stat).\r\n",
      "mysql_id": 1397614
    },
    "issue_events": [],
    "issue_comments": [
      {
        "created_at": 1359397911,
        "user_id": 51297,
        "comment_id": "12784002",
        "body": "confirmed this is working both on Lucid and Precise. Thanks for your pull request!"
      },
      {
        "created_at": 1359363921,
        "user_id": 51297,
        "comment_id": "12768799",
        "body": "Thanks, will review shortly! :+1: "
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1359360965,
        "author_id": 1435084,
        "sha": "a24af05afe74712343410881ee3c41b069c965b1",
        "id": 26843363,
        "committer_id": 1435084,
        "comments": []
      }
    ]
  },
  "1397636": {
    "authors": [
      67864
    ],
    "num_watchers": 8862,
    "id": 1397636,
    "org_owned": false,
    "relevant_users": {
      "10488": {
        "country_code": null,
        "is_project_member": {
          "created_at": 1358822629,
          "corrected_created_at": 1358806507,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": null,
        "company": "Pouch (recruiters: please don't ever email me)",
        "login": "maxogden",
        "fake": 0,
        "state": null,
        "created_at": 1228992720,
        "id": 10488,
        "num_prior_commits": 0,
        "is_owner_member": true,
        "city": null
      },
      "67864": {
        "country_code": "au",
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": "Sydney, AU",
        "company": null,
        "login": "hughsk",
        "fake": 0,
        "state": "New South Wales",
        "created_at": 1295325782,
        "id": 67864,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": "Sydney"
      }
    },
    "project": {
      "full_name": "maxogden/voxel-engine",
      "created_at": 1357281923,
      "description": "3d voxel engine using three.js (webgl). work in progress",
      "html_url": "https://github.com/maxogden/voxel-engine",
      "num_forks": 16,
      "name": "voxel-engine",
      "id": 7433588,
      "language": "JavaScript",
      "mysql_id": 2248399
    },
    "owner": 10488,
    "pull_request": {
      "created_at": 1359364098,
      "issue_id": 25,
      "html_url": "https://github.com/maxogden/voxel-engine/pull/25",
      "number": 25,
      "merged": true,
      "title": "Add Game.prototype.render()",
      "id": 3860347,
      "opened_by": 67864,
      "body": "Nearly ready with a GLSL post-processing module for voxel.js, but I need to be able to override the default render call for `Game` - this should do the trick :)\r\n\r\nThis way you can just do:\r\n\r\n``` javascript\r\nvar game = require('voxel-engine')()\r\ngame.render = function() {\r\n  // some other things instead\r\n};\r\n```",
      "mysql_id": 1397636
    },
    "issue_events": [],
    "issue_comments": [
      {
        "created_at": 1359364300,
        "user_id": 10488,
        "comment_id": "12768880",
        "body": "published to npm at `0.3.8`"
      },
      {
        "created_at": 1359364152,
        "user_id": 10488,
        "comment_id": "12768851",
        "body": "wow! cant wait to see the GLSL stuff!!"
      },
      {
        "created_at": 1359364836,
        "user_id": 67864,
        "comment_id": "12768994",
        "body": "Thanks! Just gotta code up the demo :)"
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1359361451,
        "author_id": 67864,
        "sha": "3f24acb8545bbd904af61c0ed1bd917719762218",
        "id": 26843391,
        "committer_id": 67864,
        "comments": []
      }
    ]
  },
  "1397665": {
    "authors": [
      38415
    ],
    "num_watchers": 8862,
    "id": 1397665,
    "org_owned": false,
    "relevant_users": {
      "38180": {
        "country_code": "il",
        "is_project_member": {
          "created_at": 1353348976,
          "corrected_created_at": 1348565709,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": "Israel",
        "company": "Suite Solutions",
        "login": "snoyberg",
        "fake": 0,
        "state": null,
        "created_at": 1233010690,
        "id": 38180,
        "num_prior_commits": 0,
        "is_owner_member": true,
        "city": null
      },
      "38415": {
        "country_code": null,
        "is_project_member": {
          "created_at": 1358942203,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": null,
        "company": null,
        "login": "litherum",
        "fake": 0,
        "state": null,
        "created_at": 1310792207,
        "id": 38415,
        "num_prior_commits": 3,
        "is_owner_member": false,
        "city": null
      }
    },
    "project": {
      "full_name": "snoyberg/http-conduit",
      "created_at": 1325853191,
      "description": "Superseded by: https://github.com/snoyberg/http-client",
      "html_url": "https://github.com/snoyberg/http-conduit",
      "num_forks": 28,
      "name": "http-conduit",
      "id": 3116462,
      "language": "Haskell",
      "mysql_id": 11030
    },
    "owner": 38180,
    "pull_request": {
      "created_at": 1359328813,
      "issue_id": 98,
      "html_url": "https://github.com/snoyberg/http-conduit/pull/98",
      "number": 98,
      "merged": true,
      "title": "Cookie Jar instances and documentation",
      "id": 3857849,
      "opened_by": 38415,
      "body": "Added a 'monoid' instance for CookieJars, as well as some\r\ndocumentation regarding the interaction of 'redirectCount' and\r\ncookie jars and cookie headers",
      "mysql_id": 1397665
    },
    "issue_events": [],
    "issue_comments": [
      {
        "created_at": 1359413097,
        "user_id": 38415,
        "comment_id": "12796987",
        "body": "I'll do it. I added the documentation just so we can be consistent until then :-)"
      },
      {
        "created_at": 1359364582,
        "user_id": 38180,
        "comment_id": "12768940",
        "body": "This is definitely an improvement over what we have now, but I *do* think it makes sense to go in the direction of not overloading the meaning of `redirectCount`. Do you want to write such a patch, or should I?"
      }
    ],
    "pr_comments": [],
    "commits": [
      {
        "created_at": 1359329718,
        "author_id": 38415,
        "sha": "e1d007284effde04dd8b4e0970d708c4635f96dd",
        "id": 26925297,
        "committer_id": 38415,
        "comments": []
      },
      {
        "created_at": 1359328625,
        "author_id": 38415,
        "sha": "772e7738e77f770902af5cdd3ddd409e273a90b5",
        "id": 27331690,
        "committer_id": 38415,
        "comments": []
      }
    ]
  },
  "1397677": {
    "authors": [
      1053032
    ],
    "num_watchers": 8862,
    "id": 1397677,
    "org_owned": true,
    "relevant_users": {
      "15276": {
        "country_code": null,
        "is_project_member": {
          "created_at": 1343481736,
          "corrected_created_at": 1325740218,
          "ext_ref_id": false
        },
        "type": "USR",
        "deleted": 0,
        "location": null,
        "company": null,
        "login": "caelaislinn",
        "fake": 0,
        "state": null,
        "created_at": 1315499276,
        "id": 15276,
        "num_prior_commits": 0,
        "is_owner_member": false,
        "city": null
      },
      "1053032": {
        "country_code": null,
        "is_project_member": false,
        "type": "USR",
        "deleted": 0,
        "location": null,
        "company": null,
        "login": "GauHelldragon",
        "fake": 0,
        "state": null,
        "created_at": 1353283532,
        "id": 1053032,
        "num_prior_commits": 11,
        "is_owner_member": false,
        "city": null
      }
    },
    "project": {
      "full_name": "Baystation12/Baystation12",
      "created_at": 1320520361,
      "description": "The code for Baystation12's branch of SS13. Developers: please don't forget to update the changelog. Thanks!",
      "html_url": "https://github.com/Baystation12/Baystation12",
      "num_forks": 80,
      "name": "Baystation12",
      "id": 2715933,
      "language": "C++",
      "mysql_id": 3275
    },
    "owner": 15234,
    "pull_request": {
      "created_at": 1359028118,
      "issue_id": 2216,
      "html_url": "https://github.com/Baystation12/Baystation12/pull/2216",
      "number": 2216,
      "merged": false,
      "title": "Re-added Seedbags, Added more juices",
      "id": 3815908,
      "opened_by": 1053032,
      "body": "Readded seedbags (for like the 5th time)\r\n\r\nAdded Apple and grape juice. Grape juice can be turned into wine\r\nWatermelon juice can be seen in glasses now",
      "mysql_id": 1397677
    },
    "issue_events": [],
    "issue_comments": [
      {
        "created_at": 1359364705,
        "user_id": 1053032,
        "comment_id": "12768966",
        "body": "nevermind"
      }
    ],
    "pr_comments": [
      {
        "created_at": 1359042367,
        "commit_id": 26303454,
        "comment_id": "2756956",
        "user_id": 15276,
        "position": 11,
        "pull_request_id": 840499,
        "body": "There's a distillery system in code which was added a week ago, and there may be room to expand it to other alcohols. If you want to look into that instead of magically turning grape juice into wine via blending, I won't merge this just yet. "
      }
    ],
    "commits": [
      {
        "created_at": 1359027858,
        "author_id": 1053032,
        "sha": "f727b540b0ed2fa2d75d8b3dfcce6b227ea5e216",
        "id": 26303454,
        "committer_id": 1053032,
        "comments": []
      },
      {
        "created_at": 1359020027,
        "author_id": 1053032,
        "sha": "c29913947eb5935841979e0517de01a49276deba",
        "id": 26303455,
        "committer_id": 1053032,
        "comments": []
      },
      {
        "created_at": 1358370644,
        "author_id": 1053032,
        "sha": "4bcec937a3d0b7b7dd655058862d45b5a0cf4faf",
        "id": 26303469,
        "committer_id": 1053032,
        "comments": []
      },
      {
        "created_at": 1358937197,
        "author_id": 1053032,
        "sha": "7f04ad45f21549c4b60f9e072d4a5977d9ba9609",
        "id": 26303470,
        "committer_id": 1053032,
        "comments": []
      }
    ]
  }
}
